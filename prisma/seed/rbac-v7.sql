-- ============================================================================
-- RBAC Seed Data v7 - Auto-generated
-- Generated from RBAC.schema.v7.yml
-- Date: 2025-10-27
-- ============================================================================
-- This file contains parameterized SQL for seeding RBAC data
-- Parameters will be replaced by seed-rbac-v7.ts at runtime
-- ============================================================================

-- ============================================================================
-- INSERT PERMISSIONS (Global - No Tenant)
-- ============================================================================
INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenant_read_id, 'Tenant.read', 'View Tenant', 'View and access tenant records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenant_update_id, 'Tenant.update', 'Update Tenant', 'Modify existing tenant records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenant_deactivate_id, 'Tenant.deactivate', 'Deactivate Tenant', 'Deactivate tenant records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantsettings_read_id, 'TenantSettings.read', 'View Tenant Settings', 'View and access tenant settings records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantsettings_update_id, 'TenantSettings.update', 'Update Tenant Settings', 'Modify existing tenant settings records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantsettings_activate_id, 'TenantSettings.activate', 'Activate Tenant Settings', 'Activate tenant settings records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantsettings_deactivate_id, 'TenantSettings.deactivate', 'Deactivate Tenant Settings', 'Deactivate tenant settings records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantmetrics_read_id, 'TenantMetrics.read', 'View Tenant Metrics', 'View and access tenant metrics records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantmetrics_export_id, 'TenantMetrics.export', 'Export Tenant Metrics', 'Export data for tenant metrics records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantfeatureflag_read_id, 'TenantFeatureFlag.read', 'View Tenant Feature Flag', 'View and access tenant feature flag records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantfeatureflag_create_id, 'TenantFeatureFlag.create', 'Create Tenant Feature Flag', 'Create new tenant feature flag records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantfeatureflag_update_id, 'TenantFeatureFlag.update', 'Update Tenant Feature Flag', 'Modify existing tenant feature flag records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantfeatureflag_activate_id, 'TenantFeatureFlag.activate', 'Activate Tenant Feature Flag', 'Activate tenant feature flag records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantfeatureflag_deactivate_id, 'TenantFeatureFlag.deactivate', 'Deactivate Tenant Feature Flag', 'Deactivate tenant feature flag records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantusagerecord_read_id, 'TenantUsageRecord.read', 'View Tenant Usage Record', 'View and access tenant usage record records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantusagerecord_export_id, 'TenantUsageRecord.export', 'Export Tenant Usage Record', 'Export data for tenant usage record records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpricelist_read_id, 'TenantPriceList.read', 'View Tenant Price List', 'View and access tenant price list records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpricelist_create_id, 'TenantPriceList.create', 'Create Tenant Price List', 'Create new tenant price list records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpricelist_update_id, 'TenantPriceList.update', 'Update Tenant Price List', 'Modify existing tenant price list records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpricelist_activate_id, 'TenantPriceList.activate', 'Activate Tenant Price List', 'Activate tenant price list records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpricelist_deactivate_id, 'TenantPriceList.deactivate', 'Deactivate Tenant Price List', 'Deactivate tenant price list records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpriceoverride_read_id, 'TenantPriceOverride.read', 'View Tenant Price Override', 'View and access tenant price override records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpriceoverride_create_id, 'TenantPriceOverride.create', 'Create Tenant Price Override', 'Create new tenant price override records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpriceoverride_update_id, 'TenantPriceOverride.update', 'Update Tenant Price Override', 'Modify existing tenant price override records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpriceoverride_soft_delete_id, 'TenantPriceOverride.soft_delete', 'Delete Tenant Price Override', 'Delete (soft) tenant price override records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantpriceoverride_restore_id, 'TenantPriceOverride.restore', 'Restore Tenant Price Override', 'Restore deleted tenant price override records within tenant scope', 'tenant_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_read_id, 'User.read', 'View User', 'View and access user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_create_id, 'User.create', 'Create User', 'Create new user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_update_id, 'User.update', 'Update User', 'Modify existing user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_soft_delete_id, 'User.soft_delete', 'Delete User', 'Delete (soft) user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_restore_id, 'User.restore', 'Restore User', 'Restore deleted user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_activate_id, 'User.activate', 'Activate User', 'Activate user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_deactivate_id, 'User.deactivate', 'Deactivate User', 'Deactivate user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_lock_id, 'User.lock', 'Lock User', 'Lock user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_user_unlock_id, 'User.unlock', 'Unlock User', 'Unlock user records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_read_id, 'Member.read', 'View Member', 'View and access member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_create_id, 'Member.create', 'Create Member', 'Create new member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_update_id, 'Member.update', 'Update Member', 'Modify existing member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_soft_delete_id, 'Member.soft_delete', 'Delete Member', 'Delete (soft) member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_restore_id, 'Member.restore', 'Restore Member', 'Restore deleted member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_assign_id, 'Member.assign', 'Assign Member', 'Assign member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_unassign_id, 'Member.unassign', 'Unassign Member', 'Remove assignment of member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_transfer_id, 'Member.transfer', 'Transfer Member', 'Transfer ownership of member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_activate_id, 'Member.activate', 'Activate Member', 'Activate member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_member_deactivate_id, 'Member.deactivate', 'Deactivate Member', 'Deactivate member records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_read_id, 'MemberRole.read', 'View Member Role', 'View and access member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_create_id, 'MemberRole.create', 'Create Member Role', 'Create new member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_update_id, 'MemberRole.update', 'Update Member Role', 'Modify existing member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_soft_delete_id, 'MemberRole.soft_delete', 'Delete Member Role', 'Delete (soft) member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_restore_id, 'MemberRole.restore', 'Restore Member Role', 'Restore deleted member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_assign_id, 'MemberRole.assign', 'Assign Member Role', 'Assign member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_unassign_id, 'MemberRole.unassign', 'Unassign Member Role', 'Remove assignment of member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberrole_transfer_id, 'MemberRole.transfer', 'Transfer Member Role', 'Transfer ownership of member role records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_membersettings_read_id, 'MemberSettings.read', 'View Member Settings', 'View and access member settings records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_membersettings_update_id, 'MemberSettings.update', 'Update Member Settings', 'Modify existing member settings records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_membersettings_activate_id, 'MemberSettings.activate', 'Activate Member Settings', 'Activate member settings records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_membersettings_deactivate_id, 'MemberSettings.deactivate', 'Deactivate Member Settings', 'Deactivate member settings records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_read_id, 'MemberDocument.read', 'View Member Document', 'View and access member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_create_id, 'MemberDocument.create', 'Create Member Document', 'Create new member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_update_id, 'MemberDocument.update', 'Update Member Document', 'Modify existing member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_soft_delete_id, 'MemberDocument.soft_delete', 'Delete Member Document', 'Delete (soft) member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_restore_id, 'MemberDocument.restore', 'Restore Member Document', 'Restore deleted member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_approve_id, 'MemberDocument.approve', 'Approve Member Document', 'Approve member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_memberdocument_reject_id, 'MemberDocument.reject', 'Reject Member Document', 'Reject member document records within tenant scope', 'identity_access',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_read_id, 'Role.read', 'View Role', 'View and access role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_create_id, 'Role.create', 'Create Role', 'Create new role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_update_id, 'Role.update', 'Update Role', 'Modify existing role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_soft_delete_id, 'Role.soft_delete', 'Delete Role', 'Delete (soft) role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_restore_id, 'Role.restore', 'Restore Role', 'Restore deleted role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_activate_id, 'Role.activate', 'Activate Role', 'Activate role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_role_deactivate_id, 'Role.deactivate', 'Deactivate Role', 'Deactivate role records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_permission_read_id, 'Permission.read', 'View Permission', 'View and access permission records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rolepermission_read_id, 'RolePermission.read', 'View Role Permission', 'View and access role permission records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rolepermission_create_id, 'RolePermission.create', 'Create Role Permission', 'Create new role permission records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rolepermission_soft_delete_id, 'RolePermission.soft_delete', 'Delete Role Permission', 'Delete (soft) role permission records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rolepermission_restore_id, 'RolePermission.restore', 'Restore Role Permission', 'Restore deleted role permission records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_read_id, 'ApiKey.read', 'View Api Key', 'View and access api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_create_id, 'ApiKey.create', 'Create Api Key', 'Create new api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_update_id, 'ApiKey.update', 'Update Api Key', 'Modify existing api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_soft_delete_id, 'ApiKey.soft_delete', 'Delete Api Key', 'Delete (soft) api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_restore_id, 'ApiKey.restore', 'Restore Api Key', 'Restore deleted api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_activate_id, 'ApiKey.activate', 'Activate Api Key', 'Activate api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apikey_deactivate_id, 'ApiKey.deactivate', 'Deactivate Api Key', 'Deactivate api key records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_read_id, 'AuthFactor.read', 'View Auth Factor', 'View and access auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_create_id, 'AuthFactor.create', 'Create Auth Factor', 'Create new auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_update_id, 'AuthFactor.update', 'Update Auth Factor', 'Modify existing auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_soft_delete_id, 'AuthFactor.soft_delete', 'Delete Auth Factor', 'Delete (soft) auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_restore_id, 'AuthFactor.restore', 'Restore Auth Factor', 'Restore deleted auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_activate_id, 'AuthFactor.activate', 'Activate Auth Factor', 'Activate auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_authfactor_deactivate_id, 'AuthFactor.deactivate', 'Deactivate Auth Factor', 'Deactivate auth factor records within tenant scope', 'rbac_security',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_read_id, 'Account.read', 'View Account', 'View and access account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_create_id, 'Account.create', 'Create Account', 'Create new account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_update_id, 'Account.update', 'Update Account', 'Modify existing account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_soft_delete_id, 'Account.soft_delete', 'Delete Account', 'Delete (soft) account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_restore_id, 'Account.restore', 'Restore Account', 'Restore deleted account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_activate_id, 'Account.activate', 'Activate Account', 'Activate account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_deactivate_id, 'Account.deactivate', 'Deactivate Account', 'Deactivate account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_read_id, 'AccountAddress.read', 'View Account Address', 'View and access account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_create_id, 'AccountAddress.create', 'Create Account Address', 'Create new account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_update_id, 'AccountAddress.update', 'Update Account Address', 'Modify existing account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_soft_delete_id, 'AccountAddress.soft_delete', 'Delete Account Address', 'Delete (soft) account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_restore_id, 'AccountAddress.restore', 'Restore Account Address', 'Restore deleted account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_read_id, 'Contact.read', 'View Contact', 'View and access contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_create_id, 'Contact.create', 'Create Contact', 'Create new contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_update_id, 'Contact.update', 'Update Contact', 'Modify existing contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_soft_delete_id, 'Contact.soft_delete', 'Delete Contact', 'Delete (soft) contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_restore_id, 'Contact.restore', 'Restore Contact', 'Restore deleted contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_read_id, 'Lead.read', 'View Lead', 'View and access lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_create_id, 'Lead.create', 'Create Lead', 'Create new lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_update_id, 'Lead.update', 'Update Lead', 'Modify existing lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_soft_delete_id, 'Lead.soft_delete', 'Delete Lead', 'Delete (soft) lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_restore_id, 'Lead.restore', 'Restore Lead', 'Restore deleted lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_assign_id, 'Lead.assign', 'Assign Lead', 'Assign lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_unassign_id, 'Lead.unassign', 'Unassign Lead', 'Remove assignment of lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_transfer_id, 'Lead.transfer', 'Transfer Lead', 'Transfer ownership of lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leadactivity_read_id, 'LeadActivity.read', 'View Lead Activity', 'View and access lead activity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leadactivity_create_id, 'LeadActivity.create', 'Create Lead Activity', 'Create new lead activity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leadactivity_update_id, 'LeadActivity.update', 'Update Lead Activity', 'Modify existing lead activity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leadactivity_soft_delete_id, 'LeadActivity.soft_delete', 'Delete Lead Activity', 'Delete (soft) lead activity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leadactivity_restore_id, 'LeadActivity.restore', 'Restore Lead Activity', 'Restore deleted lead activity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_read_id, 'Opportunity.read', 'View Opportunity', 'View and access opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_create_id, 'Opportunity.create', 'Create Opportunity', 'Create new opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_update_id, 'Opportunity.update', 'Update Opportunity', 'Modify existing opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_soft_delete_id, 'Opportunity.soft_delete', 'Delete Opportunity', 'Delete (soft) opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_restore_id, 'Opportunity.restore', 'Restore Opportunity', 'Restore deleted opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_assign_id, 'Opportunity.assign', 'Assign Opportunity', 'Assign opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_unassign_id, 'Opportunity.unassign', 'Unassign Opportunity', 'Remove assignment of opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_transfer_id, 'Opportunity.transfer', 'Transfer Opportunity', 'Transfer ownership of opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitystage_read_id, 'OpportunityStage.read', 'View Opportunity Stage', 'View and access opportunity stage records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitystage_create_id, 'OpportunityStage.create', 'Create Opportunity Stage', 'Create new opportunity stage records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitystage_update_id, 'OpportunityStage.update', 'Update Opportunity Stage', 'Modify existing opportunity stage records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitystage_soft_delete_id, 'OpportunityStage.soft_delete', 'Delete Opportunity Stage', 'Delete (soft) opportunity stage records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitystage_restore_id, 'OpportunityStage.restore', 'Restore Opportunity Stage', 'Restore deleted opportunity stage records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitylineitem_read_id, 'OpportunityLineItem.read', 'View Opportunity Line Item', 'View and access opportunity line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitylineitem_create_id, 'OpportunityLineItem.create', 'Create Opportunity Line Item', 'Create new opportunity line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitylineitem_update_id, 'OpportunityLineItem.update', 'Update Opportunity Line Item', 'Modify existing opportunity line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitylineitem_soft_delete_id, 'OpportunityLineItem.soft_delete', 'Delete Opportunity Line Item', 'Delete (soft) opportunity line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunitylineitem_restore_id, 'OpportunityLineItem.restore', 'Restore Opportunity Line Item', 'Restore deleted opportunity line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_read_id, 'Quote.read', 'View Quote', 'View and access quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_create_id, 'Quote.create', 'Create Quote', 'Create new quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_update_id, 'Quote.update', 'Update Quote', 'Modify existing quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_soft_delete_id, 'Quote.soft_delete', 'Delete Quote', 'Delete (soft) quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_restore_id, 'Quote.restore', 'Restore Quote', 'Restore deleted quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_send_id, 'Quote.send', 'Send Quote', 'Send quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_approve_id, 'Quote.approve', 'Approve Quote', 'Approve quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_reject_id, 'Quote.reject', 'Reject Quote', 'Reject quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quotelineitem_read_id, 'QuoteLineItem.read', 'View Quote Line Item', 'View and access quote line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quotelineitem_create_id, 'QuoteLineItem.create', 'Create Quote Line Item', 'Create new quote line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quotelineitem_update_id, 'QuoteLineItem.update', 'Update Quote Line Item', 'Modify existing quote line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quotelineitem_soft_delete_id, 'QuoteLineItem.soft_delete', 'Delete Quote Line Item', 'Delete (soft) quote line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quotelineitem_restore_id, 'QuoteLineItem.restore', 'Restore Quote Line Item', 'Restore deleted quote line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_read_id, 'Estimate.read', 'View Estimate', 'View and access estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_create_id, 'Estimate.create', 'Create Estimate', 'Create new estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_update_id, 'Estimate.update', 'Update Estimate', 'Modify existing estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_soft_delete_id, 'Estimate.soft_delete', 'Delete Estimate', 'Delete (soft) estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_restore_id, 'Estimate.restore', 'Restore Estimate', 'Restore deleted estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_send_id, 'Estimate.send', 'Send Estimate', 'Send estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_approve_id, 'Estimate.approve', 'Approve Estimate', 'Approve estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_reject_id, 'Estimate.reject', 'Reject Estimate', 'Reject estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatelineitem_read_id, 'EstimateLineItem.read', 'View Estimate Line Item', 'View and access estimate line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatelineitem_create_id, 'EstimateLineItem.create', 'Create Estimate Line Item', 'Create new estimate line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatelineitem_update_id, 'EstimateLineItem.update', 'Update Estimate Line Item', 'Modify existing estimate line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatelineitem_soft_delete_id, 'EstimateLineItem.soft_delete', 'Delete Estimate Line Item', 'Delete (soft) estimate line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatelineitem_restore_id, 'EstimateLineItem.restore', 'Restore Estimate Line Item', 'Restore deleted estimate line item records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateattachment_read_id, 'EstimateAttachment.read', 'View Estimate Attachment', 'View and access estimate attachment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateattachment_create_id, 'EstimateAttachment.create', 'Create Estimate Attachment', 'Create new estimate attachment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateattachment_update_id, 'EstimateAttachment.update', 'Update Estimate Attachment', 'Modify existing estimate attachment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateattachment_soft_delete_id, 'EstimateAttachment.soft_delete', 'Delete Estimate Attachment', 'Delete (soft) estimate attachment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateattachment_restore_id, 'EstimateAttachment.restore', 'Restore Estimate Attachment', 'Restore deleted estimate attachment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateapproval_read_id, 'EstimateApproval.read', 'View Estimate Approval', 'View and access estimate approval records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateapproval_create_id, 'EstimateApproval.create', 'Create Estimate Approval', 'Create new estimate approval records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateapproval_approve_id, 'EstimateApproval.approve', 'Approve Estimate Approval', 'Approve estimate approval records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateapproval_reject_id, 'EstimateApproval.reject', 'Reject Estimate Approval', 'Reject estimate approval records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_read_id, 'RequestForQuote.read', 'View Request For Quote', 'View and access request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_create_id, 'RequestForQuote.create', 'Create Request For Quote', 'Create new request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_update_id, 'RequestForQuote.update', 'Update Request For Quote', 'Modify existing request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_soft_delete_id, 'RequestForQuote.soft_delete', 'Delete Request For Quote', 'Delete (soft) request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_restore_id, 'RequestForQuote.restore', 'Restore Request For Quote', 'Restore deleted request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_requestforquote_send_id, 'RequestForQuote.send', 'Send Request For Quote', 'Send request for quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqline_read_id, 'RFQLine.read', 'View R F Q Line', 'View and access r f q line records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqline_create_id, 'RFQLine.create', 'Create R F Q Line', 'Create new r f q line records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqline_update_id, 'RFQLine.update', 'Update R F Q Line', 'Modify existing r f q line records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqline_soft_delete_id, 'RFQLine.soft_delete', 'Delete R F Q Line', 'Delete (soft) r f q line records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqline_restore_id, 'RFQLine.restore', 'Restore R F Q Line', 'Restore deleted r f q line records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponse_read_id, 'RFQResponse.read', 'View R F Q Response', 'View and access r f q response records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponse_create_id, 'RFQResponse.create', 'Create R F Q Response', 'Create new r f q response records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponse_update_id, 'RFQResponse.update', 'Update R F Q Response', 'Modify existing r f q response records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponse_soft_delete_id, 'RFQResponse.soft_delete', 'Delete R F Q Response', 'Delete (soft) r f q response records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponse_restore_id, 'RFQResponse.restore', 'Restore R F Q Response', 'Restore deleted r f q response records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_read_id, 'Bid.read', 'View Bid', 'View and access bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_create_id, 'Bid.create', 'Create Bid', 'Create new bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_update_id, 'Bid.update', 'Update Bid', 'Modify existing bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_soft_delete_id, 'Bid.soft_delete', 'Delete Bid', 'Delete (soft) bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_restore_id, 'Bid.restore', 'Restore Bid', 'Restore deleted bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_submit_id, 'Bid.submit', 'Submit Bid', 'Submit bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_approve_id, 'Bid.approve', 'Approve Bid', 'Approve bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bid_reject_id, 'Bid.reject', 'Reject Bid', 'Reject bid records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidcomparison_read_id, 'BidComparison.read', 'View Bid Comparison', 'View and access bid comparison records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidcomparison_create_id, 'BidComparison.create', 'Create Bid Comparison', 'Create new bid comparison records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidcomparison_update_id, 'BidComparison.update', 'Update Bid Comparison', 'Modify existing bid comparison records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidcomparison_soft_delete_id, 'BidComparison.soft_delete', 'Delete Bid Comparison', 'Delete (soft) bid comparison records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidcomparison_restore_id, 'BidComparison.restore', 'Restore Bid Comparison', 'Restore deleted bid comparison records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_read_id, 'BidInvitation.read', 'View Bid Invitation', 'View and access bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_create_id, 'BidInvitation.create', 'Create Bid Invitation', 'Create new bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_update_id, 'BidInvitation.update', 'Update Bid Invitation', 'Modify existing bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_send_id, 'BidInvitation.send', 'Send Bid Invitation', 'Send bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_soft_delete_id, 'BidInvitation.soft_delete', 'Delete Bid Invitation', 'Delete (soft) bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidinvitation_restore_id, 'BidInvitation.restore', 'Restore Bid Invitation', 'Restore deleted bid invitation records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_read_id, 'BidSubmission.read', 'View Bid Submission', 'View and access bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_create_id, 'BidSubmission.create', 'Create Bid Submission', 'Create new bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_update_id, 'BidSubmission.update', 'Update Bid Submission', 'Modify existing bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_submit_id, 'BidSubmission.submit', 'Submit Bid Submission', 'Submit bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_approve_id, 'BidSubmission.approve', 'Approve Bid Submission', 'Approve bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bidsubmission_reject_id, 'BidSubmission.reject', 'Reject Bid Submission', 'Reject bid submission records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_read_id, 'Project.read', 'View Project', 'View and access project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_create_id, 'Project.create', 'Create Project', 'Create new project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_update_id, 'Project.update', 'Update Project', 'Modify existing project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_soft_delete_id, 'Project.soft_delete', 'Delete Project', 'Delete (soft) project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_restore_id, 'Project.restore', 'Restore Project', 'Restore deleted project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_hard_delete_id, 'Project.hard_delete', 'Permanently Delete Project', 'Permanently delete project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_archive_id, 'Project.archive', 'Archive Project', 'Archive project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_activate_id, 'Project.activate', 'Activate Project', 'Activate project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_deactivate_id, 'Project.deactivate', 'Deactivate Project', 'Deactivate project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_duplicate_id, 'Project.duplicate', 'Duplicate Project', 'Duplicate project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_transfer_id, 'Project.transfer', 'Transfer Project', 'Transfer ownership of project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_read_id, 'ProjectTaskAssignment.read', 'View Project Task Assignment', 'View and access project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_create_id, 'ProjectTaskAssignment.create', 'Create Project Task Assignment', 'Create new project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_update_id, 'ProjectTaskAssignment.update', 'Update Project Task Assignment', 'Modify existing project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_soft_delete_id, 'ProjectTaskAssignment.soft_delete', 'Delete Project Task Assignment', 'Delete (soft) project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_restore_id, 'ProjectTaskAssignment.restore', 'Restore Project Task Assignment', 'Restore deleted project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_assign_id, 'ProjectTaskAssignment.assign', 'Assign Project Task Assignment', 'Assign project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_unassign_id, 'ProjectTaskAssignment.unassign', 'Unassign Project Task Assignment', 'Remove assignment of project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskassignment_transfer_id, 'ProjectTaskAssignment.transfer', 'Transfer Project Task Assignment', 'Transfer ownership of project task assignment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_read_id, 'ProjectMember.read', 'View Project Member', 'View and access project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_create_id, 'ProjectMember.create', 'Create Project Member', 'Create new project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_update_id, 'ProjectMember.update', 'Update Project Member', 'Modify existing project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_soft_delete_id, 'ProjectMember.soft_delete', 'Delete Project Member', 'Delete (soft) project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_restore_id, 'ProjectMember.restore', 'Restore Project Member', 'Restore deleted project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_assign_id, 'ProjectMember.assign', 'Assign Project Member', 'Assign project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_unassign_id, 'ProjectMember.unassign', 'Unassign Project Member', 'Remove assignment of project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectmember_transfer_id, 'ProjectMember.transfer', 'Transfer Project Member', 'Transfer ownership of project member records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectnote_read_id, 'ProjectNote.read', 'View Project Note', 'View and access project note records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectnote_create_id, 'ProjectNote.create', 'Create Project Note', 'Create new project note records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectnote_update_id, 'ProjectNote.update', 'Update Project Note', 'Modify existing project note records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectnote_soft_delete_id, 'ProjectNote.soft_delete', 'Delete Project Note', 'Delete (soft) project note records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectnote_restore_id, 'ProjectNote.restore', 'Restore Project Note', 'Restore deleted project note records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_read_id, 'ProjectReport.read', 'View Project Report', 'View and access project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_create_id, 'ProjectReport.create', 'Create Project Report', 'Create new project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_update_id, 'ProjectReport.update', 'Update Project Report', 'Modify existing project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_soft_delete_id, 'ProjectReport.soft_delete', 'Delete Project Report', 'Delete (soft) project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_restore_id, 'ProjectReport.restore', 'Restore Project Report', 'Restore deleted project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectreport_export_id, 'ProjectReport.export', 'Export Project Report', 'Export data for project report records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectbudgetline_read_id, 'ProjectBudgetLine.read', 'View Project Budget Line', 'View and access project budget line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectbudgetline_create_id, 'ProjectBudgetLine.create', 'Create Project Budget Line', 'Create new project budget line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectbudgetline_update_id, 'ProjectBudgetLine.update', 'Update Project Budget Line', 'Modify existing project budget line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectbudgetline_soft_delete_id, 'ProjectBudgetLine.soft_delete', 'Delete Project Budget Line', 'Delete (soft) project budget line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectbudgetline_restore_id, 'ProjectBudgetLine.restore', 'Restore Project Budget Line', 'Restore deleted project budget line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectfinancialsnapshot_read_id, 'ProjectFinancialSnapshot.read', 'View Project Financial Snapshot', 'View and access project financial snapshot records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectfinancialsnapshot_create_id, 'ProjectFinancialSnapshot.create', 'Create Project Financial Snapshot', 'Create new project financial snapshot records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectfinancialsnapshot_export_id, 'ProjectFinancialSnapshot.export', 'Export Project Financial Snapshot', 'Export data for project financial snapshot records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectinventorytransaction_read_id, 'ProjectInventoryTransaction.read', 'View Project Inventory Transaction', 'View and access project inventory transaction records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectinventorytransaction_create_id, 'ProjectInventoryTransaction.create', 'Create Project Inventory Transaction', 'Create new project inventory transaction records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectinventorytransaction_update_id, 'ProjectInventoryTransaction.update', 'Update Project Inventory Transaction', 'Modify existing project inventory transaction records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectinventorytransaction_soft_delete_id, 'ProjectInventoryTransaction.soft_delete', 'Delete Project Inventory Transaction', 'Delete (soft) project inventory transaction records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectinventorytransaction_restore_id, 'ProjectInventoryTransaction.restore', 'Restore Project Inventory Transaction', 'Restore deleted project inventory transaction records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_read_id, 'ProjectPhase.read', 'View Project Phase', 'View and access project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_create_id, 'ProjectPhase.create', 'Create Project Phase', 'Create new project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_update_id, 'ProjectPhase.update', 'Update Project Phase', 'Modify existing project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_soft_delete_id, 'ProjectPhase.soft_delete', 'Delete Project Phase', 'Delete (soft) project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_restore_id, 'ProjectPhase.restore', 'Restore Project Phase', 'Restore deleted project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_activate_id, 'ProjectPhase.activate', 'Activate Project Phase', 'Activate project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectphase_deactivate_id, 'ProjectPhase.deactivate', 'Deactivate Project Phase', 'Deactivate project phase records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_wbsitem_read_id, 'WBSItem.read', 'View W B S Item', 'View and access w b s item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_wbsitem_create_id, 'WBSItem.create', 'Create W B S Item', 'Create new w b s item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_wbsitem_update_id, 'WBSItem.update', 'Update W B S Item', 'Modify existing w b s item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_wbsitem_soft_delete_id, 'WBSItem.soft_delete', 'Delete W B S Item', 'Delete (soft) w b s item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_wbsitem_restore_id, 'WBSItem.restore', 'Restore W B S Item', 'Restore deleted w b s item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectlocation_read_id, 'ProjectLocation.read', 'View Project Location', 'View and access project location records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectlocation_create_id, 'ProjectLocation.create', 'Create Project Location', 'Create new project location records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectlocation_update_id, 'ProjectLocation.update', 'Update Project Location', 'Modify existing project location records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectlocation_soft_delete_id, 'ProjectLocation.soft_delete', 'Delete Project Location', 'Delete (soft) project location records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectlocation_restore_id, 'ProjectLocation.restore', 'Restore Project Location', 'Restore deleted project location records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_read_id, 'ProjectTask.read', 'View Project Task', 'View and access project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_create_id, 'ProjectTask.create', 'Create Project Task', 'Create new project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_update_id, 'ProjectTask.update', 'Update Project Task', 'Modify existing project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_soft_delete_id, 'ProjectTask.soft_delete', 'Delete Project Task', 'Delete (soft) project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_restore_id, 'ProjectTask.restore', 'Restore Project Task', 'Restore deleted project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_assign_id, 'ProjectTask.assign', 'Assign Project Task', 'Assign project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_unassign_id, 'ProjectTask.unassign', 'Unassign Project Task', 'Remove assignment of project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttask_transfer_id, 'ProjectTask.transfer', 'Transfer Project Task', 'Transfer ownership of project task records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskdependency_read_id, 'ProjectTaskDependency.read', 'View Project Task Dependency', 'View and access project task dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskdependency_create_id, 'ProjectTaskDependency.create', 'Create Project Task Dependency', 'Create new project task dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskdependency_update_id, 'ProjectTaskDependency.update', 'Update Project Task Dependency', 'Modify existing project task dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskdependency_soft_delete_id, 'ProjectTaskDependency.soft_delete', 'Delete Project Task Dependency', 'Delete (soft) project task dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskdependency_restore_id, 'ProjectTaskDependency.restore', 'Restore Project Task Dependency', 'Restore deleted project task dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskattachment_read_id, 'ProjectTaskAttachment.read', 'View Project Task Attachment', 'View and access project task attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskattachment_create_id, 'ProjectTaskAttachment.create', 'Create Project Task Attachment', 'Create new project task attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskattachment_update_id, 'ProjectTaskAttachment.update', 'Update Project Task Attachment', 'Modify existing project task attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskattachment_soft_delete_id, 'ProjectTaskAttachment.soft_delete', 'Delete Project Task Attachment', 'Delete (soft) project task attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskattachment_restore_id, 'ProjectTaskAttachment.restore', 'Restore Project Task Attachment', 'Restore deleted project task attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskcomment_read_id, 'ProjectTaskComment.read', 'View Project Task Comment', 'View and access project task comment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskcomment_create_id, 'ProjectTaskComment.create', 'Create Project Task Comment', 'Create new project task comment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskcomment_update_id, 'ProjectTaskComment.update', 'Update Project Task Comment', 'Modify existing project task comment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskcomment_soft_delete_id, 'ProjectTaskComment.soft_delete', 'Delete Project Task Comment', 'Delete (soft) project task comment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskcomment_restore_id, 'ProjectTaskComment.restore', 'Restore Project Task Comment', 'Restore deleted project task comment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_read_id, 'ChangeOrder.read', 'View Change Order', 'View and access change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_create_id, 'ChangeOrder.create', 'Create Change Order', 'Create new change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_update_id, 'ChangeOrder.update', 'Update Change Order', 'Modify existing change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_soft_delete_id, 'ChangeOrder.soft_delete', 'Delete Change Order', 'Delete (soft) change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_restore_id, 'ChangeOrder.restore', 'Restore Change Order', 'Restore deleted change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_approve_id, 'ChangeOrder.approve', 'Approve Change Order', 'Approve change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorder_reject_id, 'ChangeOrder.reject', 'Reject Change Order', 'Reject change order records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderline_read_id, 'ChangeOrderLine.read', 'View Change Order Line', 'View and access change order line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderline_create_id, 'ChangeOrderLine.create', 'Create Change Order Line', 'Create new change order line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderline_update_id, 'ChangeOrderLine.update', 'Update Change Order Line', 'Modify existing change order line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderline_soft_delete_id, 'ChangeOrderLine.soft_delete', 'Delete Change Order Line', 'Delete (soft) change order line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderline_restore_id, 'ChangeOrderLine.restore', 'Restore Change Order Line', 'Restore deleted change order line records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderapproval_read_id, 'ChangeOrderApproval.read', 'View Change Order Approval', 'View and access change order approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderapproval_create_id, 'ChangeOrderApproval.create', 'Create Change Order Approval', 'Create new change order approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderapproval_approve_id, 'ChangeOrderApproval.approve', 'Approve Change Order Approval', 'Approve change order approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderapproval_reject_id, 'ChangeOrderApproval.reject', 'Reject Change Order Approval', 'Reject change order approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderdocument_read_id, 'ChangeOrderDocument.read', 'View Change Order Document', 'View and access change order document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderdocument_create_id, 'ChangeOrderDocument.create', 'Create Change Order Document', 'Create new change order document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderdocument_update_id, 'ChangeOrderDocument.update', 'Update Change Order Document', 'Modify existing change order document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderdocument_soft_delete_id, 'ChangeOrderDocument.soft_delete', 'Delete Change Order Document', 'Delete (soft) change order document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_changeorderdocument_restore_id, 'ChangeOrderDocument.restore', 'Restore Change Order Document', 'Restore deleted change order document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_read_id, 'RFI.read', 'View R F I', 'View and access r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_create_id, 'RFI.create', 'Create R F I', 'Create new r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_update_id, 'RFI.update', 'Update R F I', 'Modify existing r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_soft_delete_id, 'RFI.soft_delete', 'Delete R F I', 'Delete (soft) r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_restore_id, 'RFI.restore', 'Restore R F I', 'Restore deleted r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfi_send_id, 'RFI.send', 'Send R F I', 'Send r f i records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfireply_read_id, 'RFIReply.read', 'View R F I Reply', 'View and access r f i reply records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfireply_create_id, 'RFIReply.create', 'Create R F I Reply', 'Create new r f i reply records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfireply_update_id, 'RFIReply.update', 'Update R F I Reply', 'Modify existing r f i reply records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfireply_soft_delete_id, 'RFIReply.soft_delete', 'Delete R F I Reply', 'Delete (soft) r f i reply records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfireply_restore_id, 'RFIReply.restore', 'Restore R F I Reply', 'Restore deleted r f i reply records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittal_read_id, 'Submittal.read', 'View Submittal', 'View and access submittal records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittal_create_id, 'Submittal.create', 'Create Submittal', 'Create new submittal records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittal_update_id, 'Submittal.update', 'Update Submittal', 'Modify existing submittal records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittal_soft_delete_id, 'Submittal.soft_delete', 'Delete Submittal', 'Delete (soft) submittal records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittal_restore_id, 'Submittal.restore', 'Restore Submittal', 'Restore deleted submittal records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalitem_read_id, 'SubmittalItem.read', 'View Submittal Item', 'View and access submittal item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalitem_create_id, 'SubmittalItem.create', 'Create Submittal Item', 'Create new submittal item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalitem_update_id, 'SubmittalItem.update', 'Update Submittal Item', 'Modify existing submittal item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalitem_soft_delete_id, 'SubmittalItem.soft_delete', 'Delete Submittal Item', 'Delete (soft) submittal item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalitem_restore_id, 'SubmittalItem.restore', 'Restore Submittal Item', 'Restore deleted submittal item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalapproval_read_id, 'SubmittalApproval.read', 'View Submittal Approval', 'View and access submittal approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalapproval_create_id, 'SubmittalApproval.create', 'Create Submittal Approval', 'Create new submittal approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalapproval_approve_id, 'SubmittalApproval.approve', 'Approve Submittal Approval', 'Approve submittal approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_submittalapproval_reject_id, 'SubmittalApproval.reject', 'Reject Submittal Approval', 'Reject submittal approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspection_read_id, 'Inspection.read', 'View Inspection', 'View and access inspection records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspection_create_id, 'Inspection.create', 'Create Inspection', 'Create new inspection records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspection_update_id, 'Inspection.update', 'Update Inspection', 'Modify existing inspection records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspection_soft_delete_id, 'Inspection.soft_delete', 'Delete Inspection', 'Delete (soft) inspection records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspection_restore_id, 'Inspection.restore', 'Restore Inspection', 'Restore deleted inspection records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionitem_read_id, 'InspectionItem.read', 'View Inspection Item', 'View and access inspection item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionitem_create_id, 'InspectionItem.create', 'Create Inspection Item', 'Create new inspection item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionitem_update_id, 'InspectionItem.update', 'Update Inspection Item', 'Modify existing inspection item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionitem_soft_delete_id, 'InspectionItem.soft_delete', 'Delete Inspection Item', 'Delete (soft) inspection item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionitem_restore_id, 'InspectionItem.restore', 'Restore Inspection Item', 'Restore deleted inspection item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionapproval_read_id, 'InspectionApproval.read', 'View Inspection Approval', 'View and access inspection approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionapproval_create_id, 'InspectionApproval.create', 'Create Inspection Approval', 'Create new inspection approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionapproval_approve_id, 'InspectionApproval.approve', 'Approve Inspection Approval', 'Approve inspection approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inspectionapproval_reject_id, 'InspectionApproval.reject', 'Reject Inspection Approval', 'Reject inspection approval records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dailylog_read_id, 'DailyLog.read', 'View Daily Log', 'View and access daily log records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dailylog_create_id, 'DailyLog.create', 'Create Daily Log', 'Create new daily log records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dailylog_update_id, 'DailyLog.update', 'Update Daily Log', 'Modify existing daily log records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dailylog_soft_delete_id, 'DailyLog.soft_delete', 'Delete Daily Log', 'Delete (soft) daily log records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dailylog_restore_id, 'DailyLog.restore', 'Restore Daily Log', 'Restore deleted daily log records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlist_read_id, 'PunchList.read', 'View Punch List', 'View and access punch list records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlist_create_id, 'PunchList.create', 'Create Punch List', 'Create new punch list records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlist_update_id, 'PunchList.update', 'Update Punch List', 'Modify existing punch list records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlist_soft_delete_id, 'PunchList.soft_delete', 'Delete Punch List', 'Delete (soft) punch list records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlist_restore_id, 'PunchList.restore', 'Restore Punch List', 'Restore deleted punch list records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlistitem_read_id, 'PunchListItem.read', 'View Punch List Item', 'View and access punch list item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlistitem_create_id, 'PunchListItem.create', 'Create Punch List Item', 'Create new punch list item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlistitem_update_id, 'PunchListItem.update', 'Update Punch List Item', 'Modify existing punch list item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlistitem_soft_delete_id, 'PunchListItem.soft_delete', 'Delete Punch List Item', 'Delete (soft) punch list item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_punchlistitem_restore_id, 'PunchListItem.restore', 'Restore Punch List Item', 'Restore deleted punch list item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activity_read_id, 'Activity.read', 'View Activity', 'View and access activity records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activity_create_id, 'Activity.create', 'Create Activity', 'Create new activity records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activity_update_id, 'Activity.update', 'Update Activity', 'Modify existing activity records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activity_soft_delete_id, 'Activity.soft_delete', 'Delete Activity', 'Delete (soft) activity records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activity_restore_id, 'Activity.restore', 'Restore Activity', 'Restore deleted activity records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activityattachment_read_id, 'ActivityAttachment.read', 'View Activity Attachment', 'View and access activity attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activityattachment_create_id, 'ActivityAttachment.create', 'Create Activity Attachment', 'Create new activity attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activityattachment_update_id, 'ActivityAttachment.update', 'Update Activity Attachment', 'Modify existing activity attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activityattachment_soft_delete_id, 'ActivityAttachment.soft_delete', 'Delete Activity Attachment', 'Delete (soft) activity attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_activityattachment_restore_id, 'ActivityAttachment.restore', 'Restore Activity Attachment', 'Restore deleted activity attachment records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestone_read_id, 'Milestone.read', 'View Milestone', 'View and access milestone records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestone_create_id, 'Milestone.create', 'Create Milestone', 'Create new milestone records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestone_update_id, 'Milestone.update', 'Update Milestone', 'Modify existing milestone records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestone_soft_delete_id, 'Milestone.soft_delete', 'Delete Milestone', 'Delete (soft) milestone records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestone_restore_id, 'Milestone.restore', 'Restore Milestone', 'Restore deleted milestone records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonedependency_read_id, 'MilestoneDependency.read', 'View Milestone Dependency', 'View and access milestone dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonedependency_create_id, 'MilestoneDependency.create', 'Create Milestone Dependency', 'Create new milestone dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonedependency_update_id, 'MilestoneDependency.update', 'Update Milestone Dependency', 'Modify existing milestone dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonedependency_soft_delete_id, 'MilestoneDependency.soft_delete', 'Delete Milestone Dependency', 'Delete (soft) milestone dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonedependency_restore_id, 'MilestoneDependency.restore', 'Restore Milestone Dependency', 'Restore deleted milestone dependency records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonestakeholder_read_id, 'MilestoneStakeholder.read', 'View Milestone Stakeholder', 'View and access milestone stakeholder records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonestakeholder_create_id, 'MilestoneStakeholder.create', 'Create Milestone Stakeholder', 'Create new milestone stakeholder records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonestakeholder_update_id, 'MilestoneStakeholder.update', 'Update Milestone Stakeholder', 'Modify existing milestone stakeholder records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonestakeholder_soft_delete_id, 'MilestoneStakeholder.soft_delete', 'Delete Milestone Stakeholder', 'Delete (soft) milestone stakeholder records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_milestonestakeholder_restore_id, 'MilestoneStakeholder.restore', 'Restore Milestone Stakeholder', 'Restore deleted milestone stakeholder records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectdocument_read_id, 'ProjectDocument.read', 'View Project Document', 'View and access project document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectdocument_create_id, 'ProjectDocument.create', 'Create Project Document', 'Create new project document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectdocument_update_id, 'ProjectDocument.update', 'Update Project Document', 'Modify existing project document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectdocument_soft_delete_id, 'ProjectDocument.soft_delete', 'Delete Project Document', 'Delete (soft) project document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectdocument_restore_id, 'ProjectDocument.restore', 'Restore Project Document', 'Restore deleted project document records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_read_id, 'ProjectExternalAccess.read', 'View Project External Access', 'View and access project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_create_id, 'ProjectExternalAccess.create', 'Create Project External Access', 'Create new project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_update_id, 'ProjectExternalAccess.update', 'Update Project External Access', 'Modify existing project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_soft_delete_id, 'ProjectExternalAccess.soft_delete', 'Delete Project External Access', 'Delete (soft) project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_restore_id, 'ProjectExternalAccess.restore', 'Restore Project External Access', 'Restore deleted project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_grant_id, 'ProjectExternalAccess.grant', 'Grant Project External Access', 'Grant access to project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectexternalaccess_revoke_id, 'ProjectExternalAccess.revoke', 'Revoke Project External Access', 'Revoke access to project external access records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_read_id, 'ProjectIssue.read', 'View Project Issue', 'View and access project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_create_id, 'ProjectIssue.create', 'Create Project Issue', 'Create new project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_update_id, 'ProjectIssue.update', 'Update Project Issue', 'Modify existing project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_soft_delete_id, 'ProjectIssue.soft_delete', 'Delete Project Issue', 'Delete (soft) project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_restore_id, 'ProjectIssue.restore', 'Restore Project Issue', 'Restore deleted project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_assign_id, 'ProjectIssue.assign', 'Assign Project Issue', 'Assign project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectissue_resolve_id, 'ProjectIssue.resolve', 'Resolve Project Issue', 'Resolve project issue records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectledgerentry_read_id, 'ProjectLedgerEntry.read', 'View Project Ledger Entry', 'View and access project ledger entry records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectledgerentry_create_id, 'ProjectLedgerEntry.create', 'Create Project Ledger Entry', 'Create new project ledger entry records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectledgerentry_update_id, 'ProjectLedgerEntry.update', 'Update Project Ledger Entry', 'Modify existing project ledger entry records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectledgerentry_soft_delete_id, 'ProjectLedgerEntry.soft_delete', 'Delete Project Ledger Entry', 'Delete (soft) project ledger entry records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectledgerentry_restore_id, 'ProjectLedgerEntry.restore', 'Restore Project Ledger Entry', 'Restore deleted project ledger entry records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_read_id, 'ProjectRisk.read', 'View Project Risk', 'View and access project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_create_id, 'ProjectRisk.create', 'Create Project Risk', 'Create new project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_update_id, 'ProjectRisk.update', 'Update Project Risk', 'Modify existing project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_soft_delete_id, 'ProjectRisk.soft_delete', 'Delete Project Risk', 'Delete (soft) project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_restore_id, 'ProjectRisk.restore', 'Restore Project Risk', 'Restore deleted project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_assess_id, 'ProjectRisk.assess', 'Assess Project Risk', 'Assess project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projectrisk_mitigate_id, 'ProjectRisk.mitigate', 'Mitigate Project Risk', 'Mitigate project risk records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_read_id, 'ProjectTaskChecklistItem.read', 'View Project Task Checklist Item', 'View and access project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_create_id, 'ProjectTaskChecklistItem.create', 'Create Project Task Checklist Item', 'Create new project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_update_id, 'ProjectTaskChecklistItem.update', 'Update Project Task Checklist Item', 'Modify existing project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_soft_delete_id, 'ProjectTaskChecklistItem.soft_delete', 'Delete Project Task Checklist Item', 'Delete (soft) project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_restore_id, 'ProjectTaskChecklistItem.restore', 'Restore Project Task Checklist Item', 'Restore deleted project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttaskchecklistitem_complete_id, 'ProjectTaskChecklistItem.complete', 'Complete Project Task Checklist Item', 'Mark as complete project task checklist item records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_read_id, 'ProjectType.read', 'View Project Type', 'View and access project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_create_id, 'ProjectType.create', 'Create Project Type', 'Create new project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_update_id, 'ProjectType.update', 'Update Project Type', 'Modify existing project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_soft_delete_id, 'ProjectType.soft_delete', 'Delete Project Type', 'Delete (soft) project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_restore_id, 'ProjectType.restore', 'Restore Project Type', 'Restore deleted project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_activate_id, 'ProjectType.activate', 'Activate Project Type', 'Activate project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_projecttype_deactivate_id, 'ProjectType.deactivate', 'Deactivate Project Type', 'Deactivate project type records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_read_id, 'Task.read', 'View Task', 'View and access task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_create_id, 'Task.create', 'Create Task', 'Create new task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_update_id, 'Task.update', 'Update Task', 'Modify existing task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_soft_delete_id, 'Task.soft_delete', 'Delete Task', 'Delete (soft) task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_restore_id, 'Task.restore', 'Restore Task', 'Restore deleted task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_hard_delete_id, 'Task.hard_delete', 'Permanently Delete Task', 'Permanently delete task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_assign_id, 'Task.assign', 'Assign Task', 'Assign task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_unassign_id, 'Task.unassign', 'Unassign Task', 'Remove assignment of task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_transfer_id, 'Task.transfer', 'Transfer Task', 'Transfer ownership of task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_activate_id, 'Task.activate', 'Activate Task', 'Activate task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_deactivate_id, 'Task.deactivate', 'Deactivate Task', 'Deactivate task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_task_duplicate_id, 'Task.duplicate', 'Duplicate Task', 'Duplicate task records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_read_id, 'TaskAssignment.read', 'View Task Assignment', 'View and access task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_create_id, 'TaskAssignment.create', 'Create Task Assignment', 'Create new task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_update_id, 'TaskAssignment.update', 'Update Task Assignment', 'Modify existing task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_soft_delete_id, 'TaskAssignment.soft_delete', 'Delete Task Assignment', 'Delete (soft) task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_restore_id, 'TaskAssignment.restore', 'Restore Task Assignment', 'Restore deleted task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_assign_id, 'TaskAssignment.assign', 'Assign Task Assignment', 'Assign task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_unassign_id, 'TaskAssignment.unassign', 'Unassign Task Assignment', 'Remove assignment of task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskassignment_transfer_id, 'TaskAssignment.transfer', 'Transfer Task Assignment', 'Transfer ownership of task assignment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskdependency_read_id, 'TaskDependency.read', 'View Task Dependency', 'View and access task dependency records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskdependency_create_id, 'TaskDependency.create', 'Create Task Dependency', 'Create new task dependency records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskdependency_update_id, 'TaskDependency.update', 'Update Task Dependency', 'Modify existing task dependency records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskdependency_soft_delete_id, 'TaskDependency.soft_delete', 'Delete Task Dependency', 'Delete (soft) task dependency records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskdependency_restore_id, 'TaskDependency.restore', 'Restore Task Dependency', 'Restore deleted task dependency records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskattachment_read_id, 'TaskAttachment.read', 'View Task Attachment', 'View and access task attachment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskattachment_create_id, 'TaskAttachment.create', 'Create Task Attachment', 'Create new task attachment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskattachment_update_id, 'TaskAttachment.update', 'Update Task Attachment', 'Modify existing task attachment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskattachment_soft_delete_id, 'TaskAttachment.soft_delete', 'Delete Task Attachment', 'Delete (soft) task attachment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskattachment_restore_id, 'TaskAttachment.restore', 'Restore Task Attachment', 'Restore deleted task attachment records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskchecklistitem_read_id, 'TaskChecklistItem.read', 'View Task Checklist Item', 'View and access task checklist item records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskchecklistitem_create_id, 'TaskChecklistItem.create', 'Create Task Checklist Item', 'Create new task checklist item records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskchecklistitem_update_id, 'TaskChecklistItem.update', 'Update Task Checklist Item', 'Modify existing task checklist item records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskchecklistitem_soft_delete_id, 'TaskChecklistItem.soft_delete', 'Delete Task Checklist Item', 'Delete (soft) task checklist item records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_taskchecklistitem_restore_id, 'TaskChecklistItem.restore', 'Restore Task Checklist Item', 'Restore deleted task checklist item records within tenant scope', 'task_execution',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_read_id, 'Invoice.read', 'View Invoice', 'View and access invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_create_id, 'Invoice.create', 'Create Invoice', 'Create new invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_update_id, 'Invoice.update', 'Update Invoice', 'Modify existing invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_soft_delete_id, 'Invoice.soft_delete', 'Delete Invoice', 'Delete (soft) invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_restore_id, 'Invoice.restore', 'Restore Invoice', 'Restore deleted invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_hard_delete_id, 'Invoice.hard_delete', 'Permanently Delete Invoice', 'Permanently delete invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_send_id, 'Invoice.send', 'Send Invoice', 'Send invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_duplicate_id, 'Invoice.duplicate', 'Duplicate Invoice', 'Duplicate invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_export_id, 'Invoice.export', 'Export Invoice', 'Export data for invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_approve_id, 'Invoice.approve', 'Approve Invoice', 'Approve invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoice_reject_id, 'Invoice.reject', 'Reject Invoice', 'Reject invoice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicelineitem_read_id, 'InvoiceLineItem.read', 'View Invoice Line Item', 'View and access invoice line item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicelineitem_create_id, 'InvoiceLineItem.create', 'Create Invoice Line Item', 'Create new invoice line item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicelineitem_update_id, 'InvoiceLineItem.update', 'Update Invoice Line Item', 'Modify existing invoice line item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicelineitem_soft_delete_id, 'InvoiceLineItem.soft_delete', 'Delete Invoice Line Item', 'Delete (soft) invoice line item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicelineitem_restore_id, 'InvoiceLineItem.restore', 'Restore Invoice Line Item', 'Restore deleted invoice line item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoiceattachment_read_id, 'InvoiceAttachment.read', 'View Invoice Attachment', 'View and access invoice attachment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoiceattachment_create_id, 'InvoiceAttachment.create', 'Create Invoice Attachment', 'Create new invoice attachment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoiceattachment_update_id, 'InvoiceAttachment.update', 'Update Invoice Attachment', 'Modify existing invoice attachment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoiceattachment_soft_delete_id, 'InvoiceAttachment.soft_delete', 'Delete Invoice Attachment', 'Delete (soft) invoice attachment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoiceattachment_restore_id, 'InvoiceAttachment.restore', 'Restore Invoice Attachment', 'Restore deleted invoice attachment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicetax_read_id, 'InvoiceTax.read', 'View Invoice Tax', 'View and access invoice tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicetax_create_id, 'InvoiceTax.create', 'Create Invoice Tax', 'Create new invoice tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicetax_update_id, 'InvoiceTax.update', 'Update Invoice Tax', 'Modify existing invoice tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicetax_soft_delete_id, 'InvoiceTax.soft_delete', 'Delete Invoice Tax', 'Delete (soft) invoice tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicetax_restore_id, 'InvoiceTax.restore', 'Restore Invoice Tax', 'Restore deleted invoice tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_read_id, 'Payment.read', 'View Payment', 'View and access payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_create_id, 'Payment.create', 'Create Payment', 'Create new payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_update_id, 'Payment.update', 'Update Payment', 'Modify existing payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_soft_delete_id, 'Payment.soft_delete', 'Delete Payment', 'Delete (soft) payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_restore_id, 'Payment.restore', 'Restore Payment', 'Restore deleted payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payment_export_id, 'Payment.export', 'Export Payment', 'Export data for payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentschedule_read_id, 'PaymentSchedule.read', 'View Payment Schedule', 'View and access payment schedule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentschedule_create_id, 'PaymentSchedule.create', 'Create Payment Schedule', 'Create new payment schedule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentschedule_update_id, 'PaymentSchedule.update', 'Update Payment Schedule', 'Modify existing payment schedule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentschedule_soft_delete_id, 'PaymentSchedule.soft_delete', 'Delete Payment Schedule', 'Delete (soft) payment schedule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentschedule_restore_id, 'PaymentSchedule.restore', 'Restore Payment Schedule', 'Restore deleted payment schedule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_read_id, 'APBill.read', 'View A P Bill', 'View and access a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_create_id, 'APBill.create', 'Create A P Bill', 'Create new a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_update_id, 'APBill.update', 'Update A P Bill', 'Modify existing a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_soft_delete_id, 'APBill.soft_delete', 'Delete A P Bill', 'Delete (soft) a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_restore_id, 'APBill.restore', 'Restore A P Bill', 'Restore deleted a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_approve_id, 'APBill.approve', 'Approve A P Bill', 'Approve a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbill_reject_id, 'APBill.reject', 'Reject A P Bill', 'Reject a p bill records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbillline_read_id, 'APBillLine.read', 'View A P Bill Line', 'View and access a p bill line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbillline_create_id, 'APBillLine.create', 'Create A P Bill Line', 'Create new a p bill line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbillline_update_id, 'APBillLine.update', 'Update A P Bill Line', 'Modify existing a p bill line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbillline_soft_delete_id, 'APBillLine.soft_delete', 'Delete A P Bill Line', 'Delete (soft) a p bill line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_apbillline_restore_id, 'APBillLine.restore', 'Restore A P Bill Line', 'Restore deleted a p bill line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billapproval_read_id, 'BillApproval.read', 'View Bill Approval', 'View and access bill approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billapproval_create_id, 'BillApproval.create', 'Create Bill Approval', 'Create new bill approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billapproval_approve_id, 'BillApproval.approve', 'Approve Bill Approval', 'Approve bill approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billapproval_reject_id, 'BillApproval.reject', 'Reject Bill Approval', 'Reject bill approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billpayment_read_id, 'BillPayment.read', 'View Bill Payment', 'View and access bill payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billpayment_create_id, 'BillPayment.create', 'Create Bill Payment', 'Create new bill payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billpayment_update_id, 'BillPayment.update', 'Update Bill Payment', 'Modify existing bill payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billpayment_soft_delete_id, 'BillPayment.soft_delete', 'Delete Bill Payment', 'Delete (soft) bill payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_billpayment_restore_id, 'BillPayment.restore', 'Restore Bill Payment', 'Restore deleted bill payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_read_id, 'Expense.read', 'View Expense', 'View and access expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_create_id, 'Expense.create', 'Create Expense', 'Create new expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_update_id, 'Expense.update', 'Update Expense', 'Modify existing expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_soft_delete_id, 'Expense.soft_delete', 'Delete Expense', 'Delete (soft) expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_restore_id, 'Expense.restore', 'Restore Expense', 'Restore deleted expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_approve_id, 'Expense.approve', 'Approve Expense', 'Approve expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_reject_id, 'Expense.reject', 'Reject Expense', 'Reject expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_export_id, 'Expense.export', 'Export Expense', 'Export data for expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseline_read_id, 'ExpenseLine.read', 'View Expense Line', 'View and access expense line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseline_create_id, 'ExpenseLine.create', 'Create Expense Line', 'Create new expense line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseline_update_id, 'ExpenseLine.update', 'Update Expense Line', 'Modify existing expense line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseline_soft_delete_id, 'ExpenseLine.soft_delete', 'Delete Expense Line', 'Delete (soft) expense line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseline_restore_id, 'ExpenseLine.restore', 'Restore Expense Line', 'Restore deleted expense line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseapproval_read_id, 'ExpenseApproval.read', 'View Expense Approval', 'View and access expense approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseapproval_create_id, 'ExpenseApproval.create', 'Create Expense Approval', 'Create new expense approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseapproval_approve_id, 'ExpenseApproval.approve', 'Approve Expense Approval', 'Approve expense approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expenseapproval_reject_id, 'ExpenseApproval.reject', 'Reject Expense Approval', 'Reject expense approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_read_id, 'ExpenseReceipt.read', 'View Expense Receipt', 'View and access expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_create_id, 'ExpenseReceipt.create', 'Create Expense Receipt', 'Create new expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_update_id, 'ExpenseReceipt.update', 'Update Expense Receipt', 'Modify existing expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_soft_delete_id, 'ExpenseReceipt.soft_delete', 'Delete Expense Receipt', 'Delete (soft) expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_restore_id, 'ExpenseReceipt.restore', 'Restore Expense Receipt', 'Restore deleted expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemo_read_id, 'CreditMemo.read', 'View Credit Memo', 'View and access credit memo records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemo_create_id, 'CreditMemo.create', 'Create Credit Memo', 'Create new credit memo records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemo_update_id, 'CreditMemo.update', 'Update Credit Memo', 'Modify existing credit memo records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemo_soft_delete_id, 'CreditMemo.soft_delete', 'Delete Credit Memo', 'Delete (soft) credit memo records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemo_restore_id, 'CreditMemo.restore', 'Restore Credit Memo', 'Restore deleted credit memo records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemoline_read_id, 'CreditMemoLine.read', 'View Credit Memo Line', 'View and access credit memo line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemoline_create_id, 'CreditMemoLine.create', 'Create Credit Memo Line', 'Create new credit memo line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemoline_update_id, 'CreditMemoLine.update', 'Update Credit Memo Line', 'Modify existing credit memo line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemoline_soft_delete_id, 'CreditMemoLine.soft_delete', 'Delete Credit Memo Line', 'Delete (soft) credit memo line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_creditmemoline_restore_id, 'CreditMemoLine.restore', 'Restore Credit Memo Line', 'Restore deleted credit memo line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_read_id, 'PurchaseOrder.read', 'View Purchase Order', 'View and access purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_create_id, 'PurchaseOrder.create', 'Create Purchase Order', 'Create new purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_update_id, 'PurchaseOrder.update', 'Update Purchase Order', 'Modify existing purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_soft_delete_id, 'PurchaseOrder.soft_delete', 'Delete Purchase Order', 'Delete (soft) purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_restore_id, 'PurchaseOrder.restore', 'Restore Purchase Order', 'Restore deleted purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_send_id, 'PurchaseOrder.send', 'Send Purchase Order', 'Send purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_approve_id, 'PurchaseOrder.approve', 'Approve Purchase Order', 'Approve purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorder_reject_id, 'PurchaseOrder.reject', 'Reject Purchase Order', 'Reject purchase order records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderline_read_id, 'PurchaseOrderLine.read', 'View Purchase Order Line', 'View and access purchase order line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderline_create_id, 'PurchaseOrderLine.create', 'Create Purchase Order Line', 'Create new purchase order line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderline_update_id, 'PurchaseOrderLine.update', 'Update Purchase Order Line', 'Modify existing purchase order line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderline_soft_delete_id, 'PurchaseOrderLine.soft_delete', 'Delete Purchase Order Line', 'Delete (soft) purchase order line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderline_restore_id, 'PurchaseOrderLine.restore', 'Restore Purchase Order Line', 'Restore deleted purchase order line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderapproval_read_id, 'PurchaseOrderApproval.read', 'View Purchase Order Approval', 'View and access purchase order approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderapproval_create_id, 'PurchaseOrderApproval.create', 'Create Purchase Order Approval', 'Create new purchase order approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderapproval_approve_id, 'PurchaseOrderApproval.approve', 'Approve Purchase Order Approval', 'Approve purchase order approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_purchaseorderapproval_reject_id, 'PurchaseOrderApproval.reject', 'Reject Purchase Order Approval', 'Reject purchase order approval records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_read_id, 'GLAccount.read', 'View G L Account', 'View and access g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_create_id, 'GLAccount.create', 'Create G L Account', 'Create new g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_update_id, 'GLAccount.update', 'Update G L Account', 'Modify existing g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_soft_delete_id, 'GLAccount.soft_delete', 'Delete G L Account', 'Delete (soft) g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_restore_id, 'GLAccount.restore', 'Restore G L Account', 'Restore deleted g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_activate_id, 'GLAccount.activate', 'Activate G L Account', 'Activate g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_glaccount_deactivate_id, 'GLAccount.deactivate', 'Deactivate G L Account', 'Deactivate g l account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalentry_read_id, 'JournalEntry.read', 'View Journal Entry', 'View and access journal entry records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalentry_create_id, 'JournalEntry.create', 'Create Journal Entry', 'Create new journal entry records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalentry_update_id, 'JournalEntry.update', 'Update Journal Entry', 'Modify existing journal entry records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalentry_soft_delete_id, 'JournalEntry.soft_delete', 'Delete Journal Entry', 'Delete (soft) journal entry records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalentry_restore_id, 'JournalEntry.restore', 'Restore Journal Entry', 'Restore deleted journal entry records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalline_read_id, 'JournalLine.read', 'View Journal Line', 'View and access journal line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalline_create_id, 'JournalLine.create', 'Create Journal Line', 'Create new journal line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalline_update_id, 'JournalLine.update', 'Update Journal Line', 'Modify existing journal line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalline_soft_delete_id, 'JournalLine.soft_delete', 'Delete Journal Line', 'Delete (soft) journal line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_journalline_restore_id, 'JournalLine.restore', 'Restore Journal Line', 'Restore deleted journal line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_read_id, 'BankAccount.read', 'View Bank Account', 'View and access bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_create_id, 'BankAccount.create', 'Create Bank Account', 'Create new bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_update_id, 'BankAccount.update', 'Update Bank Account', 'Modify existing bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_soft_delete_id, 'BankAccount.soft_delete', 'Delete Bank Account', 'Delete (soft) bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_restore_id, 'BankAccount.restore', 'Restore Bank Account', 'Restore deleted bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_activate_id, 'BankAccount.activate', 'Activate Bank Account', 'Activate bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankaccount_deactivate_id, 'BankAccount.deactivate', 'Deactivate Bank Account', 'Deactivate bank account records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankstatementline_read_id, 'BankStatementLine.read', 'View Bank Statement Line', 'View and access bank statement line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankstatementline_create_id, 'BankStatementLine.create', 'Create Bank Statement Line', 'Create new bank statement line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankstatementline_update_id, 'BankStatementLine.update', 'Update Bank Statement Line', 'Modify existing bank statement line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankstatementline_soft_delete_id, 'BankStatementLine.soft_delete', 'Delete Bank Statement Line', 'Delete (soft) bank statement line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_bankstatementline_restore_id, 'BankStatementLine.restore', 'Restore Bank Statement Line', 'Restore deleted bank statement line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reconciliation_read_id, 'Reconciliation.read', 'View Reconciliation', 'View and access reconciliation records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reconciliation_create_id, 'Reconciliation.create', 'Create Reconciliation', 'Create new reconciliation records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reconciliation_update_id, 'Reconciliation.update', 'Update Reconciliation', 'Modify existing reconciliation records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reconciliation_soft_delete_id, 'Reconciliation.soft_delete', 'Delete Reconciliation', 'Delete (soft) reconciliation records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reconciliation_restore_id, 'Reconciliation.restore', 'Restore Reconciliation', 'Restore deleted reconciliation records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_read_id, 'PayrollRun.read', 'View Payroll Run', 'View and access payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_create_id, 'PayrollRun.create', 'Create Payroll Run', 'Create new payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_update_id, 'PayrollRun.update', 'Update Payroll Run', 'Modify existing payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_soft_delete_id, 'PayrollRun.soft_delete', 'Delete Payroll Run', 'Delete (soft) payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_restore_id, 'PayrollRun.restore', 'Restore Payroll Run', 'Restore deleted payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_approve_id, 'PayrollRun.approve', 'Approve Payroll Run', 'Approve payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_reject_id, 'PayrollRun.reject', 'Reject Payroll Run', 'Reject payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollitem_read_id, 'PayrollItem.read', 'View Payroll Item', 'View and access payroll item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollitem_create_id, 'PayrollItem.create', 'Create Payroll Item', 'Create new payroll item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollitem_update_id, 'PayrollItem.update', 'Update Payroll Item', 'Modify existing payroll item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollitem_soft_delete_id, 'PayrollItem.soft_delete', 'Delete Payroll Item', 'Delete (soft) payroll item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollitem_restore_id, 'PayrollItem.restore', 'Restore Payroll Item', 'Restore deleted payroll item records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolladjustment_read_id, 'PayrollAdjustment.read', 'View Payroll Adjustment', 'View and access payroll adjustment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolladjustment_create_id, 'PayrollAdjustment.create', 'Create Payroll Adjustment', 'Create new payroll adjustment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolladjustment_update_id, 'PayrollAdjustment.update', 'Update Payroll Adjustment', 'Modify existing payroll adjustment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolladjustment_soft_delete_id, 'PayrollAdjustment.soft_delete', 'Delete Payroll Adjustment', 'Delete (soft) payroll adjustment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolladjustment_restore_id, 'PayrollAdjustment.restore', 'Restore Payroll Adjustment', 'Restore deleted payroll adjustment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollpayment_read_id, 'PayrollPayment.read', 'View Payroll Payment', 'View and access payroll payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollpayment_create_id, 'PayrollPayment.create', 'Create Payroll Payment', 'Create new payroll payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollpayment_update_id, 'PayrollPayment.update', 'Update Payroll Payment', 'Modify existing payroll payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollpayment_soft_delete_id, 'PayrollPayment.soft_delete', 'Delete Payroll Payment', 'Delete (soft) payroll payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollpayment_restore_id, 'PayrollPayment.restore', 'Restore Payroll Payment', 'Restore deleted payroll payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolltax_read_id, 'PayrollTax.read', 'View Payroll Tax', 'View and access payroll tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolltax_create_id, 'PayrollTax.create', 'Create Payroll Tax', 'Create new payroll tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolltax_update_id, 'PayrollTax.update', 'Update Payroll Tax', 'Modify existing payroll tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolltax_soft_delete_id, 'PayrollTax.soft_delete', 'Delete Payroll Tax', 'Delete (soft) payroll tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrolltax_restore_id, 'PayrollTax.restore', 'Restore Payroll Tax', 'Restore deleted payroll tax records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicepayment_read_id, 'InvoicePayment.read', 'View Invoice Payment', 'View and access invoice payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicepayment_create_id, 'InvoicePayment.create', 'Create Invoice Payment', 'Create new invoice payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicepayment_update_id, 'InvoicePayment.update', 'Update Invoice Payment', 'Modify existing invoice payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicepayment_soft_delete_id, 'InvoicePayment.soft_delete', 'Delete Invoice Payment', 'Delete (soft) invoice payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_invoicepayment_restore_id, 'InvoicePayment.restore', 'Restore Invoice Payment', 'Restore deleted invoice payment records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentapplication_read_id, 'PaymentApplication.read', 'View Payment Application', 'View and access payment application records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentapplication_create_id, 'PaymentApplication.create', 'Create Payment Application', 'Create new payment application records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentapplication_update_id, 'PaymentApplication.update', 'Update Payment Application', 'Modify existing payment application records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentapplication_soft_delete_id, 'PaymentApplication.soft_delete', 'Delete Payment Application', 'Delete (soft) payment application records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentapplication_restore_id, 'PaymentApplication.restore', 'Restore Payment Application', 'Restore deleted payment application records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_read_id, 'PaymentGateway.read', 'View Payment Gateway', 'View and access payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_create_id, 'PaymentGateway.create', 'Create Payment Gateway', 'Create new payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_update_id, 'PaymentGateway.update', 'Update Payment Gateway', 'Modify existing payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_soft_delete_id, 'PaymentGateway.soft_delete', 'Delete Payment Gateway', 'Delete (soft) payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_restore_id, 'PaymentGateway.restore', 'Restore Payment Gateway', 'Restore deleted payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_activate_id, 'PaymentGateway.activate', 'Activate Payment Gateway', 'Activate payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentgateway_deactivate_id, 'PaymentGateway.deactivate', 'Deactivate Payment Gateway', 'Deactivate payment gateway records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethod_read_id, 'PaymentMethod.read', 'View Payment Method', 'View and access payment method records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethod_create_id, 'PaymentMethod.create', 'Create Payment Method', 'Create new payment method records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethod_update_id, 'PaymentMethod.update', 'Update Payment Method', 'Modify existing payment method records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethod_soft_delete_id, 'PaymentMethod.soft_delete', 'Delete Payment Method', 'Delete (soft) payment method records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethod_restore_id, 'PaymentMethod.restore', 'Restore Payment Method', 'Restore deleted payment method records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethodtoken_read_id, 'PaymentMethodToken.read', 'View Payment Method Token', 'View and access payment method token records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethodtoken_create_id, 'PaymentMethodToken.create', 'Create Payment Method Token', 'Create new payment method token records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethodtoken_update_id, 'PaymentMethodToken.update', 'Update Payment Method Token', 'Modify existing payment method token records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethodtoken_soft_delete_id, 'PaymentMethodToken.soft_delete', 'Delete Payment Method Token', 'Delete (soft) payment method token records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentmethodtoken_restore_id, 'PaymentMethodToken.restore', 'Restore Payment Method Token', 'Restore deleted payment method token records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentterm_read_id, 'PaymentTerm.read', 'View Payment Term', 'View and access payment term records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentterm_create_id, 'PaymentTerm.create', 'Create Payment Term', 'Create new payment term records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentterm_update_id, 'PaymentTerm.update', 'Update Payment Term', 'Modify existing payment term records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentterm_soft_delete_id, 'PaymentTerm.soft_delete', 'Delete Payment Term', 'Delete (soft) payment term records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paymentterm_restore_id, 'PaymentTerm.restore', 'Restore Payment Term', 'Restore deleted payment term records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_read_id, 'FraudPolicy.read', 'View Fraud Policy', 'View and access fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_create_id, 'FraudPolicy.create', 'Create Fraud Policy', 'Create new fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_update_id, 'FraudPolicy.update', 'Update Fraud Policy', 'Modify existing fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_soft_delete_id, 'FraudPolicy.soft_delete', 'Delete Fraud Policy', 'Delete (soft) fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_restore_id, 'FraudPolicy.restore', 'Restore Fraud Policy', 'Restore deleted fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_activate_id, 'FraudPolicy.activate', 'Activate Fraud Policy', 'Activate fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicy_deactivate_id, 'FraudPolicy.deactivate', 'Deactivate Fraud Policy', 'Deactivate fraud policy records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyrule_read_id, 'FraudPolicyRule.read', 'View Fraud Policy Rule', 'View and access fraud policy rule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyrule_create_id, 'FraudPolicyRule.create', 'Create Fraud Policy Rule', 'Create new fraud policy rule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyrule_update_id, 'FraudPolicyRule.update', 'Update Fraud Policy Rule', 'Modify existing fraud policy rule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyrule_soft_delete_id, 'FraudPolicyRule.soft_delete', 'Delete Fraud Policy Rule', 'Delete (soft) fraud policy rule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyrule_restore_id, 'FraudPolicyRule.restore', 'Restore Fraud Policy Rule', 'Restore deleted fraud policy rule records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyscope_read_id, 'FraudPolicyScope.read', 'View Fraud Policy Scope', 'View and access fraud policy scope records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyscope_create_id, 'FraudPolicyScope.create', 'Create Fraud Policy Scope', 'Create new fraud policy scope records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyscope_update_id, 'FraudPolicyScope.update', 'Update Fraud Policy Scope', 'Modify existing fraud policy scope records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyscope_soft_delete_id, 'FraudPolicyScope.soft_delete', 'Delete Fraud Policy Scope', 'Delete (soft) fraud policy scope records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fraudpolicyscope_restore_id, 'FraudPolicyScope.restore', 'Restore Fraud Policy Scope', 'Restore deleted fraud policy scope records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_currencyrate_read_id, 'CurrencyRate.read', 'View Currency Rate', 'View and access currency rate records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_currencyrate_create_id, 'CurrencyRate.create', 'Create Currency Rate', 'Create new currency rate records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_currencyrate_update_id, 'CurrencyRate.update', 'Update Currency Rate', 'Modify existing currency rate records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastline_read_id, 'ForecastLine.read', 'View Forecast Line', 'View and access forecast line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastline_create_id, 'ForecastLine.create', 'Create Forecast Line', 'Create new forecast line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastline_update_id, 'ForecastLine.update', 'Update Forecast Line', 'Modify existing forecast line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastline_soft_delete_id, 'ForecastLine.soft_delete', 'Delete Forecast Line', 'Delete (soft) forecast line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastline_restore_id, 'ForecastLine.restore', 'Restore Forecast Line', 'Restore deleted forecast line records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastsnapshot_read_id, 'ForecastSnapshot.read', 'View Forecast Snapshot', 'View and access forecast snapshot records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastsnapshot_create_id, 'ForecastSnapshot.create', 'Create Forecast Snapshot', 'Create new forecast snapshot records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_forecastsnapshot_export_id, 'ForecastSnapshot.export', 'Export Forecast Snapshot', 'Export data for forecast snapshot records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargeback_read_id, 'Chargeback.read', 'View Chargeback', 'View and access chargeback records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargeback_create_id, 'Chargeback.create', 'Create Chargeback', 'Create new chargeback records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargeback_update_id, 'Chargeback.update', 'Update Chargeback', 'Modify existing chargeback records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargeback_soft_delete_id, 'Chargeback.soft_delete', 'Delete Chargeback', 'Delete (soft) chargeback records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargeback_restore_id, 'Chargeback.restore', 'Restore Chargeback', 'Restore deleted chargeback records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargebackevidence_read_id, 'ChargebackEvidence.read', 'View Chargeback Evidence', 'View and access chargeback evidence records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargebackevidence_create_id, 'ChargebackEvidence.create', 'Create Chargeback Evidence', 'Create new chargeback evidence records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargebackevidence_update_id, 'ChargebackEvidence.update', 'Update Chargeback Evidence', 'Modify existing chargeback evidence records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargebackevidence_soft_delete_id, 'ChargebackEvidence.soft_delete', 'Delete Chargeback Evidence', 'Delete (soft) chargeback evidence records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_chargebackevidence_restore_id, 'ChargebackEvidence.restore', 'Restore Chargeback Evidence', 'Restore deleted chargeback evidence records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_refund_read_id, 'Refund.read', 'View Refund', 'View and access refund records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_refund_create_id, 'Refund.create', 'Create Refund', 'Create new refund records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_refund_update_id, 'Refund.update', 'Update Refund', 'Modify existing refund records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_refund_soft_delete_id, 'Refund.soft_delete', 'Delete Refund', 'Delete (soft) refund records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_refund_restore_id, 'Refund.restore', 'Restore Refund', 'Restore deleted refund records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payout_read_id, 'Payout.read', 'View Payout', 'View and access payout records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payout_create_id, 'Payout.create', 'Create Payout', 'Create new payout records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payout_update_id, 'Payout.update', 'Update Payout', 'Modify existing payout records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payout_soft_delete_id, 'Payout.soft_delete', 'Delete Payout', 'Delete (soft) payout records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payout_restore_id, 'Payout.restore', 'Restore Payout', 'Restore deleted payout records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_read_id, 'ExpenseReport.read', 'View Expense Report', 'View and access expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_create_id, 'ExpenseReport.create', 'Create Expense Report', 'Create new expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_update_id, 'ExpenseReport.update', 'Update Expense Report', 'Modify existing expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_soft_delete_id, 'ExpenseReport.soft_delete', 'Delete Expense Report', 'Delete (soft) expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_restore_id, 'ExpenseReport.restore', 'Restore Expense Report', 'Restore deleted expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_submit_id, 'ExpenseReport.submit', 'Submit Expense Report', 'Submit expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_approve_id, 'ExpenseReport.approve', 'Approve Expense Report', 'Approve expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereport_reject_id, 'ExpenseReport.reject', 'Reject Expense Report', 'Reject expense report records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_read_id, 'Reimbursement.read', 'View Reimbursement', 'View and access reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_create_id, 'Reimbursement.create', 'Create Reimbursement', 'Create new reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_update_id, 'Reimbursement.update', 'Update Reimbursement', 'Modify existing reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_soft_delete_id, 'Reimbursement.soft_delete', 'Delete Reimbursement', 'Delete (soft) reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_restore_id, 'Reimbursement.restore', 'Restore Reimbursement', 'Restore deleted reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reimbursement_process_id, 'Reimbursement.process', 'Process Reimbursement', 'Process reimbursement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dunningnotice_read_id, 'DunningNotice.read', 'View Dunning Notice', 'View and access dunning notice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dunningnotice_create_id, 'DunningNotice.create', 'Create Dunning Notice', 'Create new dunning notice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dunningnotice_update_id, 'DunningNotice.update', 'Update Dunning Notice', 'Modify existing dunning notice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dunningnotice_send_id, 'DunningNotice.send', 'Send Dunning Notice', 'Send dunning notice records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminder_read_id, 'ReturnReminder.read', 'View Return Reminder', 'View and access return reminder records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminder_create_id, 'ReturnReminder.create', 'Create Return Reminder', 'Create new return reminder records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminder_update_id, 'ReturnReminder.update', 'Update Return Reminder', 'Modify existing return reminder records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminder_send_id, 'ReturnReminder.send', 'Send Return Reminder', 'Send return reminder records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminderattempt_read_id, 'ReturnReminderAttempt.read', 'View Return Reminder Attempt', 'View and access return reminder attempt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_returnreminderattempt_create_id, 'ReturnReminderAttempt.create', 'Create Return Reminder Attempt', 'Create new return reminder attempt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_read_id, 'ClockInClockOut.read', 'View Clock In Clock Out', 'View and access clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_create_id, 'ClockInClockOut.create', 'Create Clock In Clock Out', 'Create new clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_update_id, 'ClockInClockOut.update', 'Update Clock In Clock Out', 'Modify existing clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_soft_delete_id, 'ClockInClockOut.soft_delete', 'Delete Clock In Clock Out', 'Delete (soft) clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_restore_id, 'ClockInClockOut.restore', 'Restore Clock In Clock Out', 'Restore deleted clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_approve_id, 'ClockInClockOut.approve', 'Approve Clock In Clock Out', 'Approve clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_reject_id, 'ClockInClockOut.reject', 'Reject Clock In Clock Out', 'Reject clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_clockinclockout_export_id, 'ClockInClockOut.export', 'Export Clock In Clock Out', 'Export data for clock in clock out records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_read_id, 'Schedule.read', 'View Schedule', 'View and access schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_create_id, 'Schedule.create', 'Create Schedule', 'Create new schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_update_id, 'Schedule.update', 'Update Schedule', 'Modify existing schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_soft_delete_id, 'Schedule.soft_delete', 'Delete Schedule', 'Delete (soft) schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_restore_id, 'Schedule.restore', 'Restore Schedule', 'Restore deleted schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_publish_id, 'Schedule.publish', 'Publish Schedule', 'Publish schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_activate_id, 'Schedule.activate', 'Activate Schedule', 'Activate schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_deactivate_id, 'Schedule.deactivate', 'Deactivate Schedule', 'Deactivate schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_read_id, 'ScheduleException.read', 'View Schedule Exception', 'View and access schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_create_id, 'ScheduleException.create', 'Create Schedule Exception', 'Create new schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_update_id, 'ScheduleException.update', 'Update Schedule Exception', 'Modify existing schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_soft_delete_id, 'ScheduleException.soft_delete', 'Delete Schedule Exception', 'Delete (soft) schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_restore_id, 'ScheduleException.restore', 'Restore Schedule Exception', 'Restore deleted schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_read_id, 'Leave.read', 'View Leave', 'View and access leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_create_id, 'Leave.create', 'Create Leave', 'Create new leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_update_id, 'Leave.update', 'Update Leave', 'Modify existing leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_soft_delete_id, 'Leave.soft_delete', 'Delete Leave', 'Delete (soft) leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_restore_id, 'Leave.restore', 'Restore Leave', 'Restore deleted leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_approve_id, 'Leave.approve', 'Approve Leave', 'Approve leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leave_reject_id, 'Leave.reject', 'Reject Leave', 'Reject leave records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_read_id, 'Timesheet.read', 'View Timesheet', 'View and access timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_create_id, 'Timesheet.create', 'Create Timesheet', 'Create new timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_update_id, 'Timesheet.update', 'Update Timesheet', 'Modify existing timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_soft_delete_id, 'Timesheet.soft_delete', 'Delete Timesheet', 'Delete (soft) timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_restore_id, 'Timesheet.restore', 'Restore Timesheet', 'Restore deleted timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_submit_id, 'Timesheet.submit', 'Submit Timesheet', 'Submit timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_approve_id, 'Timesheet.approve', 'Approve Timesheet', 'Approve timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheet_reject_id, 'Timesheet.reject', 'Reject Timesheet', 'Reject timesheet records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetentry_read_id, 'TimesheetEntry.read', 'View Timesheet Entry', 'View and access timesheet entry records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetentry_create_id, 'TimesheetEntry.create', 'Create Timesheet Entry', 'Create new timesheet entry records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetentry_update_id, 'TimesheetEntry.update', 'Update Timesheet Entry', 'Modify existing timesheet entry records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetentry_soft_delete_id, 'TimesheetEntry.soft_delete', 'Delete Timesheet Entry', 'Delete (soft) timesheet entry records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetentry_restore_id, 'TimesheetEntry.restore', 'Restore Timesheet Entry', 'Restore deleted timesheet entry records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetapproval_read_id, 'TimesheetApproval.read', 'View Timesheet Approval', 'View and access timesheet approval records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetapproval_create_id, 'TimesheetApproval.create', 'Create Timesheet Approval', 'Create new timesheet approval records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetapproval_approve_id, 'TimesheetApproval.approve', 'Approve Timesheet Approval', 'Approve timesheet approval records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_timesheetapproval_reject_id, 'TimesheetApproval.reject', 'Reject Timesheet Approval', 'Reject timesheet approval records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_read_id, 'LeaveOfAbsence.read', 'View Leave Of Absence', 'View and access leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_create_id, 'LeaveOfAbsence.create', 'Create Leave Of Absence', 'Create new leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_update_id, 'LeaveOfAbsence.update', 'Update Leave Of Absence', 'Modify existing leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_soft_delete_id, 'LeaveOfAbsence.soft_delete', 'Delete Leave Of Absence', 'Delete (soft) leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_restore_id, 'LeaveOfAbsence.restore', 'Restore Leave Of Absence', 'Restore deleted leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_approve_id, 'LeaveOfAbsence.approve', 'Approve Leave Of Absence', 'Approve leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_leaveofabsence_reject_id, 'LeaveOfAbsence.reject', 'Reject Leave Of Absence', 'Reject leave of absence records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_absencebalance_read_id, 'AbsenceBalance.read', 'View Absence Balance', 'View and access absence balance records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_absencebalance_create_id, 'AbsenceBalance.create', 'Create Absence Balance', 'Create new absence balance records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_absencebalance_update_id, 'AbsenceBalance.update', 'Update Absence Balance', 'Modify existing absence balance records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_absencebalance_soft_delete_id, 'AbsenceBalance.soft_delete', 'Delete Absence Balance', 'Delete (soft) absence balance records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_absencebalance_restore_id, 'AbsenceBalance.restore', 'Restore Absence Balance', 'Restore deleted absence balance records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_holidaycalendar_read_id, 'HolidayCalendar.read', 'View Holiday Calendar', 'View and access holiday calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_holidaycalendar_create_id, 'HolidayCalendar.create', 'Create Holiday Calendar', 'Create new holiday calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_holidaycalendar_update_id, 'HolidayCalendar.update', 'Update Holiday Calendar', 'Modify existing holiday calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_holidaycalendar_soft_delete_id, 'HolidayCalendar.soft_delete', 'Delete Holiday Calendar', 'Delete (soft) holiday calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_holidaycalendar_restore_id, 'HolidayCalendar.restore', 'Restore Holiday Calendar', 'Restore deleted holiday calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_read_id, 'OvertimeRule.read', 'View Overtime Rule', 'View and access overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_create_id, 'OvertimeRule.create', 'Create Overtime Rule', 'Create new overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_update_id, 'OvertimeRule.update', 'Update Overtime Rule', 'Modify existing overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_soft_delete_id, 'OvertimeRule.soft_delete', 'Delete Overtime Rule', 'Delete (soft) overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_restore_id, 'OvertimeRule.restore', 'Restore Overtime Rule', 'Restore deleted overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_activate_id, 'OvertimeRule.activate', 'Activate Overtime Rule', 'Activate overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_overtimerule_deactivate_id, 'OvertimeRule.deactivate', 'Deactivate Overtime Rule', 'Deactivate overtime rule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paycalendar_read_id, 'PayCalendar.read', 'View Pay Calendar', 'View and access pay calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paycalendar_create_id, 'PayCalendar.create', 'Create Pay Calendar', 'Create new pay calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paycalendar_update_id, 'PayCalendar.update', 'Update Pay Calendar', 'Modify existing pay calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paycalendar_soft_delete_id, 'PayCalendar.soft_delete', 'Delete Pay Calendar', 'Delete (soft) pay calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paycalendar_restore_id, 'PayCalendar.restore', 'Restore Pay Calendar', 'Restore deleted pay calendar records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroup_read_id, 'PayGroup.read', 'View Pay Group', 'View and access pay group records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroup_create_id, 'PayGroup.create', 'Create Pay Group', 'Create new pay group records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroup_update_id, 'PayGroup.update', 'Update Pay Group', 'Modify existing pay group records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroup_soft_delete_id, 'PayGroup.soft_delete', 'Delete Pay Group', 'Delete (soft) pay group records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroup_restore_id, 'PayGroup.restore', 'Restore Pay Group', 'Restore deleted pay group records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroupassignment_read_id, 'PayGroupAssignment.read', 'View Pay Group Assignment', 'View and access pay group assignment records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroupassignment_create_id, 'PayGroupAssignment.create', 'Create Pay Group Assignment', 'Create new pay group assignment records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroupassignment_update_id, 'PayGroupAssignment.update', 'Update Pay Group Assignment', 'Modify existing pay group assignment records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroupassignment_assign_id, 'PayGroupAssignment.assign', 'Assign Pay Group Assignment', 'Assign pay group assignment records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paygroupassignment_unassign_id, 'PayGroupAssignment.unassign', 'Unassign Pay Group Assignment', 'Remove assignment of pay group assignment records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_read_id, 'InventoryItem.read', 'View Inventory Item', 'View and access inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_create_id, 'InventoryItem.create', 'Create Inventory Item', 'Create new inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_update_id, 'InventoryItem.update', 'Update Inventory Item', 'Modify existing inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_soft_delete_id, 'InventoryItem.soft_delete', 'Delete Inventory Item', 'Delete (soft) inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_restore_id, 'InventoryItem.restore', 'Restore Inventory Item', 'Restore deleted inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_assign_id, 'InventoryItem.assign', 'Assign Inventory Item', 'Assign inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_unassign_id, 'InventoryItem.unassign', 'Unassign Inventory Item', 'Remove assignment of inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_transfer_id, 'InventoryItem.transfer', 'Transfer Inventory Item', 'Transfer ownership of inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_activate_id, 'InventoryItem.activate', 'Activate Inventory Item', 'Activate inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_deactivate_id, 'InventoryItem.deactivate', 'Deactivate Inventory Item', 'Deactivate inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorytransaction_read_id, 'InventoryTransaction.read', 'View Inventory Transaction', 'View and access inventory transaction records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorytransaction_create_id, 'InventoryTransaction.create', 'Create Inventory Transaction', 'Create new inventory transaction records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorytransaction_update_id, 'InventoryTransaction.update', 'Update Inventory Transaction', 'Modify existing inventory transaction records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorytransaction_soft_delete_id, 'InventoryTransaction.soft_delete', 'Delete Inventory Transaction', 'Delete (soft) inventory transaction records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorytransaction_restore_id, 'InventoryTransaction.restore', 'Restore Inventory Transaction', 'Restore deleted inventory transaction records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_read_id, 'InventoryAdjustment.read', 'View Inventory Adjustment', 'View and access inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_create_id, 'InventoryAdjustment.create', 'Create Inventory Adjustment', 'Create new inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_update_id, 'InventoryAdjustment.update', 'Update Inventory Adjustment', 'Modify existing inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_soft_delete_id, 'InventoryAdjustment.soft_delete', 'Delete Inventory Adjustment', 'Delete (soft) inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_restore_id, 'InventoryAdjustment.restore', 'Restore Inventory Adjustment', 'Restore deleted inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_approve_id, 'InventoryAdjustment.approve', 'Approve Inventory Adjustment', 'Approve inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryadjustment_reject_id, 'InventoryAdjustment.reject', 'Reject Inventory Adjustment', 'Reject inventory adjustment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycount_read_id, 'InventoryCount.read', 'View Inventory Count', 'View and access inventory count records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycount_create_id, 'InventoryCount.create', 'Create Inventory Count', 'Create new inventory count records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycount_update_id, 'InventoryCount.update', 'Update Inventory Count', 'Modify existing inventory count records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycount_soft_delete_id, 'InventoryCount.soft_delete', 'Delete Inventory Count', 'Delete (soft) inventory count records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycount_restore_id, 'InventoryCount.restore', 'Restore Inventory Count', 'Restore deleted inventory count records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycountline_read_id, 'InventoryCountLine.read', 'View Inventory Count Line', 'View and access inventory count line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycountline_create_id, 'InventoryCountLine.create', 'Create Inventory Count Line', 'Create new inventory count line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycountline_update_id, 'InventoryCountLine.update', 'Update Inventory Count Line', 'Modify existing inventory count line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycountline_soft_delete_id, 'InventoryCountLine.soft_delete', 'Delete Inventory Count Line', 'Delete (soft) inventory count line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorycountline_restore_id, 'InventoryCountLine.restore', 'Restore Inventory Count Line', 'Restore deleted inventory count line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_read_id, 'Asset.read', 'View Asset', 'View and access asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_create_id, 'Asset.create', 'Create Asset', 'Create new asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_update_id, 'Asset.update', 'Update Asset', 'Modify existing asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_soft_delete_id, 'Asset.soft_delete', 'Delete Asset', 'Delete (soft) asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_restore_id, 'Asset.restore', 'Restore Asset', 'Restore deleted asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_assign_id, 'Asset.assign', 'Assign Asset', 'Assign asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_unassign_id, 'Asset.unassign', 'Unassign Asset', 'Remove assignment of asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_transfer_id, 'Asset.transfer', 'Transfer Asset', 'Transfer ownership of asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_activate_id, 'Asset.activate', 'Activate Asset', 'Activate asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_deactivate_id, 'Asset.deactivate', 'Deactivate Asset', 'Deactivate asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_read_id, 'AssetAssignment.read', 'View Asset Assignment', 'View and access asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_create_id, 'AssetAssignment.create', 'Create Asset Assignment', 'Create new asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_update_id, 'AssetAssignment.update', 'Update Asset Assignment', 'Modify existing asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_soft_delete_id, 'AssetAssignment.soft_delete', 'Delete Asset Assignment', 'Delete (soft) asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_restore_id, 'AssetAssignment.restore', 'Restore Asset Assignment', 'Restore deleted asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_assign_id, 'AssetAssignment.assign', 'Assign Asset Assignment', 'Assign asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_unassign_id, 'AssetAssignment.unassign', 'Unassign Asset Assignment', 'Remove assignment of asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetassignment_transfer_id, 'AssetAssignment.transfer', 'Transfer Asset Assignment', 'Transfer ownership of asset assignment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmaintenance_read_id, 'AssetMaintenance.read', 'View Asset Maintenance', 'View and access asset maintenance records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmaintenance_create_id, 'AssetMaintenance.create', 'Create Asset Maintenance', 'Create new asset maintenance records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmaintenance_update_id, 'AssetMaintenance.update', 'Update Asset Maintenance', 'Modify existing asset maintenance records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmaintenance_soft_delete_id, 'AssetMaintenance.soft_delete', 'Delete Asset Maintenance', 'Delete (soft) asset maintenance records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmaintenance_restore_id, 'AssetMaintenance.restore', 'Restore Asset Maintenance', 'Restore deleted asset maintenance records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdepreciation_read_id, 'AssetDepreciation.read', 'View Asset Depreciation', 'View and access asset depreciation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdepreciation_create_id, 'AssetDepreciation.create', 'Create Asset Depreciation', 'Create new asset depreciation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdepreciation_update_id, 'AssetDepreciation.update', 'Update Asset Depreciation', 'Modify existing asset depreciation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdepreciation_soft_delete_id, 'AssetDepreciation.soft_delete', 'Delete Asset Depreciation', 'Delete (soft) asset depreciation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdepreciation_restore_id, 'AssetDepreciation.restore', 'Restore Asset Depreciation', 'Restore deleted asset depreciation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdocument_read_id, 'AssetDocument.read', 'View Asset Document', 'View and access asset document records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdocument_create_id, 'AssetDocument.create', 'Create Asset Document', 'Create new asset document records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdocument_update_id, 'AssetDocument.update', 'Update Asset Document', 'Modify existing asset document records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdocument_soft_delete_id, 'AssetDocument.soft_delete', 'Delete Asset Document', 'Delete (soft) asset document records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetdocument_restore_id, 'AssetDocument.restore', 'Restore Asset Document', 'Restore deleted asset document records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmeterreading_read_id, 'AssetMeterReading.read', 'View Asset Meter Reading', 'View and access asset meter reading records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmeterreading_create_id, 'AssetMeterReading.create', 'Create Asset Meter Reading', 'Create new asset meter reading records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmeterreading_update_id, 'AssetMeterReading.update', 'Update Asset Meter Reading', 'Modify existing asset meter reading records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmeterreading_soft_delete_id, 'AssetMeterReading.soft_delete', 'Delete Asset Meter Reading', 'Delete (soft) asset meter reading records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_assetmeterreading_restore_id, 'AssetMeterReading.restore', 'Restore Asset Meter Reading', 'Restore deleted asset meter reading records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorylocation_read_id, 'InventoryLocation.read', 'View Inventory Location', 'View and access inventory location records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorylocation_create_id, 'InventoryLocation.create', 'Create Inventory Location', 'Create new inventory location records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorylocation_update_id, 'InventoryLocation.update', 'Update Inventory Location', 'Modify existing inventory location records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorylocation_soft_delete_id, 'InventoryLocation.soft_delete', 'Delete Inventory Location', 'Delete (soft) inventory location records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorylocation_restore_id, 'InventoryLocation.restore', 'Restore Inventory Location', 'Restore deleted inventory location records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorybin_read_id, 'InventoryBin.read', 'View Inventory Bin', 'View and access inventory bin records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorybin_create_id, 'InventoryBin.create', 'Create Inventory Bin', 'Create new inventory bin records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorybin_update_id, 'InventoryBin.update', 'Update Inventory Bin', 'Modify existing inventory bin records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorybin_soft_delete_id, 'InventoryBin.soft_delete', 'Delete Inventory Bin', 'Delete (soft) inventory bin records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventorybin_restore_id, 'InventoryBin.restore', 'Restore Inventory Bin', 'Restore deleted inventory bin records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryreservation_read_id, 'InventoryReservation.read', 'View Inventory Reservation', 'View and access inventory reservation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryreservation_create_id, 'InventoryReservation.create', 'Create Inventory Reservation', 'Create new inventory reservation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryreservation_update_id, 'InventoryReservation.update', 'Update Inventory Reservation', 'Modify existing inventory reservation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryreservation_soft_delete_id, 'InventoryReservation.soft_delete', 'Delete Inventory Reservation', 'Delete (soft) inventory reservation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryreservation_restore_id, 'InventoryReservation.restore', 'Restore Inventory Reservation', 'Restore deleted inventory reservation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryattachment_read_id, 'InventoryAttachment.read', 'View Inventory Attachment', 'View and access inventory attachment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryattachment_create_id, 'InventoryAttachment.create', 'Create Inventory Attachment', 'Create new inventory attachment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryattachment_update_id, 'InventoryAttachment.update', 'Update Inventory Attachment', 'Modify existing inventory attachment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryattachment_soft_delete_id, 'InventoryAttachment.soft_delete', 'Delete Inventory Attachment', 'Delete (soft) inventory attachment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryattachment_restore_id, 'InventoryAttachment.restore', 'Restore Inventory Attachment', 'Restore deleted inventory attachment records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceipt_read_id, 'GoodsReceipt.read', 'View Goods Receipt', 'View and access goods receipt records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceipt_create_id, 'GoodsReceipt.create', 'Create Goods Receipt', 'Create new goods receipt records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceipt_update_id, 'GoodsReceipt.update', 'Update Goods Receipt', 'Modify existing goods receipt records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceipt_soft_delete_id, 'GoodsReceipt.soft_delete', 'Delete Goods Receipt', 'Delete (soft) goods receipt records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceipt_restore_id, 'GoodsReceipt.restore', 'Restore Goods Receipt', 'Restore deleted goods receipt records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceiptline_read_id, 'GoodsReceiptLine.read', 'View Goods Receipt Line', 'View and access goods receipt line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceiptline_create_id, 'GoodsReceiptLine.create', 'Create Goods Receipt Line', 'Create new goods receipt line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceiptline_update_id, 'GoodsReceiptLine.update', 'Update Goods Receipt Line', 'Modify existing goods receipt line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceiptline_soft_delete_id, 'GoodsReceiptLine.soft_delete', 'Delete Goods Receipt Line', 'Delete (soft) goods receipt line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_goodsreceiptline_restore_id, 'GoodsReceiptLine.restore', 'Restore Goods Receipt Line', 'Restore deleted goods receipt line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponseline_read_id, 'RFQResponseLine.read', 'View R F Q Response Line', 'View and access r f q response line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponseline_create_id, 'RFQResponseLine.create', 'Create R F Q Response Line', 'Create new r f q response line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponseline_update_id, 'RFQResponseLine.update', 'Update R F Q Response Line', 'Modify existing r f q response line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponseline_soft_delete_id, 'RFQResponseLine.soft_delete', 'Delete R F Q Response Line', 'Delete (soft) r f q response line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_rfqresponseline_restore_id, 'RFQResponseLine.restore', 'Restore R F Q Response Line', 'Restore deleted r f q response line records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reasoncode_read_id, 'ReasonCode.read', 'View Reason Code', 'View and access reason code records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reasoncode_create_id, 'ReasonCode.create', 'Create Reason Code', 'Create new reason code records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reasoncode_update_id, 'ReasonCode.update', 'Update Reason Code', 'Modify existing reason code records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reasoncode_soft_delete_id, 'ReasonCode.soft_delete', 'Delete Reason Code', 'Delete (soft) reason code records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reasoncode_restore_id, 'ReasonCode.restore', 'Restore Reason Code', 'Restore deleted reason code records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_read_id, 'ResourceAllocation.read', 'View Resource Allocation', 'View and access resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_create_id, 'ResourceAllocation.create', 'Create Resource Allocation', 'Create new resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_update_id, 'ResourceAllocation.update', 'Update Resource Allocation', 'Modify existing resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_soft_delete_id, 'ResourceAllocation.soft_delete', 'Delete Resource Allocation', 'Delete (soft) resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_restore_id, 'ResourceAllocation.restore', 'Restore Resource Allocation', 'Restore deleted resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_allocate_id, 'ResourceAllocation.allocate', 'Allocate Resource Allocation', 'Allocate resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_resourceallocation_deallocate_id, 'ResourceAllocation.deallocate', 'Deallocate Resource Allocation', 'Deallocate resource allocation records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_read_id, 'Channel.read', 'View Channel', 'View and access channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_create_id, 'Channel.create', 'Create Channel', 'Create new channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_update_id, 'Channel.update', 'Update Channel', 'Modify existing channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_soft_delete_id, 'Channel.soft_delete', 'Delete Channel', 'Delete (soft) channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_restore_id, 'Channel.restore', 'Restore Channel', 'Restore deleted channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_archive_id, 'Channel.archive', 'Archive Channel', 'Archive channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_activate_id, 'Channel.activate', 'Activate Channel', 'Activate channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_deactivate_id, 'Channel.deactivate', 'Deactivate Channel', 'Deactivate channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_read_id, 'ChannelMember.read', 'View Channel Member', 'View and access channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_create_id, 'ChannelMember.create', 'Create Channel Member', 'Create new channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_update_id, 'ChannelMember.update', 'Update Channel Member', 'Modify existing channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_soft_delete_id, 'ChannelMember.soft_delete', 'Delete Channel Member', 'Delete (soft) channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_restore_id, 'ChannelMember.restore', 'Restore Channel Member', 'Restore deleted channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_assign_id, 'ChannelMember.assign', 'Assign Channel Member', 'Assign channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channelmember_unassign_id, 'ChannelMember.unassign', 'Unassign Channel Member', 'Remove assignment of channel member records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_read_id, 'DirectChat.read', 'View Direct Chat', 'View and access direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_create_id, 'DirectChat.create', 'Create Direct Chat', 'Create new direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_update_id, 'DirectChat.update', 'Update Direct Chat', 'Modify existing direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_soft_delete_id, 'DirectChat.soft_delete', 'Delete Direct Chat', 'Delete (soft) direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_restore_id, 'DirectChat.restore', 'Restore Direct Chat', 'Restore deleted direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_archive_id, 'DirectChat.archive', 'Archive Direct Chat', 'Archive direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessage_read_id, 'DirectMessage.read', 'View Direct Message', 'View and access direct message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessage_create_id, 'DirectMessage.create', 'Create Direct Message', 'Create new direct message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessage_update_id, 'DirectMessage.update', 'Update Direct Message', 'Modify existing direct message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessage_soft_delete_id, 'DirectMessage.soft_delete', 'Delete Direct Message', 'Delete (soft) direct message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessage_restore_id, 'DirectMessage.restore', 'Restore Direct Message', 'Restore deleted direct message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessageread_read_id, 'DirectMessageRead.read', 'View Direct Message Read', 'View and access direct message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessageread_create_id, 'DirectMessageRead.create', 'Create Direct Message Read', 'Create new direct message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directmessageread_update_id, 'DirectMessageRead.update', 'Update Direct Message Read', 'Modify existing direct message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notification_read_id, 'Notification.read', 'View Notification', 'View and access notification records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notification_create_id, 'Notification.create', 'Create Notification', 'Create new notification records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notification_update_id, 'Notification.update', 'Update Notification', 'Modify existing notification records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notification_soft_delete_id, 'Notification.soft_delete', 'Delete Notification', 'Delete (soft) notification records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notification_restore_id, 'Notification.restore', 'Restore Notification', 'Restore deleted notification records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_read_id, 'InAppAnnouncement.read', 'View In App Announcement', 'View and access in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_create_id, 'InAppAnnouncement.create', 'Create In App Announcement', 'Create new in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_update_id, 'InAppAnnouncement.update', 'Update In App Announcement', 'Modify existing in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_soft_delete_id, 'InAppAnnouncement.soft_delete', 'Delete In App Announcement', 'Delete (soft) in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_restore_id, 'InAppAnnouncement.restore', 'Restore In App Announcement', 'Restore deleted in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inappannouncement_publish_id, 'InAppAnnouncement.publish', 'Publish In App Announcement', 'Publish in app announcement records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_message_read_id, 'Message.read', 'View Message', 'View and access message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_message_create_id, 'Message.create', 'Create Message', 'Create new message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_message_update_id, 'Message.update', 'Update Message', 'Modify existing message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_message_soft_delete_id, 'Message.soft_delete', 'Delete Message', 'Delete (soft) message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_message_restore_id, 'Message.restore', 'Restore Message', 'Restore deleted message records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageattachment_read_id, 'MessageAttachment.read', 'View Message Attachment', 'View and access message attachment records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageattachment_create_id, 'MessageAttachment.create', 'Create Message Attachment', 'Create new message attachment records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageattachment_update_id, 'MessageAttachment.update', 'Update Message Attachment', 'Modify existing message attachment records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageattachment_soft_delete_id, 'MessageAttachment.soft_delete', 'Delete Message Attachment', 'Delete (soft) message attachment records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageattachment_restore_id, 'MessageAttachment.restore', 'Restore Message Attachment', 'Restore deleted message attachment records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageread_read_id, 'MessageRead.read', 'View Message Read', 'View and access message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageread_create_id, 'MessageRead.create', 'Create Message Read', 'Create new message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_messageread_update_id, 'MessageRead.update', 'Update Message Read', 'Modify existing message read records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationpreference_read_id, 'NotificationPreference.read', 'View Notification Preference', 'View and access notification preference records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationpreference_create_id, 'NotificationPreference.create', 'Create Notification Preference', 'Create new notification preference records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationpreference_update_id, 'NotificationPreference.update', 'Update Notification Preference', 'Modify existing notification preference records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationpreference_soft_delete_id, 'NotificationPreference.soft_delete', 'Delete Notification Preference', 'Delete (soft) notification preference records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationpreference_restore_id, 'NotificationPreference.restore', 'Restore Notification Preference', 'Restore deleted notification preference records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationtemplate_read_id, 'NotificationTemplate.read', 'View Notification Template', 'View and access notification template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationtemplate_create_id, 'NotificationTemplate.create', 'Create Notification Template', 'Create new notification template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationtemplate_update_id, 'NotificationTemplate.update', 'Update Notification Template', 'Modify existing notification template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationtemplate_soft_delete_id, 'NotificationTemplate.soft_delete', 'Delete Notification Template', 'Delete (soft) notification template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_notificationtemplate_restore_id, 'NotificationTemplate.restore', 'Restore Notification Template', 'Restore deleted notification template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_emailtemplate_read_id, 'EmailTemplate.read', 'View Email Template', 'View and access email template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_emailtemplate_create_id, 'EmailTemplate.create', 'Create Email Template', 'Create new email template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_emailtemplate_update_id, 'EmailTemplate.update', 'Update Email Template', 'Modify existing email template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_emailtemplate_soft_delete_id, 'EmailTemplate.soft_delete', 'Delete Email Template', 'Delete (soft) email template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_emailtemplate_restore_id, 'EmailTemplate.restore', 'Restore Email Template', 'Restore deleted email template records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_read_id, 'FileObject.read', 'View File Object', 'View and access file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_create_id, 'FileObject.create', 'Create File Object', 'Create new file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_update_id, 'FileObject.update', 'Update File Object', 'Modify existing file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_soft_delete_id, 'FileObject.soft_delete', 'Delete File Object', 'Delete (soft) file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_restore_id, 'FileObject.restore', 'Restore File Object', 'Restore deleted file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_read_id, 'Attachment.read', 'View Attachment', 'View and access attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_create_id, 'Attachment.create', 'Create Attachment', 'Create new attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_update_id, 'Attachment.update', 'Update Attachment', 'Modify existing attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_soft_delete_id, 'Attachment.soft_delete', 'Delete Attachment', 'Delete (soft) attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_restore_id, 'Attachment.restore', 'Restore Attachment', 'Restore deleted attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_approve_id, 'Attachment.approve', 'Approve Attachment', 'Approve attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_reject_id, 'Attachment.reject', 'Reject Attachment', 'Reject attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachmentlink_read_id, 'AttachmentLink.read', 'View Attachment Link', 'View and access attachment link records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachmentlink_create_id, 'AttachmentLink.create', 'Create Attachment Link', 'Create new attachment link records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachmentlink_update_id, 'AttachmentLink.update', 'Update Attachment Link', 'Modify existing attachment link records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachmentlink_soft_delete_id, 'AttachmentLink.soft_delete', 'Delete Attachment Link', 'Delete (soft) attachment link records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachmentlink_restore_id, 'AttachmentLink.restore', 'Restore Attachment Link', 'Restore deleted attachment link records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_read_id, 'ESignatureEnvelope.read', 'View E Signature Envelope', 'View and access e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_create_id, 'ESignatureEnvelope.create', 'Create E Signature Envelope', 'Create new e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_update_id, 'ESignatureEnvelope.update', 'Update E Signature Envelope', 'Modify existing e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_soft_delete_id, 'ESignatureEnvelope.soft_delete', 'Delete E Signature Envelope', 'Delete (soft) e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_restore_id, 'ESignatureEnvelope.restore', 'Restore E Signature Envelope', 'Restore deleted e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignatureenvelope_send_id, 'ESignatureEnvelope.send', 'Send E Signature Envelope', 'Send e signature envelope records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignaturerecipient_read_id, 'ESignatureRecipient.read', 'View E Signature Recipient', 'View and access e signature recipient records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignaturerecipient_create_id, 'ESignatureRecipient.create', 'Create E Signature Recipient', 'Create new e signature recipient records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignaturerecipient_update_id, 'ESignatureRecipient.update', 'Update E Signature Recipient', 'Modify existing e signature recipient records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignaturerecipient_soft_delete_id, 'ESignatureRecipient.soft_delete', 'Delete E Signature Recipient', 'Delete (soft) e signature recipient records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_esignaturerecipient_restore_id, 'ESignatureRecipient.restore', 'Restore E Signature Recipient', 'Restore deleted e signature recipient records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_documentgroup_read_id, 'DocumentGroup.read', 'View Document Group', 'View and access document group records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_documentgroup_create_id, 'DocumentGroup.create', 'Create Document Group', 'Create new document group records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_documentgroup_update_id, 'DocumentGroup.update', 'Update Document Group', 'Modify existing document group records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_documentgroup_soft_delete_id, 'DocumentGroup.soft_delete', 'Delete Document Group', 'Delete (soft) document group records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_documentgroup_restore_id, 'DocumentGroup.restore', 'Restore Document Group', 'Restore deleted document group records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_read_id, 'ContractTemplate.read', 'View Contract Template', 'View and access contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_create_id, 'ContractTemplate.create', 'Create Contract Template', 'Create new contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_update_id, 'ContractTemplate.update', 'Update Contract Template', 'Modify existing contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_soft_delete_id, 'ContractTemplate.soft_delete', 'Delete Contract Template', 'Delete (soft) contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_restore_id, 'ContractTemplate.restore', 'Restore Contract Template', 'Restore deleted contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_read_id, 'TermsTemplate.read', 'View Terms Template', 'View and access terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_create_id, 'TermsTemplate.create', 'Create Terms Template', 'Create new terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_update_id, 'TermsTemplate.update', 'Update Terms Template', 'Modify existing terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_soft_delete_id, 'TermsTemplate.soft_delete', 'Delete Terms Template', 'Delete (soft) terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_restore_id, 'TermsTemplate.restore', 'Restore Terms Template', 'Restore deleted terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_read_id, 'Vendor.read', 'View Vendor', 'View and access vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_create_id, 'Vendor.create', 'Create Vendor', 'Create new vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_update_id, 'Vendor.update', 'Update Vendor', 'Modify existing vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_soft_delete_id, 'Vendor.soft_delete', 'Delete Vendor', 'Delete (soft) vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_restore_id, 'Vendor.restore', 'Restore Vendor', 'Restore deleted vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_activate_id, 'Vendor.activate', 'Activate Vendor', 'Activate vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_deactivate_id, 'Vendor.deactivate', 'Deactivate Vendor', 'Deactivate vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendorcontact_read_id, 'VendorContact.read', 'View Vendor Contact', 'View and access vendor contact records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendorcontact_create_id, 'VendorContact.create', 'Create Vendor Contact', 'Create new vendor contact records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendorcontact_update_id, 'VendorContact.update', 'Update Vendor Contact', 'Modify existing vendor contact records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendorcontact_soft_delete_id, 'VendorContact.soft_delete', 'Delete Vendor Contact', 'Delete (soft) vendor contact records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendorcontact_restore_id, 'VendorContact.restore', 'Restore Vendor Contact', 'Restore deleted vendor contact records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendordocument_read_id, 'VendorDocument.read', 'View Vendor Document', 'View and access vendor document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendordocument_create_id, 'VendorDocument.create', 'Create Vendor Document', 'Create new vendor document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendordocument_update_id, 'VendorDocument.update', 'Update Vendor Document', 'Modify existing vendor document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendordocument_soft_delete_id, 'VendorDocument.soft_delete', 'Delete Vendor Document', 'Delete (soft) vendor document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendordocument_restore_id, 'VendorDocument.restore', 'Restore Vendor Document', 'Restore deleted vendor document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_read_id, 'Contract.read', 'View Contract', 'View and access contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_create_id, 'Contract.create', 'Create Contract', 'Create new contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_update_id, 'Contract.update', 'Update Contract', 'Modify existing contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_soft_delete_id, 'Contract.soft_delete', 'Delete Contract', 'Delete (soft) contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_restore_id, 'Contract.restore', 'Restore Contract', 'Restore deleted contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_send_id, 'Contract.send', 'Send Contract', 'Send contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_approve_id, 'Contract.approve', 'Approve Contract', 'Approve contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contract_reject_id, 'Contract.reject', 'Reject Contract', 'Reject contract records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_person_read_id, 'Person.read', 'View Person', 'View and access person records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_person_create_id, 'Person.create', 'Create Person', 'Create new person records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_person_update_id, 'Person.update', 'Update Person', 'Modify existing person records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_person_soft_delete_id, 'Person.soft_delete', 'Delete Person', 'Delete (soft) person records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_person_restore_id, 'Person.restore', 'Restore Person', 'Restore deleted person records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personname_read_id, 'PersonName.read', 'View Person Name', 'View and access person name records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personname_create_id, 'PersonName.create', 'Create Person Name', 'Create new person name records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personname_update_id, 'PersonName.update', 'Update Person Name', 'Modify existing person name records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personname_soft_delete_id, 'PersonName.soft_delete', 'Delete Person Name', 'Delete (soft) person name records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personname_restore_id, 'PersonName.restore', 'Restore Person Name', 'Restore deleted person name records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personaddress_read_id, 'PersonAddress.read', 'View Person Address', 'View and access person address records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personaddress_create_id, 'PersonAddress.create', 'Create Person Address', 'Create new person address records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personaddress_update_id, 'PersonAddress.update', 'Update Person Address', 'Modify existing person address records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personaddress_soft_delete_id, 'PersonAddress.soft_delete', 'Delete Person Address', 'Delete (soft) person address records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personaddress_restore_id, 'PersonAddress.restore', 'Restore Person Address', 'Restore deleted person address records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personcontactmethod_read_id, 'PersonContactMethod.read', 'View Person Contact Method', 'View and access person contact method records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personcontactmethod_create_id, 'PersonContactMethod.create', 'Create Person Contact Method', 'Create new person contact method records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personcontactmethod_update_id, 'PersonContactMethod.update', 'Update Person Contact Method', 'Modify existing person contact method records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personcontactmethod_soft_delete_id, 'PersonContactMethod.soft_delete', 'Delete Person Contact Method', 'Delete (soft) person contact method records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_personcontactmethod_restore_id, 'PersonContactMethod.restore', 'Restore Person Contact Method', 'Restore deleted person contact method records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_persondocument_read_id, 'PersonDocument.read', 'View Person Document', 'View and access person document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_persondocument_create_id, 'PersonDocument.create', 'Create Person Document', 'Create new person document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_persondocument_update_id, 'PersonDocument.update', 'Update Person Document', 'Modify existing person document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_persondocument_soft_delete_id, 'PersonDocument.soft_delete', 'Delete Person Document', 'Delete (soft) person document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_persondocument_restore_id, 'PersonDocument.restore', 'Restore Person Document', 'Restore deleted person document records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_read_id, 'AIAction.read', 'View A I Action', 'View and access a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_create_id, 'AIAction.create', 'Create A I Action', 'Create new a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_update_id, 'AIAction.update', 'Update A I Action', 'Modify existing a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_soft_delete_id, 'AIAction.soft_delete', 'Delete A I Action', 'Delete (soft) a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_restore_id, 'AIAction.restore', 'Restore A I Action', 'Restore deleted a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_activate_id, 'AIAction.activate', 'Activate A I Action', 'Activate a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiaction_deactivate_id, 'AIAction.deactivate', 'Deactivate A I Action', 'Deactivate a i action records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiactionrun_read_id, 'AIActionRun.read', 'View A I Action Run', 'View and access a i action run records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiactionrun_create_id, 'AIActionRun.create', 'Create A I Action Run', 'Create new a i action run records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiactionrun_update_id, 'AIActionRun.update', 'Update A I Action Run', 'Modify existing a i action run records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiactionrun_soft_delete_id, 'AIActionRun.soft_delete', 'Delete A I Action Run', 'Delete (soft) a i action run records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiactionrun_restore_id, 'AIActionRun.restore', 'Restore A I Action Run', 'Restore deleted a i action run records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijob_read_id, 'AIJob.read', 'View A I Job', 'View and access a i job records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijob_create_id, 'AIJob.create', 'Create A I Job', 'Create new a i job records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijob_update_id, 'AIJob.update', 'Update A I Job', 'Modify existing a i job records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijob_soft_delete_id, 'AIJob.soft_delete', 'Delete A I Job', 'Delete (soft) a i job records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijob_restore_id, 'AIJob.restore', 'Restore A I Job', 'Restore deleted a i job records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijobartifact_read_id, 'AIJobArtifact.read', 'View A I Job Artifact', 'View and access a i job artifact records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijobartifact_create_id, 'AIJobArtifact.create', 'Create A I Job Artifact', 'Create new a i job artifact records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijobartifact_update_id, 'AIJobArtifact.update', 'Update A I Job Artifact', 'Modify existing a i job artifact records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijobartifact_soft_delete_id, 'AIJobArtifact.soft_delete', 'Delete A I Job Artifact', 'Delete (soft) a i job artifact records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aijobartifact_restore_id, 'AIJobArtifact.restore', 'Restore A I Job Artifact', 'Restore deleted a i job artifact records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsight_read_id, 'AIInsight.read', 'View A I Insight', 'View and access a i insight records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsight_create_id, 'AIInsight.create', 'Create A I Insight', 'Create new a i insight records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsight_update_id, 'AIInsight.update', 'Update A I Insight', 'Modify existing a i insight records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsight_soft_delete_id, 'AIInsight.soft_delete', 'Delete A I Insight', 'Delete (soft) a i insight records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsight_restore_id, 'AIInsight.restore', 'Restore A I Insight', 'Restore deleted a i insight records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsightfeedback_read_id, 'AIInsightFeedback.read', 'View A I Insight Feedback', 'View and access a i insight feedback records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsightfeedback_create_id, 'AIInsightFeedback.create', 'Create A I Insight Feedback', 'Create new a i insight feedback records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsightfeedback_update_id, 'AIInsightFeedback.update', 'Update A I Insight Feedback', 'Modify existing a i insight feedback records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsightfeedback_soft_delete_id, 'AIInsightFeedback.soft_delete', 'Delete A I Insight Feedback', 'Delete (soft) a i insight feedback records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiinsightfeedback_restore_id, 'AIInsightFeedback.restore', 'Restore A I Insight Feedback', 'Restore deleted a i insight feedback records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_read_id, 'AIPlaybook.read', 'View A I Playbook', 'View and access a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_create_id, 'AIPlaybook.create', 'Create A I Playbook', 'Create new a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_update_id, 'AIPlaybook.update', 'Update A I Playbook', 'Modify existing a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_soft_delete_id, 'AIPlaybook.soft_delete', 'Delete A I Playbook', 'Delete (soft) a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_restore_id, 'AIPlaybook.restore', 'Restore A I Playbook', 'Restore deleted a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_activate_id, 'AIPlaybook.activate', 'Activate A I Playbook', 'Activate a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybook_deactivate_id, 'AIPlaybook.deactivate', 'Deactivate A I Playbook', 'Deactivate a i playbook records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybookstep_read_id, 'AIPlaybookStep.read', 'View A I Playbook Step', 'View and access a i playbook step records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybookstep_create_id, 'AIPlaybookStep.create', 'Create A I Playbook Step', 'Create new a i playbook step records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybookstep_update_id, 'AIPlaybookStep.update', 'Update A I Playbook Step', 'Modify existing a i playbook step records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybookstep_soft_delete_id, 'AIPlaybookStep.soft_delete', 'Delete A I Playbook Step', 'Delete (soft) a i playbook step records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiplaybookstep_restore_id, 'AIPlaybookStep.restore', 'Restore A I Playbook Step', 'Restore deleted a i playbook step records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiprompttemplate_read_id, 'AIPromptTemplate.read', 'View A I Prompt Template', 'View and access a i prompt template records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiprompttemplate_create_id, 'AIPromptTemplate.create', 'Create A I Prompt Template', 'Create new a i prompt template records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiprompttemplate_update_id, 'AIPromptTemplate.update', 'Update A I Prompt Template', 'Modify existing a i prompt template records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiprompttemplate_soft_delete_id, 'AIPromptTemplate.soft_delete', 'Delete A I Prompt Template', 'Delete (soft) a i prompt template records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiprompttemplate_restore_id, 'AIPromptTemplate.restore', 'Restore A I Prompt Template', 'Restore deleted a i prompt template records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_read_id, 'AIAssistantProfile.read', 'View A I Assistant Profile', 'View and access a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_create_id, 'AIAssistantProfile.create', 'Create A I Assistant Profile', 'Create new a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_update_id, 'AIAssistantProfile.update', 'Update A I Assistant Profile', 'Modify existing a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_soft_delete_id, 'AIAssistantProfile.soft_delete', 'Delete A I Assistant Profile', 'Delete (soft) a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_restore_id, 'AIAssistantProfile.restore', 'Restore A I Assistant Profile', 'Restore deleted a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_activate_id, 'AIAssistantProfile.activate', 'Activate A I Assistant Profile', 'Activate a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiassistantprofile_deactivate_id, 'AIAssistantProfile.deactivate', 'Deactivate A I Assistant Profile', 'Deactivate a i assistant profile records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentindex_read_id, 'AIDocumentIndex.read', 'View A I Document Index', 'View and access a i document index records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentindex_create_id, 'AIDocumentIndex.create', 'Create A I Document Index', 'Create new a i document index records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentindex_update_id, 'AIDocumentIndex.update', 'Update A I Document Index', 'Modify existing a i document index records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentindex_soft_delete_id, 'AIDocumentIndex.soft_delete', 'Delete A I Document Index', 'Delete (soft) a i document index records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentindex_restore_id, 'AIDocumentIndex.restore', 'Restore A I Document Index', 'Restore deleted a i document index records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentchunk_read_id, 'AIDocumentChunk.read', 'View A I Document Chunk', 'View and access a i document chunk records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentchunk_create_id, 'AIDocumentChunk.create', 'Create A I Document Chunk', 'Create new a i document chunk records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentchunk_update_id, 'AIDocumentChunk.update', 'Update A I Document Chunk', 'Modify existing a i document chunk records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentchunk_soft_delete_id, 'AIDocumentChunk.soft_delete', 'Delete A I Document Chunk', 'Delete (soft) a i document chunk records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aidocumentchunk_restore_id, 'AIDocumentChunk.restore', 'Restore A I Document Chunk', 'Restore deleted a i document chunk records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiembedding_read_id, 'AIEmbedding.read', 'View A I Embedding', 'View and access a i embedding records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiembedding_create_id, 'AIEmbedding.create', 'Create A I Embedding', 'Create new a i embedding records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiembedding_update_id, 'AIEmbedding.update', 'Update A I Embedding', 'Modify existing a i embedding records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiembedding_soft_delete_id, 'AIEmbedding.soft_delete', 'Delete A I Embedding', 'Delete (soft) a i embedding records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_aiembedding_restore_id, 'AIEmbedding.restore', 'Restore A I Embedding', 'Restore deleted a i embedding records within tenant scope', 'ai_automation',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_read_id, 'RoomScanSession.read', 'View Room Scan Session', 'View and access room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_list_id, 'RoomScanSession.list', 'List Room Scan Session', 'list room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_create_id, 'RoomScanSession.create', 'Create Room Scan Session', 'Create new room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_update_id, 'RoomScanSession.update', 'Update Room Scan Session', 'Modify existing room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_soft_delete_id, 'RoomScanSession.soft_delete', 'Delete Room Scan Session', 'Delete (soft) room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_restore_id, 'RoomScanSession.restore', 'Restore Room Scan Session', 'Restore deleted room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_activate_id, 'RoomScanSession.activate', 'Activate Room Scan Session', 'Activate room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_deactivate_id, 'RoomScanSession.deactivate', 'Deactivate Room Scan Session', 'Deactivate room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscansession_export_id, 'RoomScanSession.export', 'Export Room Scan Session', 'Export data for room scan session records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_read_id, 'RoomScanFile.read', 'View Room Scan File', 'View and access room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_list_id, 'RoomScanFile.list', 'List Room Scan File', 'list room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_create_id, 'RoomScanFile.create', 'Create Room Scan File', 'Create new room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_update_id, 'RoomScanFile.update', 'Update Room Scan File', 'Modify existing room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_soft_delete_id, 'RoomScanFile.soft_delete', 'Delete Room Scan File', 'Delete (soft) room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_restore_id, 'RoomScanFile.restore', 'Restore Room Scan File', 'Restore deleted room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomscanfile_export_id, 'RoomScanFile.export', 'Export Room Scan File', 'Export data for room scan file records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_read_id, 'RoomModel.read', 'View Room Model', 'View and access room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_list_id, 'RoomModel.list', 'List Room Model', 'list room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_create_id, 'RoomModel.create', 'Create Room Model', 'Create new room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_update_id, 'RoomModel.update', 'Update Room Model', 'Modify existing room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_soft_delete_id, 'RoomModel.soft_delete', 'Delete Room Model', 'Delete (soft) room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_restore_id, 'RoomModel.restore', 'Restore Room Model', 'Restore deleted room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_publish_id, 'RoomModel.publish', 'Publish Room Model', 'Publish room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_export_id, 'RoomModel.export', 'Export Room Model', 'Export data for room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommodel_duplicate_id, 'RoomModel.duplicate', 'Duplicate Room Model', 'Duplicate room model records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_read_id, 'RoomMeasurement.read', 'View Room Measurement', 'View and access room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_list_id, 'RoomMeasurement.list', 'List Room Measurement', 'list room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_create_id, 'RoomMeasurement.create', 'Create Room Measurement', 'Create new room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_update_id, 'RoomMeasurement.update', 'Update Room Measurement', 'Modify existing room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_soft_delete_id, 'RoomMeasurement.soft_delete', 'Delete Room Measurement', 'Delete (soft) room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_restore_id, 'RoomMeasurement.restore', 'Restore Room Measurement', 'Restore deleted room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roommeasurement_export_id, 'RoomMeasurement.export', 'Export Room Measurement', 'Export data for room measurement records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_read_id, 'RoomObject.read', 'View Room Object', 'View and access room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_list_id, 'RoomObject.list', 'List Room Object', 'list room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_create_id, 'RoomObject.create', 'Create Room Object', 'Create new room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_update_id, 'RoomObject.update', 'Update Room Object', 'Modify existing room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_soft_delete_id, 'RoomObject.soft_delete', 'Delete Room Object', 'Delete (soft) room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_restore_id, 'RoomObject.restore', 'Restore Room Object', 'Restore deleted room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomobject_export_id, 'RoomObject.export', 'Export Room Object', 'Export data for room object records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_read_id, 'RoomSurface.read', 'View Room Surface', 'View and access room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_list_id, 'RoomSurface.list', 'List Room Surface', 'list room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_create_id, 'RoomSurface.create', 'Create Room Surface', 'Create new room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_update_id, 'RoomSurface.update', 'Update Room Surface', 'Modify existing room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_soft_delete_id, 'RoomSurface.soft_delete', 'Delete Room Surface', 'Delete (soft) room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_restore_id, 'RoomSurface.restore', 'Restore Room Surface', 'Restore deleted room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomsurface_export_id, 'RoomSurface.export', 'Export Room Surface', 'Export data for room surface records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_read_id, 'RoomAnnotation.read', 'View Room Annotation', 'View and access room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_list_id, 'RoomAnnotation.list', 'List Room Annotation', 'list room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_create_id, 'RoomAnnotation.create', 'Create Room Annotation', 'Create new room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_update_id, 'RoomAnnotation.update', 'Update Room Annotation', 'Modify existing room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_soft_delete_id, 'RoomAnnotation.soft_delete', 'Delete Room Annotation', 'Delete (soft) room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_restore_id, 'RoomAnnotation.restore', 'Restore Room Annotation', 'Restore deleted room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_publish_id, 'RoomAnnotation.publish', 'Publish Room Annotation', 'Publish room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomannotation_export_id, 'RoomAnnotation.export', 'Export Room Annotation', 'Export data for room annotation records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_read_id, 'RoomExport.read', 'View Room Export', 'View and access room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_list_id, 'RoomExport.list', 'List Room Export', 'list room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_create_id, 'RoomExport.create', 'Create Room Export', 'Create new room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_update_id, 'RoomExport.update', 'Update Room Export', 'Modify existing room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_soft_delete_id, 'RoomExport.soft_delete', 'Delete Room Export', 'Delete (soft) room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_restore_id, 'RoomExport.restore', 'Restore Room Export', 'Restore deleted room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_export_id, 'RoomExport.export', 'Export Room Export', 'Export data for room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomexport_send_id, 'RoomExport.send', 'Send Room Export', 'Send room export records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_read_id, 'RoomPlanPreset.read', 'View Room Plan Preset', 'View and access room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_list_id, 'RoomPlanPreset.list', 'List Room Plan Preset', 'list room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_create_id, 'RoomPlanPreset.create', 'Create Room Plan Preset', 'Create new room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_update_id, 'RoomPlanPreset.update', 'Update Room Plan Preset', 'Modify existing room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_soft_delete_id, 'RoomPlanPreset.soft_delete', 'Delete Room Plan Preset', 'Delete (soft) room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_restore_id, 'RoomPlanPreset.restore', 'Restore Room Plan Preset', 'Restore deleted room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_duplicate_id, 'RoomPlanPreset.duplicate', 'Duplicate Room Plan Preset', 'Duplicate room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomplanpreset_publish_id, 'RoomPlanPreset.publish', 'Publish Room Plan Preset', 'Publish room plan preset records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_read_id, 'RoomProcessingJob.read', 'View Room Processing Job', 'View and access room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_list_id, 'RoomProcessingJob.list', 'List Room Processing Job', 'list room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_create_id, 'RoomProcessingJob.create', 'Create Room Processing Job', 'Create new room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_update_id, 'RoomProcessingJob.update', 'Update Room Processing Job', 'Modify existing room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_soft_delete_id, 'RoomProcessingJob.soft_delete', 'Delete Room Processing Job', 'Delete (soft) room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_restore_id, 'RoomProcessingJob.restore', 'Restore Room Processing Job', 'Restore deleted room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_activate_id, 'RoomProcessingJob.activate', 'Activate Room Processing Job', 'Activate room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_roomprocessingjob_deactivate_id, 'RoomProcessingJob.deactivate', 'Deactivate Room Processing Job', 'Deactivate room processing job records within tenant scope', 'roomplan_spatial',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_read_id, 'Employment.read', 'View Employment', 'View and access employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_create_id, 'Employment.create', 'Create Employment', 'Create new employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_update_id, 'Employment.update', 'Update Employment', 'Modify existing employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_soft_delete_id, 'Employment.soft_delete', 'Delete Employment', 'Delete (soft) employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_restore_id, 'Employment.restore', 'Restore Employment', 'Restore deleted employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_activate_id, 'Employment.activate', 'Activate Employment', 'Activate employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_employment_deactivate_id, 'Employment.deactivate', 'Deactivate Employment', 'Deactivate employment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_read_id, 'Position.read', 'View Position', 'View and access position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_create_id, 'Position.create', 'Create Position', 'Create new position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_update_id, 'Position.update', 'Update Position', 'Modify existing position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_soft_delete_id, 'Position.soft_delete', 'Delete Position', 'Delete (soft) position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_restore_id, 'Position.restore', 'Restore Position', 'Restore deleted position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_activate_id, 'Position.activate', 'Activate Position', 'Activate position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_position_deactivate_id, 'Position.deactivate', 'Deactivate Position', 'Deactivate position records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_read_id, 'PositionAssignment.read', 'View Position Assignment', 'View and access position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_create_id, 'PositionAssignment.create', 'Create Position Assignment', 'Create new position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_update_id, 'PositionAssignment.update', 'Update Position Assignment', 'Modify existing position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_soft_delete_id, 'PositionAssignment.soft_delete', 'Delete Position Assignment', 'Delete (soft) position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_restore_id, 'PositionAssignment.restore', 'Restore Position Assignment', 'Restore deleted position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_assign_id, 'PositionAssignment.assign', 'Assign Position Assignment', 'Assign position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionassignment_unassign_id, 'PositionAssignment.unassign', 'Unassign Position Assignment', 'Remove assignment of position assignment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionbudget_read_id, 'PositionBudget.read', 'View Position Budget', 'View and access position budget records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionbudget_create_id, 'PositionBudget.create', 'Create Position Budget', 'Create new position budget records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionbudget_update_id, 'PositionBudget.update', 'Update Position Budget', 'Modify existing position budget records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionbudget_soft_delete_id, 'PositionBudget.soft_delete', 'Delete Position Budget', 'Delete (soft) position budget records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_positionbudget_restore_id, 'PositionBudget.restore', 'Restore Position Budget', 'Restore deleted position budget records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_read_id, 'CompensationComponent.read', 'View Compensation Component', 'View and access compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_create_id, 'CompensationComponent.create', 'Create Compensation Component', 'Create new compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_update_id, 'CompensationComponent.update', 'Update Compensation Component', 'Modify existing compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_soft_delete_id, 'CompensationComponent.soft_delete', 'Delete Compensation Component', 'Delete (soft) compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_restore_id, 'CompensationComponent.restore', 'Restore Compensation Component', 'Restore deleted compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_activate_id, 'CompensationComponent.activate', 'Activate Compensation Component', 'Activate compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationcomponent_deactivate_id, 'CompensationComponent.deactivate', 'Deactivate Compensation Component', 'Deactivate compensation component records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_read_id, 'CompensationPlan.read', 'View Compensation Plan', 'View and access compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_create_id, 'CompensationPlan.create', 'Create Compensation Plan', 'Create new compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_update_id, 'CompensationPlan.update', 'Update Compensation Plan', 'Modify existing compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_soft_delete_id, 'CompensationPlan.soft_delete', 'Delete Compensation Plan', 'Delete (soft) compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_restore_id, 'CompensationPlan.restore', 'Restore Compensation Plan', 'Restore deleted compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_activate_id, 'CompensationPlan.activate', 'Activate Compensation Plan', 'Activate compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_compensationplan_deactivate_id, 'CompensationPlan.deactivate', 'Deactivate Compensation Plan', 'Deactivate compensation plan records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_read_id, 'Allowance.read', 'View Allowance', 'View and access allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_create_id, 'Allowance.create', 'Create Allowance', 'Create new allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_update_id, 'Allowance.update', 'Update Allowance', 'Modify existing allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_soft_delete_id, 'Allowance.soft_delete', 'Delete Allowance', 'Delete (soft) allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_restore_id, 'Allowance.restore', 'Restore Allowance', 'Restore deleted allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_approve_id, 'Allowance.approve', 'Approve Allowance', 'Approve allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_allowance_reject_id, 'Allowance.reject', 'Reject Allowance', 'Reject allowance records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_read_id, 'Deduction.read', 'View Deduction', 'View and access deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_create_id, 'Deduction.create', 'Create Deduction', 'Create new deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_update_id, 'Deduction.update', 'Update Deduction', 'Modify existing deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_soft_delete_id, 'Deduction.soft_delete', 'Delete Deduction', 'Delete (soft) deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_restore_id, 'Deduction.restore', 'Restore Deduction', 'Restore deleted deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_approve_id, 'Deduction.approve', 'Approve Deduction', 'Approve deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_deduction_reject_id, 'Deduction.reject', 'Reject Deduction', 'Reject deduction records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitdependent_read_id, 'BenefitDependent.read', 'View Benefit Dependent', 'View and access benefit dependent records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitdependent_create_id, 'BenefitDependent.create', 'Create Benefit Dependent', 'Create new benefit dependent records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitdependent_update_id, 'BenefitDependent.update', 'Update Benefit Dependent', 'Modify existing benefit dependent records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitdependent_soft_delete_id, 'BenefitDependent.soft_delete', 'Delete Benefit Dependent', 'Delete (soft) benefit dependent records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitdependent_restore_id, 'BenefitDependent.restore', 'Restore Benefit Dependent', 'Restore deleted benefit dependent records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_read_id, 'BenefitEnrollment.read', 'View Benefit Enrollment', 'View and access benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_create_id, 'BenefitEnrollment.create', 'Create Benefit Enrollment', 'Create new benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_update_id, 'BenefitEnrollment.update', 'Update Benefit Enrollment', 'Modify existing benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_soft_delete_id, 'BenefitEnrollment.soft_delete', 'Delete Benefit Enrollment', 'Delete (soft) benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_restore_id, 'BenefitEnrollment.restore', 'Restore Benefit Enrollment', 'Restore deleted benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_approve_id, 'BenefitEnrollment.approve', 'Approve Benefit Enrollment', 'Approve benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_benefitenrollment_reject_id, 'BenefitEnrollment.reject', 'Reject Benefit Enrollment', 'Reject benefit enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_read_id, 'Certification.read', 'View Certification', 'View and access certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_create_id, 'Certification.create', 'Create Certification', 'Create new certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_update_id, 'Certification.update', 'Update Certification', 'Modify existing certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_soft_delete_id, 'Certification.soft_delete', 'Delete Certification', 'Delete (soft) certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_restore_id, 'Certification.restore', 'Restore Certification', 'Restore deleted certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_approve_id, 'Certification.approve', 'Approve Certification', 'Approve certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_certification_reject_id, 'Certification.reject', 'Reject Certification', 'Reject certification records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancegoal_read_id, 'PerformanceGoal.read', 'View Performance Goal', 'View and access performance goal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancegoal_create_id, 'PerformanceGoal.create', 'Create Performance Goal', 'Create new performance goal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancegoal_update_id, 'PerformanceGoal.update', 'Update Performance Goal', 'Modify existing performance goal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancegoal_soft_delete_id, 'PerformanceGoal.soft_delete', 'Delete Performance Goal', 'Delete (soft) performance goal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancegoal_restore_id, 'PerformanceGoal.restore', 'Restore Performance Goal', 'Restore deleted performance goal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_read_id, 'PerformanceReview.read', 'View Performance Review', 'View and access performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_create_id, 'PerformanceReview.create', 'Create Performance Review', 'Create new performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_update_id, 'PerformanceReview.update', 'Update Performance Review', 'Modify existing performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_soft_delete_id, 'PerformanceReview.soft_delete', 'Delete Performance Review', 'Delete (soft) performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_restore_id, 'PerformanceReview.restore', 'Restore Performance Review', 'Restore deleted performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_approve_id, 'PerformanceReview.approve', 'Approve Performance Review', 'Approve performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_performancereview_reject_id, 'PerformanceReview.reject', 'Reject Performance Review', 'Reject performance review records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_grade_read_id, 'Grade.read', 'View Grade', 'View and access grade records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_grade_create_id, 'Grade.create', 'Create Grade', 'Create new grade records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_grade_update_id, 'Grade.update', 'Update Grade', 'Modify existing grade records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_grade_soft_delete_id, 'Grade.soft_delete', 'Delete Grade', 'Delete (soft) grade records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_grade_restore_id, 'Grade.restore', 'Restore Grade', 'Restore deleted grade records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_read_id, 'Department.read', 'View Department', 'View and access department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_create_id, 'Department.create', 'Create Department', 'Create new department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_update_id, 'Department.update', 'Update Department', 'Modify existing department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_soft_delete_id, 'Department.soft_delete', 'Delete Department', 'Delete (soft) department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_restore_id, 'Department.restore', 'Restore Department', 'Restore deleted department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_activate_id, 'Department.activate', 'Activate Department', 'Activate department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_department_deactivate_id, 'Department.deactivate', 'Deactivate Department', 'Deactivate department records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_read_id, 'OrgUnit.read', 'View Org Unit', 'View and access org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_create_id, 'OrgUnit.create', 'Create Org Unit', 'Create new org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_update_id, 'OrgUnit.update', 'Update Org Unit', 'Modify existing org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_soft_delete_id, 'OrgUnit.soft_delete', 'Delete Org Unit', 'Delete (soft) org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_restore_id, 'OrgUnit.restore', 'Restore Org Unit', 'Restore deleted org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_activate_id, 'OrgUnit.activate', 'Activate Org Unit', 'Activate org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_orgunit_deactivate_id, 'OrgUnit.deactivate', 'Deactivate Org Unit', 'Deactivate org unit records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_read_id, 'TrainingEnrollment.read', 'View Training Enrollment', 'View and access training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_create_id, 'TrainingEnrollment.create', 'Create Training Enrollment', 'Create new training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_update_id, 'TrainingEnrollment.update', 'Update Training Enrollment', 'Modify existing training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_soft_delete_id, 'TrainingEnrollment.soft_delete', 'Delete Training Enrollment', 'Delete (soft) training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_restore_id, 'TrainingEnrollment.restore', 'Restore Training Enrollment', 'Restore deleted training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_approve_id, 'TrainingEnrollment.approve', 'Approve Training Enrollment', 'Approve training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_trainingenrollment_reject_id, 'TrainingEnrollment.reject', 'Reject Training Enrollment', 'Reject training enrollment records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_read_id, 'Worker.read', 'View Worker', 'View and access worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_create_id, 'Worker.create', 'Create Worker', 'Create new worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_update_id, 'Worker.update', 'Update Worker', 'Modify existing worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_soft_delete_id, 'Worker.soft_delete', 'Delete Worker', 'Delete (soft) worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_restore_id, 'Worker.restore', 'Restore Worker', 'Restore deleted worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_activate_id, 'Worker.activate', 'Activate Worker', 'Activate worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worker_deactivate_id, 'Worker.deactivate', 'Deactivate Worker', 'Deactivate worker records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigation_read_id, 'LossInvestigation.read', 'View Loss Investigation', 'View and access loss investigation records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigation_create_id, 'LossInvestigation.create', 'Create Loss Investigation', 'Create new loss investigation records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigation_update_id, 'LossInvestigation.update', 'Update Loss Investigation', 'Modify existing loss investigation records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigation_soft_delete_id, 'LossInvestigation.soft_delete', 'Delete Loss Investigation', 'Delete (soft) loss investigation records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigation_restore_id, 'LossInvestigation.restore', 'Restore Loss Investigation', 'Restore deleted loss investigation records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigationfinding_read_id, 'LossInvestigationFinding.read', 'View Loss Investigation Finding', 'View and access loss investigation finding records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigationfinding_create_id, 'LossInvestigationFinding.create', 'Create Loss Investigation Finding', 'Create new loss investigation finding records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigationfinding_update_id, 'LossInvestigationFinding.update', 'Update Loss Investigation Finding', 'Modify existing loss investigation finding records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigationfinding_soft_delete_id, 'LossInvestigationFinding.soft_delete', 'Delete Loss Investigation Finding', 'Delete (soft) loss investigation finding records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lossinvestigationfinding_restore_id, 'LossInvestigationFinding.restore', 'Restore Loss Investigation Finding', 'Restore deleted loss investigation finding records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_read_id, 'MitigationAction.read', 'View Mitigation Action', 'View and access mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_create_id, 'MitigationAction.create', 'Create Mitigation Action', 'Create new mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_update_id, 'MitigationAction.update', 'Update Mitigation Action', 'Modify existing mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_soft_delete_id, 'MitigationAction.soft_delete', 'Delete Mitigation Action', 'Delete (soft) mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_restore_id, 'MitigationAction.restore', 'Restore Mitigation Action', 'Restore deleted mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_mitigationaction_implement_id, 'MitigationAction.implement', 'Implement Mitigation Action', 'Implement mitigation action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_read_id, 'RiskFactor.read', 'View Risk Factor', 'View and access risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_create_id, 'RiskFactor.create', 'Create Risk Factor', 'Create new risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_update_id, 'RiskFactor.update', 'Update Risk Factor', 'Modify existing risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_soft_delete_id, 'RiskFactor.soft_delete', 'Delete Risk Factor', 'Delete (soft) risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_restore_id, 'RiskFactor.restore', 'Restore Risk Factor', 'Restore deleted risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_riskfactor_assess_id, 'RiskFactor.assess', 'Assess Risk Factor', 'Assess risk factor records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedulerisk_read_id, 'ScheduleRisk.read', 'View Schedule Risk', 'View and access schedule risk records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedulerisk_create_id, 'ScheduleRisk.create', 'Create Schedule Risk', 'Create new schedule risk records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedulerisk_update_id, 'ScheduleRisk.update', 'Update Schedule Risk', 'Modify existing schedule risk records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedulerisk_soft_delete_id, 'ScheduleRisk.soft_delete', 'Delete Schedule Risk', 'Delete (soft) schedule risk records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedulerisk_restore_id, 'ScheduleRisk.restore', 'Restore Schedule Risk', 'Restore deleted schedule risk records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_read_id, 'AnomalyCase.read', 'View Anomaly Case', 'View and access anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_create_id, 'AnomalyCase.create', 'Create Anomaly Case', 'Create new anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_update_id, 'AnomalyCase.update', 'Update Anomaly Case', 'Modify existing anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_soft_delete_id, 'AnomalyCase.soft_delete', 'Delete Anomaly Case', 'Delete (soft) anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_restore_id, 'AnomalyCase.restore', 'Restore Anomaly Case', 'Restore deleted anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycase_investigate_id, 'AnomalyCase.investigate', 'Investigate Anomaly Case', 'Investigate anomaly case records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycaseaction_read_id, 'AnomalyCaseAction.read', 'View Anomaly Case Action', 'View and access anomaly case action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycaseaction_create_id, 'AnomalyCaseAction.create', 'Create Anomaly Case Action', 'Create new anomaly case action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycaseaction_update_id, 'AnomalyCaseAction.update', 'Update Anomaly Case Action', 'Modify existing anomaly case action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalycaseaction_execute_id, 'AnomalyCaseAction.execute', 'Execute Anomaly Case Action', 'Execute anomaly case action records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignal_read_id, 'AnomalySignal.read', 'View Anomaly Signal', 'View and access anomaly signal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignal_create_id, 'AnomalySignal.create', 'Create Anomaly Signal', 'Create new anomaly signal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignal_update_id, 'AnomalySignal.update', 'Update Anomaly Signal', 'Modify existing anomaly signal records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignalfeature_read_id, 'AnomalySignalFeature.read', 'View Anomaly Signal Feature', 'View and access anomaly signal feature records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignalfeature_create_id, 'AnomalySignalFeature.create', 'Create Anomaly Signal Feature', 'Create new anomaly signal feature records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_anomalysignalfeature_update_id, 'AnomalySignalFeature.update', 'Update Anomaly Signal Feature', 'Modify existing anomaly signal feature records within tenant scope', 'hr_employment',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_read_id, 'ApprovalRequest.read', 'View Approval Request', 'View and access approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_create_id, 'ApprovalRequest.create', 'Create Approval Request', 'Create new approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_update_id, 'ApprovalRequest.update', 'Update Approval Request', 'Modify existing approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_soft_delete_id, 'ApprovalRequest.soft_delete', 'Delete Approval Request', 'Delete (soft) approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_restore_id, 'ApprovalRequest.restore', 'Restore Approval Request', 'Restore deleted approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_submit_id, 'ApprovalRequest.submit', 'Submit Approval Request', 'Submit approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_approve_id, 'ApprovalRequest.approve', 'Approve Approval Request', 'Approve approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrequest_reject_id, 'ApprovalRequest.reject', 'Reject Approval Request', 'Reject approval request records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvaldecision_read_id, 'ApprovalDecision.read', 'View Approval Decision', 'View and access approval decision records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvaldecision_create_id, 'ApprovalDecision.create', 'Create Approval Decision', 'Create new approval decision records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvaldecision_update_id, 'ApprovalDecision.update', 'Update Approval Decision', 'Modify existing approval decision records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvaldecision_soft_delete_id, 'ApprovalDecision.soft_delete', 'Delete Approval Decision', 'Delete (soft) approval decision records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvaldecision_restore_id, 'ApprovalDecision.restore', 'Restore Approval Decision', 'Restore deleted approval decision records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_read_id, 'ApprovalRule.read', 'View Approval Rule', 'View and access approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_create_id, 'ApprovalRule.create', 'Create Approval Rule', 'Create new approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_update_id, 'ApprovalRule.update', 'Update Approval Rule', 'Modify existing approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_soft_delete_id, 'ApprovalRule.soft_delete', 'Delete Approval Rule', 'Delete (soft) approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_restore_id, 'ApprovalRule.restore', 'Restore Approval Rule', 'Restore deleted approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_activate_id, 'ApprovalRule.activate', 'Activate Approval Rule', 'Activate approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_approvalrule_deactivate_id, 'ApprovalRule.deactivate', 'Deactivate Approval Rule', 'Deactivate approval rule records within tenant scope', 'approval_workflows',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobrun_read_id, 'JobRun.read', 'View Job Run', 'View and access job run records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobrun_create_id, 'JobRun.create', 'Create Job Run', 'Create new job run records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobrun_update_id, 'JobRun.update', 'Update Job Run', 'Modify existing job run records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobrun_soft_delete_id, 'JobRun.soft_delete', 'Delete Job Run', 'Delete (soft) job run records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobrun_restore_id, 'JobRun.restore', 'Restore Job Run', 'Restore deleted job run records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobschedule_read_id, 'JobSchedule.read', 'View Job Schedule', 'View and access job schedule records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobschedule_create_id, 'JobSchedule.create', 'Create Job Schedule', 'Create new job schedule records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobschedule_update_id, 'JobSchedule.update', 'Update Job Schedule', 'Modify existing job schedule records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobschedule_activate_id, 'JobSchedule.activate', 'Activate Job Schedule', 'Activate job schedule records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobschedule_deactivate_id, 'JobSchedule.deactivate', 'Deactivate Job Schedule', 'Deactivate job schedule records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobfamily_read_id, 'JobFamily.read', 'View Job Family', 'View and access job family records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobfamily_create_id, 'JobFamily.create', 'Create Job Family', 'Create new job family records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobfamily_update_id, 'JobFamily.update', 'Update Job Family', 'Modify existing job family records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobfamily_soft_delete_id, 'JobFamily.soft_delete', 'Delete Job Family', 'Delete (soft) job family records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobfamily_restore_id, 'JobFamily.restore', 'Restore Job Family', 'Restore deleted job family records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofile_read_id, 'JobProfile.read', 'View Job Profile', 'View and access job profile records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofile_create_id, 'JobProfile.create', 'Create Job Profile', 'Create new job profile records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofile_update_id, 'JobProfile.update', 'Update Job Profile', 'Modify existing job profile records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofile_soft_delete_id, 'JobProfile.soft_delete', 'Delete Job Profile', 'Delete (soft) job profile records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofile_restore_id, 'JobProfile.restore', 'Restore Job Profile', 'Restore deleted job profile records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofileassignment_read_id, 'JobProfileAssignment.read', 'View Job Profile Assignment', 'View and access job profile assignment records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofileassignment_create_id, 'JobProfileAssignment.create', 'Create Job Profile Assignment', 'Create new job profile assignment records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofileassignment_update_id, 'JobProfileAssignment.update', 'Update Job Profile Assignment', 'Modify existing job profile assignment records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofileassignment_assign_id, 'JobProfileAssignment.assign', 'Assign Job Profile Assignment', 'Assign job profile assignment records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_jobprofileassignment_unassign_id, 'JobProfileAssignment.unassign', 'Unassign Job Profile Assignment', 'Remove assignment of job profile assignment records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_distributedlock_read_id, 'DistributedLock.read', 'View Distributed Lock', 'View and access distributed lock records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_distributedlock_create_id, 'DistributedLock.create', 'Create Distributed Lock', 'Create new distributed lock records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_distributedlock_update_id, 'DistributedLock.update', 'Update Distributed Lock', 'Modify existing distributed lock records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_numbersequence_read_id, 'NumberSequence.read', 'View Number Sequence', 'View and access number sequence records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_numbersequence_create_id, 'NumberSequence.create', 'Create Number Sequence', 'Create new number sequence records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_numbersequence_update_id, 'NumberSequence.update', 'Update Number Sequence', 'Modify existing number sequence records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alerts_read_id, 'weather_alerts.read', 'View weather_alerts', 'View and access weather_alerts records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alerts_create_id, 'weather_alerts.create', 'Create weather_alerts', 'Create new weather_alerts records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alerts_update_id, 'weather_alerts.update', 'Update weather_alerts', 'Modify existing weather_alerts records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alerts_activate_id, 'weather_alerts.activate', 'Activate weather_alerts', 'Activate weather_alerts records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alerts_deactivate_id, 'weather_alerts.deactivate', 'Deactivate weather_alerts', 'Deactivate weather_alerts records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_watches_read_id, 'weather_watches.read', 'View weather_watches', 'View and access weather_watches records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_watches_create_id, 'weather_watches.create', 'Create weather_watches', 'Create new weather_watches records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_watches_update_id, 'weather_watches.update', 'Update weather_watches', 'Modify existing weather_watches records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_incidents_read_id, 'weather_incidents.read', 'View weather_incidents', 'View and access weather_incidents records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_incidents_create_id, 'weather_incidents.create', 'Create weather_incidents', 'Create new weather_incidents records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_incidents_update_id, 'weather_incidents.update', 'Update weather_incidents', 'Modify existing weather_incidents records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_incidents_resolve_id, 'weather_incidents.resolve', 'Resolve weather_incidents', 'Resolve weather_incidents records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alert_deliveries_read_id, 'weather_alert_deliveries.read', 'View weather_alert_deliveries', 'View and access weather_alert_deliveries records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alert_deliveries_create_id, 'weather_alert_deliveries.create', 'Create weather_alert_deliveries', 'Create new weather_alert_deliveries records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_alert_deliveries_update_id, 'weather_alert_deliveries.update', 'Update weather_alert_deliveries', 'Modify existing weather_alert_deliveries records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_forecast_cache_read_id, 'weather_forecast_cache.read', 'View weather_forecast_cache', 'View and access weather_forecast_cache records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_forecast_cache_create_id, 'weather_forecast_cache.create', 'Create weather_forecast_cache', 'Create new weather_forecast_cache records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_forecast_cache_update_id, 'weather_forecast_cache.update', 'Update weather_forecast_cache', 'Modify existing weather_forecast_cache records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_providers_read_id, 'weather_providers.read', 'View weather_providers', 'View and access weather_providers records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_providers_create_id, 'weather_providers.create', 'Create weather_providers', 'Create new weather_providers records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_providers_update_id, 'weather_providers.update', 'Update weather_providers', 'Modify existing weather_providers records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_providers_activate_id, 'weather_providers.activate', 'Activate weather_providers', 'Activate weather_providers records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_providers_deactivate_id, 'weather_providers.deactivate', 'Deactivate weather_providers', 'Deactivate weather_providers records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_risk_factors_read_id, 'weather_risk_factors.read', 'View weather_risk_factors', 'View and access weather_risk_factors records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_risk_factors_create_id, 'weather_risk_factors.create', 'Create weather_risk_factors', 'Create new weather_risk_factors records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_risk_factors_update_id, 'weather_risk_factors.update', 'Update weather_risk_factors', 'Modify existing weather_risk_factors records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_risk_factors_activate_id, 'weather_risk_factors.activate', 'Activate weather_risk_factors', 'Activate weather_risk_factors records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_weather_risk_factors_deactivate_id, 'weather_risk_factors.deactivate', 'Deactivate weather_risk_factors', 'Deactivate weather_risk_factors records within tenant scope', 'system_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_read_id, 'Webhook.read', 'View Webhook', 'View and access webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_create_id, 'Webhook.create', 'Create Webhook', 'Create new webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_update_id, 'Webhook.update', 'Update Webhook', 'Modify existing webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_soft_delete_id, 'Webhook.soft_delete', 'Delete Webhook', 'Delete (soft) webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_restore_id, 'Webhook.restore', 'Restore Webhook', 'Restore deleted webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_activate_id, 'Webhook.activate', 'Activate Webhook', 'Activate webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhook_deactivate_id, 'Webhook.deactivate', 'Deactivate Webhook', 'Deactivate webhook records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookendpoint_read_id, 'WebhookEndpoint.read', 'View Webhook Endpoint', 'View and access webhook endpoint records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookendpoint_create_id, 'WebhookEndpoint.create', 'Create Webhook Endpoint', 'Create new webhook endpoint records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookendpoint_update_id, 'WebhookEndpoint.update', 'Update Webhook Endpoint', 'Modify existing webhook endpoint records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookendpoint_soft_delete_id, 'WebhookEndpoint.soft_delete', 'Delete Webhook Endpoint', 'Delete (soft) webhook endpoint records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookendpoint_restore_id, 'WebhookEndpoint.restore', 'Restore Webhook Endpoint', 'Restore deleted webhook endpoint records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookdelivery_read_id, 'WebhookDelivery.read', 'View Webhook Delivery', 'View and access webhook delivery records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookdelivery_create_id, 'WebhookDelivery.create', 'Create Webhook Delivery', 'Create new webhook delivery records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookdelivery_update_id, 'WebhookDelivery.update', 'Update Webhook Delivery', 'Modify existing webhook delivery records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookdelivery_soft_delete_id, 'WebhookDelivery.soft_delete', 'Delete Webhook Delivery', 'Delete (soft) webhook delivery records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookdelivery_restore_id, 'WebhookDelivery.restore', 'Restore Webhook Delivery', 'Restore deleted webhook delivery records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookevent_read_id, 'WebhookEvent.read', 'View Webhook Event', 'View and access webhook event records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookevent_create_id, 'WebhookEvent.create', 'Create Webhook Event', 'Create new webhook event records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookevent_update_id, 'WebhookEvent.update', 'Update Webhook Event', 'Modify existing webhook event records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookevent_soft_delete_id, 'WebhookEvent.soft_delete', 'Delete Webhook Event', 'Delete (soft) webhook event records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhookevent_restore_id, 'WebhookEvent.restore', 'Restore Webhook Event', 'Restore deleted webhook event records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhooklog_read_id, 'WebhookLog.read', 'View Webhook Log', 'View and access webhook log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhooklog_create_id, 'WebhookLog.create', 'Create Webhook Log', 'Create new webhook log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhooklog_update_id, 'WebhookLog.update', 'Update Webhook Log', 'Modify existing webhook log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhooklog_soft_delete_id, 'WebhookLog.soft_delete', 'Delete Webhook Log', 'Delete (soft) webhook log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_webhooklog_restore_id, 'WebhookLog.restore', 'Restore Webhook Log', 'Restore deleted webhook log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_read_id, 'IntegrationConnection.read', 'View Integration Connection', 'View and access integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_create_id, 'IntegrationConnection.create', 'Create Integration Connection', 'Create new integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_update_id, 'IntegrationConnection.update', 'Update Integration Connection', 'Modify existing integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_soft_delete_id, 'IntegrationConnection.soft_delete', 'Delete Integration Connection', 'Delete (soft) integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_restore_id, 'IntegrationConnection.restore', 'Restore Integration Connection', 'Restore deleted integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_activate_id, 'IntegrationConnection.activate', 'Activate Integration Connection', 'Activate integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnection_deactivate_id, 'IntegrationConnection.deactivate', 'Deactivate Integration Connection', 'Deactivate integration connection records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnector_read_id, 'IntegrationConnector.read', 'View Integration Connector', 'View and access integration connector records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnector_create_id, 'IntegrationConnector.create', 'Create Integration Connector', 'Create new integration connector records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnector_update_id, 'IntegrationConnector.update', 'Update Integration Connector', 'Modify existing integration connector records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnector_soft_delete_id, 'IntegrationConnector.soft_delete', 'Delete Integration Connector', 'Delete (soft) integration connector records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationconnector_restore_id, 'IntegrationConnector.restore', 'Restore Integration Connector', 'Restore deleted integration connector records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationmapping_read_id, 'IntegrationMapping.read', 'View Integration Mapping', 'View and access integration mapping records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationmapping_create_id, 'IntegrationMapping.create', 'Create Integration Mapping', 'Create new integration mapping records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationmapping_update_id, 'IntegrationMapping.update', 'Update Integration Mapping', 'Modify existing integration mapping records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationmapping_soft_delete_id, 'IntegrationMapping.soft_delete', 'Delete Integration Mapping', 'Delete (soft) integration mapping records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationmapping_restore_id, 'IntegrationMapping.restore', 'Restore Integration Mapping', 'Restore deleted integration mapping records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationprovider_read_id, 'IntegrationProvider.read', 'View Integration Provider', 'View and access integration provider records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationprovider_create_id, 'IntegrationProvider.create', 'Create Integration Provider', 'Create new integration provider records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationprovider_update_id, 'IntegrationProvider.update', 'Update Integration Provider', 'Modify existing integration provider records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationprovider_soft_delete_id, 'IntegrationProvider.soft_delete', 'Delete Integration Provider', 'Delete (soft) integration provider records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationprovider_restore_id, 'IntegrationProvider.restore', 'Restore Integration Provider', 'Restore deleted integration provider records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationsecret_read_id, 'IntegrationSecret.read', 'View Integration Secret', 'View and access integration secret records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationsecret_create_id, 'IntegrationSecret.create', 'Create Integration Secret', 'Create new integration secret records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationsecret_update_id, 'IntegrationSecret.update', 'Update Integration Secret', 'Modify existing integration secret records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationsecret_soft_delete_id, 'IntegrationSecret.soft_delete', 'Delete Integration Secret', 'Delete (soft) integration secret records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_integrationsecret_restore_id, 'IntegrationSecret.restore', 'Restore Integration Secret', 'Restore deleted integration secret records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncjob_read_id, 'SyncJob.read', 'View Sync Job', 'View and access sync job records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncjob_create_id, 'SyncJob.create', 'Create Sync Job', 'Create new sync job records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncjob_update_id, 'SyncJob.update', 'Update Sync Job', 'Modify existing sync job records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncjob_soft_delete_id, 'SyncJob.soft_delete', 'Delete Sync Job', 'Delete (soft) sync job records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncjob_restore_id, 'SyncJob.restore', 'Restore Sync Job', 'Restore deleted sync job records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_synclog_read_id, 'SyncLog.read', 'View Sync Log', 'View and access sync log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_synclog_create_id, 'SyncLog.create', 'Create Sync Log', 'Create new sync log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_synclog_update_id, 'SyncLog.update', 'Update Sync Log', 'Modify existing sync log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_synclog_soft_delete_id, 'SyncLog.soft_delete', 'Delete Sync Log', 'Delete (soft) sync log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_synclog_restore_id, 'SyncLog.restore', 'Restore Sync Log', 'Restore deleted sync log records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncstate_read_id, 'SyncState.read', 'View Sync State', 'View and access sync state records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncstate_create_id, 'SyncState.create', 'Create Sync State', 'Create new sync state records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncstate_update_id, 'SyncState.update', 'Update Sync State', 'Modify existing sync state records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncstate_soft_delete_id, 'SyncState.soft_delete', 'Delete Sync State', 'Delete (soft) sync state records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_syncstate_restore_id, 'SyncState.restore', 'Restore Sync State', 'Restore deleted sync state records within tenant scope', 'integrations_webhooks',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_location_read_id, 'Location.read', 'View Location', 'View and access location records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_location_create_id, 'Location.create', 'Create Location', 'Create new location records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_location_update_id, 'Location.update', 'Update Location', 'Modify existing location records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_location_soft_delete_id, 'Location.soft_delete', 'Delete Location', 'Delete (soft) location records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_location_restore_id, 'Location.restore', 'Restore Location', 'Restore deleted location records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_country_read_id, 'Country.read', 'View Country', 'View and access country records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_country_create_id, 'Country.create', 'Create Country', 'Create new country records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_country_update_id, 'Country.update', 'Update Country', 'Modify existing country records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_country_soft_delete_id, 'Country.soft_delete', 'Delete Country', 'Delete (soft) country records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_country_restore_id, 'Country.restore', 'Restore Country', 'Restore deleted country records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_region_read_id, 'Region.read', 'View Region', 'View and access region records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_region_create_id, 'Region.create', 'Create Region', 'Create new region records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_region_update_id, 'Region.update', 'Update Region', 'Modify existing region records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_region_soft_delete_id, 'Region.soft_delete', 'Delete Region', 'Delete (soft) region records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_region_restore_id, 'Region.restore', 'Restore Region', 'Restore deleted region records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_stateprovince_read_id, 'StateProvince.read', 'View State Province', 'View and access state province records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_stateprovince_create_id, 'StateProvince.create', 'Create State Province', 'Create new state province records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_stateprovince_update_id, 'StateProvince.update', 'Update State Province', 'Modify existing state province records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_stateprovince_soft_delete_id, 'StateProvince.soft_delete', 'Delete State Province', 'Delete (soft) state province records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_stateprovince_restore_id, 'StateProvince.restore', 'Restore State Province', 'Restore deleted state province records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_read_id, 'PriceList.read', 'View Price List', 'View and access price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_create_id, 'PriceList.create', 'Create Price List', 'Create new price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_update_id, 'PriceList.update', 'Update Price List', 'Modify existing price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_soft_delete_id, 'PriceList.soft_delete', 'Delete Price List', 'Delete (soft) price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_restore_id, 'PriceList.restore', 'Restore Price List', 'Restore deleted price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_activate_id, 'PriceList.activate', 'Activate Price List', 'Activate price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelist_deactivate_id, 'PriceList.deactivate', 'Deactivate Price List', 'Deactivate price list records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelistitem_read_id, 'PriceListItem.read', 'View Price List Item', 'View and access price list item records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelistitem_create_id, 'PriceListItem.create', 'Create Price List Item', 'Create new price list item records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelistitem_update_id, 'PriceListItem.update', 'Update Price List Item', 'Modify existing price list item records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelistitem_soft_delete_id, 'PriceListItem.soft_delete', 'Delete Price List Item', 'Delete (soft) price list item records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_pricelistitem_restore_id, 'PriceListItem.restore', 'Restore Price List Item', 'Restore deleted price list item records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcenter_read_id, 'CostCenter.read', 'View Cost Center', 'View and access cost center records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcenter_create_id, 'CostCenter.create', 'Create Cost Center', 'Create new cost center records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcenter_update_id, 'CostCenter.update', 'Update Cost Center', 'Modify existing cost center records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcenter_soft_delete_id, 'CostCenter.soft_delete', 'Delete Cost Center', 'Delete (soft) cost center records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcenter_restore_id, 'CostCenter.restore', 'Restore Cost Center', 'Restore deleted cost center records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcategory_read_id, 'CostCategory.read', 'View Cost Category', 'View and access cost category records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcategory_create_id, 'CostCategory.create', 'Create Cost Category', 'Create new cost category records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcategory_update_id, 'CostCategory.update', 'Update Cost Category', 'Modify existing cost category records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcategory_soft_delete_id, 'CostCategory.soft_delete', 'Delete Cost Category', 'Delete (soft) cost category records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcategory_restore_id, 'CostCategory.restore', 'Restore Cost Category', 'Restore deleted cost category records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcode_read_id, 'CostCode.read', 'View Cost Code', 'View and access cost code records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcode_create_id, 'CostCode.create', 'Create Cost Code', 'Create new cost code records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcode_update_id, 'CostCode.update', 'Update Cost Code', 'Modify existing cost code records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcode_soft_delete_id, 'CostCode.soft_delete', 'Delete Cost Code', 'Delete (soft) cost code records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_costcode_restore_id, 'CostCode.restore', 'Restore Cost Code', 'Restore deleted cost code records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_unitofmeasure_read_id, 'UnitOfMeasure.read', 'View Unit Of Measure', 'View and access unit of measure records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_unitofmeasure_create_id, 'UnitOfMeasure.create', 'Create Unit Of Measure', 'Create new unit of measure records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_unitofmeasure_update_id, 'UnitOfMeasure.update', 'Update Unit Of Measure', 'Modify existing unit of measure records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_unitofmeasure_soft_delete_id, 'UnitOfMeasure.soft_delete', 'Delete Unit Of Measure', 'Delete (soft) unit of measure records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_unitofmeasure_restore_id, 'UnitOfMeasure.restore', 'Restore Unit Of Measure', 'Restore deleted unit of measure records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worktype_read_id, 'WorkType.read', 'View Work Type', 'View and access work type records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worktype_create_id, 'WorkType.create', 'Create Work Type', 'Create new work type records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worktype_update_id, 'WorkType.update', 'Update Work Type', 'Modify existing work type records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worktype_soft_delete_id, 'WorkType.soft_delete', 'Delete Work Type', 'Delete (soft) work type records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_worktype_restore_id, 'WorkType.restore', 'Restore Work Type', 'Restore deleted work type records within tenant scope', 'system_config',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantauditlog_read_id, 'TenantAuditLog.read', 'View Tenant Audit Log', 'View and access tenant audit log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_tenantauditlog_export_id, 'TenantAuditLog.export', 'Export Tenant Audit Log', 'Export data for tenant audit log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_read_id, 'DataRetentionPolicy.read', 'View Data Retention Policy', 'View and access data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_create_id, 'DataRetentionPolicy.create', 'Create Data Retention Policy', 'Create new data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_update_id, 'DataRetentionPolicy.update', 'Update Data Retention Policy', 'Modify existing data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_soft_delete_id, 'DataRetentionPolicy.soft_delete', 'Delete Data Retention Policy', 'Delete (soft) data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_restore_id, 'DataRetentionPolicy.restore', 'Restore Data Retention Policy', 'Restore deleted data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_activate_id, 'DataRetentionPolicy.activate', 'Activate Data Retention Policy', 'Activate data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dataretentionpolicy_deactivate_id, 'DataRetentionPolicy.deactivate', 'Deactivate Data Retention Policy', 'Deactivate data retention policy records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_errorreport_read_id, 'ErrorReport.read', 'View Error Report', 'View and access error report records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_errorreport_create_id, 'ErrorReport.create', 'Create Error Report', 'Create new error report records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_errorreport_update_id, 'ErrorReport.update', 'Update Error Report', 'Modify existing error report records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_errorreport_soft_delete_id, 'ErrorReport.soft_delete', 'Delete Error Report', 'Delete (soft) error report records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_errorreport_restore_id, 'ErrorReport.restore', 'Restore Error Report', 'Restore deleted error report records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_systemlog_read_id, 'SystemLog.read', 'View System Log', 'View and access system log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_systemlog_create_id, 'SystemLog.create', 'Create System Log', 'Create new system log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_systemlog_update_id, 'SystemLog.update', 'Update System Log', 'Modify existing system log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_systemlog_soft_delete_id, 'SystemLog.soft_delete', 'Delete System Log', 'Delete (soft) system log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_systemlog_restore_id, 'SystemLog.restore', 'Restore System Log', 'Restore deleted system log records within tenant scope', 'audit_compliance',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportjob_read_id, 'ExportJob.read', 'View Export Job', 'View and access export job records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportjob_create_id, 'ExportJob.create', 'Create Export Job', 'Create new export job records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportjob_update_id, 'ExportJob.update', 'Update Export Job', 'Modify existing export job records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportjob_soft_delete_id, 'ExportJob.soft_delete', 'Delete Export Job', 'Delete (soft) export job records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportjob_restore_id, 'ExportJob.restore', 'Restore Export Job', 'Restore deleted export job records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportartifact_read_id, 'ExportArtifact.read', 'View Export Artifact', 'View and access export artifact records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportartifact_create_id, 'ExportArtifact.create', 'Create Export Artifact', 'Create new export artifact records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportartifact_update_id, 'ExportArtifact.update', 'Update Export Artifact', 'Modify existing export artifact records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportartifact_soft_delete_id, 'ExportArtifact.soft_delete', 'Delete Export Artifact', 'Delete (soft) export artifact records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_exportartifact_restore_id, 'ExportArtifact.restore', 'Restore Export Artifact', 'Restore deleted export artifact records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reportdefinition_read_id, 'ReportDefinition.read', 'View Report Definition', 'View and access report definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reportdefinition_create_id, 'ReportDefinition.create', 'Create Report Definition', 'Create new report definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reportdefinition_update_id, 'ReportDefinition.update', 'Update Report Definition', 'Modify existing report definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reportdefinition_soft_delete_id, 'ReportDefinition.soft_delete', 'Delete Report Definition', 'Delete (soft) report definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_reportdefinition_restore_id, 'ReportDefinition.restore', 'Restore Report Definition', 'Restore deleted report definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dashboarddefinition_read_id, 'DashboardDefinition.read', 'View Dashboard Definition', 'View and access dashboard definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dashboarddefinition_create_id, 'DashboardDefinition.create', 'Create Dashboard Definition', 'Create new dashboard definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dashboarddefinition_update_id, 'DashboardDefinition.update', 'Update Dashboard Definition', 'Modify existing dashboard definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dashboarddefinition_soft_delete_id, 'DashboardDefinition.soft_delete', 'Delete Dashboard Definition', 'Delete (soft) dashboard definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_dashboarddefinition_restore_id, 'DashboardDefinition.restore', 'Restore Dashboard Definition', 'Restore deleted dashboard definition records within tenant scope', 'data_export_reporting',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_assign_id, 'Account.assign', 'Assign Account', 'Assign account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_unassign_id, 'Account.unassign', 'Unassign Account', 'Remove assignment of account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_assign_id, 'Project.assign', 'Assign Project', 'Assign project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_project_unassign_id, 'Project.unassign', 'Unassign Project', 'Remove assignment of project records within tenant scope', 'project_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_approve_id, 'ExpenseReceipt.approve', 'Approve Expense Receipt', 'Approve expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expensereceipt_reject_id, 'ExpenseReceipt.reject', 'Reject Expense Receipt', 'Reject expense receipt records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_payrollrun_submit_id, 'PayrollRun.submit', 'Submit Payroll Run', 'Submit payroll run records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_approve_id, 'ScheduleException.approve', 'Approve Schedule Exception', 'Approve schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_scheduleexception_reject_id, 'ScheduleException.reject', 'Reject Schedule Exception', 'Reject schedule exception records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_assign_id, 'Vendor.assign', 'Assign Vendor', 'Assign vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_unassign_id, 'Vendor.unassign', 'Unassign Vendor', 'Remove assignment of vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_paystatement_read_id, 'PayStatement.read', 'View Pay Statement', 'View and access pay statement records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_account_hard_delete_id, 'Account.hard_delete', 'Permanently Delete Account', 'Permanently delete account records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_accountaddress_hard_delete_id, 'AccountAddress.hard_delete', 'Permanently Delete Account Address', 'Permanently delete account address records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contact_hard_delete_id, 'Contact.hard_delete', 'Permanently Delete Contact', 'Permanently delete contact records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_lead_hard_delete_id, 'Lead.hard_delete', 'Permanently Delete Lead', 'Permanently delete lead records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_opportunity_hard_delete_id, 'Opportunity.hard_delete', 'Permanently Delete Opportunity', 'Permanently delete opportunity records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_quote_hard_delete_id, 'Quote.hard_delete', 'Permanently Delete Quote', 'Permanently delete quote records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimate_hard_delete_id, 'Estimate.hard_delete', 'Permanently Delete Estimate', 'Permanently delete estimate records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatecomment_read_id, 'EstimateComment.read', 'View Estimate Comment', 'View and access estimate comment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatecomment_create_id, 'EstimateComment.create', 'Create Estimate Comment', 'Create new estimate comment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatecomment_update_id, 'EstimateComment.update', 'Update Estimate Comment', 'Modify existing estimate comment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatecomment_soft_delete_id, 'EstimateComment.soft_delete', 'Delete Estimate Comment', 'Delete (soft) estimate comment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatecomment_restore_id, 'EstimateComment.restore', 'Restore Estimate Comment', 'Restore deleted estimate comment records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatediscount_read_id, 'EstimateDiscount.read', 'View Estimate Discount', 'View and access estimate discount records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatediscount_create_id, 'EstimateDiscount.create', 'Create Estimate Discount', 'Create new estimate discount records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatediscount_update_id, 'EstimateDiscount.update', 'Update Estimate Discount', 'Modify existing estimate discount records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatediscount_soft_delete_id, 'EstimateDiscount.soft_delete', 'Delete Estimate Discount', 'Delete (soft) estimate discount records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatediscount_restore_id, 'EstimateDiscount.restore', 'Restore Estimate Discount', 'Restore deleted estimate discount records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatehistoryevent_read_id, 'EstimateHistoryEvent.read', 'View Estimate History Event', 'View and access estimate history event records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatehistoryevent_create_id, 'EstimateHistoryEvent.create', 'Create Estimate History Event', 'Create new estimate history event records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimaterevision_read_id, 'EstimateRevision.read', 'View Estimate Revision', 'View and access estimate revision records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimaterevision_create_id, 'EstimateRevision.create', 'Create Estimate Revision', 'Create new estimate revision records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimaterevision_update_id, 'EstimateRevision.update', 'Update Estimate Revision', 'Modify existing estimate revision records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimaterevision_soft_delete_id, 'EstimateRevision.soft_delete', 'Delete Estimate Revision', 'Delete (soft) estimate revision records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimaterevision_restore_id, 'EstimateRevision.restore', 'Restore Estimate Revision', 'Restore deleted estimate revision records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatetax_read_id, 'EstimateTax.read', 'View Estimate Tax', 'View and access estimate tax records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatetax_create_id, 'EstimateTax.create', 'Create Estimate Tax', 'Create new estimate tax records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatetax_update_id, 'EstimateTax.update', 'Update Estimate Tax', 'Modify existing estimate tax records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatetax_soft_delete_id, 'EstimateTax.soft_delete', 'Delete Estimate Tax', 'Delete (soft) estimate tax records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimatetax_restore_id, 'EstimateTax.restore', 'Restore Estimate Tax', 'Restore deleted estimate tax records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateterm_read_id, 'EstimateTerm.read', 'View Estimate Term', 'View and access estimate term records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateterm_create_id, 'EstimateTerm.create', 'Create Estimate Term', 'Create new estimate term records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateterm_update_id, 'EstimateTerm.update', 'Update Estimate Term', 'Modify existing estimate term records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateterm_soft_delete_id, 'EstimateTerm.soft_delete', 'Delete Estimate Term', 'Delete (soft) estimate term records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_estimateterm_restore_id, 'EstimateTerm.restore', 'Restore Estimate Term', 'Restore deleted estimate term records within tenant scope', 'crm_sales',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_expense_hard_delete_id, 'Expense.hard_delete', 'Permanently Delete Expense', 'Permanently delete expense records within tenant scope', 'financial_operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_schedule_hard_delete_id, 'Schedule.hard_delete', 'Permanently Delete Schedule', 'Permanently delete schedule records within tenant scope', 'time_scheduling',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_inventoryitem_hard_delete_id, 'InventoryItem.hard_delete', 'Permanently Delete Inventory Item', 'Permanently delete inventory item records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_asset_hard_delete_id, 'Asset.hard_delete', 'Permanently Delete Asset', 'Permanently delete asset records within tenant scope', 'inventory_assets',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_channel_hard_delete_id, 'Channel.hard_delete', 'Permanently Delete Channel', 'Permanently delete channel records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_directchat_hard_delete_id, 'DirectChat.hard_delete', 'Permanently Delete Direct Chat', 'Permanently delete direct chat records within tenant scope', 'communication',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_fileobject_hard_delete_id, 'FileObject.hard_delete', 'Permanently Delete File Object', 'Permanently delete file object records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_attachment_hard_delete_id, 'Attachment.hard_delete', 'Permanently Delete Attachment', 'Permanently delete attachment records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_contracttemplate_hard_delete_id, 'ContractTemplate.hard_delete', 'Permanently Delete Contract Template', 'Permanently delete contract template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_termstemplate_hard_delete_id, 'TermsTemplate.hard_delete', 'Permanently Delete Terms Template', 'Permanently delete terms template records within tenant scope', 'document_management',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

INSERT INTO "Permission" (
  "id", "code", "name", "description", "category", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :permission_vendor_hard_delete_id, 'Vendor.hard_delete', 'Permanently Delete Vendor', 'Permanently delete vendor records within tenant scope', 'vendor_contract',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("code") DO NOTHING;

-- ============================================================================
-- INSERT ROLES (Per Tenant)
-- ============================================================================
INSERT INTO "Role" (
  "id", "tenantId", "code", "name", "description", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :role_admin_id, :tenantId, 'ADMIN', 'Admin', 'System administrator with complete access to all tenant data and operations',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "code") DO NOTHING;

INSERT INTO "Role" (
  "id", "tenantId", "code", "name", "description", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :role_project_manager_id, :tenantId, 'PROJECT_MANAGER', 'Project Manager', 'Project manager with ability to manage projects, estimates, team members, and approve operations within tenant scope',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "code") DO NOTHING;

INSERT INTO "Role" (
  "id", "tenantId", "code", "name", "description", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :role_worker_id, :tenantId, 'WORKER', 'Worker', 'Field worker with access to assigned projects, tasks, time tracking, and expense reporting within tenant scope',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "code") DO NOTHING;

INSERT INTO "Role" (
  "id", "tenantId", "code", "name", "description", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :role_driver_id, :tenantId, 'DRIVER', 'Driver', 'Driver with access to assigned delivery tasks, time tracking, and mobile operations within tenant scope',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "code") DO NOTHING;

INSERT INTO "Role" (
  "id", "tenantId", "code", "name", "description", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :role_viewer_id, :tenantId, 'VIEWER', 'Viewer', 'Read-only access for reporting, training and demonstration purposes within tenant scope',
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "code") DO NOTHING;

-- ============================================================================
-- INSERT ROLE PERMISSIONS (Per Tenant)
-- ============================================================================
-- ADMIN Role Permissions
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenant_read, :tenantId, :role_admin_id, :permission_tenant_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenant_update, :tenantId, :role_admin_id, :permission_tenant_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenant_deactivate, :tenantId, :role_admin_id, :permission_tenant_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantsettings_read, :tenantId, :role_admin_id, :permission_tenantsettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantsettings_update, :tenantId, :role_admin_id, :permission_tenantsettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantsettings_activate, :tenantId, :role_admin_id, :permission_tenantsettings_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantsettings_deactivate, :tenantId, :role_admin_id, :permission_tenantsettings_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantmetrics_read, :tenantId, :role_admin_id, :permission_tenantmetrics_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantmetrics_export, :tenantId, :role_admin_id, :permission_tenantmetrics_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantfeatureflag_read, :tenantId, :role_admin_id, :permission_tenantfeatureflag_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantfeatureflag_create, :tenantId, :role_admin_id, :permission_tenantfeatureflag_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantfeatureflag_update, :tenantId, :role_admin_id, :permission_tenantfeatureflag_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantfeatureflag_activate, :tenantId, :role_admin_id, :permission_tenantfeatureflag_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantfeatureflag_deactivate, :tenantId, :role_admin_id, :permission_tenantfeatureflag_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantusagerecord_read, :tenantId, :role_admin_id, :permission_tenantusagerecord_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantusagerecord_export, :tenantId, :role_admin_id, :permission_tenantusagerecord_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpricelist_read, :tenantId, :role_admin_id, :permission_tenantpricelist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpricelist_create, :tenantId, :role_admin_id, :permission_tenantpricelist_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpricelist_update, :tenantId, :role_admin_id, :permission_tenantpricelist_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpricelist_activate, :tenantId, :role_admin_id, :permission_tenantpricelist_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpricelist_deactivate, :tenantId, :role_admin_id, :permission_tenantpricelist_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpriceoverride_read, :tenantId, :role_admin_id, :permission_tenantpriceoverride_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpriceoverride_create, :tenantId, :role_admin_id, :permission_tenantpriceoverride_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpriceoverride_update, :tenantId, :role_admin_id, :permission_tenantpriceoverride_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpriceoverride_soft_delete, :tenantId, :role_admin_id, :permission_tenantpriceoverride_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantpriceoverride_restore, :tenantId, :role_admin_id, :permission_tenantpriceoverride_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_read, :tenantId, :role_admin_id, :permission_user_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_create, :tenantId, :role_admin_id, :permission_user_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_update, :tenantId, :role_admin_id, :permission_user_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_soft_delete, :tenantId, :role_admin_id, :permission_user_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_restore, :tenantId, :role_admin_id, :permission_user_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_activate, :tenantId, :role_admin_id, :permission_user_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_deactivate, :tenantId, :role_admin_id, :permission_user_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_lock, :tenantId, :role_admin_id, :permission_user_lock_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_user_unlock, :tenantId, :role_admin_id, :permission_user_unlock_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_read, :tenantId, :role_admin_id, :permission_member_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_create, :tenantId, :role_admin_id, :permission_member_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_update, :tenantId, :role_admin_id, :permission_member_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_soft_delete, :tenantId, :role_admin_id, :permission_member_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_restore, :tenantId, :role_admin_id, :permission_member_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_assign, :tenantId, :role_admin_id, :permission_member_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_unassign, :tenantId, :role_admin_id, :permission_member_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_transfer, :tenantId, :role_admin_id, :permission_member_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_activate, :tenantId, :role_admin_id, :permission_member_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_member_deactivate, :tenantId, :role_admin_id, :permission_member_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_read, :tenantId, :role_admin_id, :permission_memberrole_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_create, :tenantId, :role_admin_id, :permission_memberrole_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_update, :tenantId, :role_admin_id, :permission_memberrole_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_soft_delete, :tenantId, :role_admin_id, :permission_memberrole_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_restore, :tenantId, :role_admin_id, :permission_memberrole_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_assign, :tenantId, :role_admin_id, :permission_memberrole_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_unassign, :tenantId, :role_admin_id, :permission_memberrole_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberrole_transfer, :tenantId, :role_admin_id, :permission_memberrole_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_membersettings_read, :tenantId, :role_admin_id, :permission_membersettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_membersettings_update, :tenantId, :role_admin_id, :permission_membersettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_membersettings_activate, :tenantId, :role_admin_id, :permission_membersettings_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_membersettings_deactivate, :tenantId, :role_admin_id, :permission_membersettings_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_read, :tenantId, :role_admin_id, :permission_memberdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_create, :tenantId, :role_admin_id, :permission_memberdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_update, :tenantId, :role_admin_id, :permission_memberdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_soft_delete, :tenantId, :role_admin_id, :permission_memberdocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_restore, :tenantId, :role_admin_id, :permission_memberdocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_approve, :tenantId, :role_admin_id, :permission_memberdocument_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_memberdocument_reject, :tenantId, :role_admin_id, :permission_memberdocument_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_read, :tenantId, :role_admin_id, :permission_role_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_create, :tenantId, :role_admin_id, :permission_role_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_update, :tenantId, :role_admin_id, :permission_role_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_soft_delete, :tenantId, :role_admin_id, :permission_role_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_restore, :tenantId, :role_admin_id, :permission_role_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_activate, :tenantId, :role_admin_id, :permission_role_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_role_deactivate, :tenantId, :role_admin_id, :permission_role_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_permission_read, :tenantId, :role_admin_id, :permission_permission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rolepermission_read, :tenantId, :role_admin_id, :permission_rolepermission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rolepermission_create, :tenantId, :role_admin_id, :permission_rolepermission_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rolepermission_soft_delete, :tenantId, :role_admin_id, :permission_rolepermission_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rolepermission_restore, :tenantId, :role_admin_id, :permission_rolepermission_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_read, :tenantId, :role_admin_id, :permission_apikey_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_create, :tenantId, :role_admin_id, :permission_apikey_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_update, :tenantId, :role_admin_id, :permission_apikey_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_soft_delete, :tenantId, :role_admin_id, :permission_apikey_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_restore, :tenantId, :role_admin_id, :permission_apikey_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_activate, :tenantId, :role_admin_id, :permission_apikey_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apikey_deactivate, :tenantId, :role_admin_id, :permission_apikey_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_read, :tenantId, :role_admin_id, :permission_authfactor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_create, :tenantId, :role_admin_id, :permission_authfactor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_update, :tenantId, :role_admin_id, :permission_authfactor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_soft_delete, :tenantId, :role_admin_id, :permission_authfactor_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_restore, :tenantId, :role_admin_id, :permission_authfactor_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_activate, :tenantId, :role_admin_id, :permission_authfactor_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_authfactor_deactivate, :tenantId, :role_admin_id, :permission_authfactor_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_read, :tenantId, :role_admin_id, :permission_account_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_create, :tenantId, :role_admin_id, :permission_account_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_update, :tenantId, :role_admin_id, :permission_account_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_soft_delete, :tenantId, :role_admin_id, :permission_account_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_restore, :tenantId, :role_admin_id, :permission_account_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_activate, :tenantId, :role_admin_id, :permission_account_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_deactivate, :tenantId, :role_admin_id, :permission_account_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_read, :tenantId, :role_admin_id, :permission_accountaddress_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_create, :tenantId, :role_admin_id, :permission_accountaddress_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_update, :tenantId, :role_admin_id, :permission_accountaddress_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_soft_delete, :tenantId, :role_admin_id, :permission_accountaddress_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_restore, :tenantId, :role_admin_id, :permission_accountaddress_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_read, :tenantId, :role_admin_id, :permission_contact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_create, :tenantId, :role_admin_id, :permission_contact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_update, :tenantId, :role_admin_id, :permission_contact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_soft_delete, :tenantId, :role_admin_id, :permission_contact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_restore, :tenantId, :role_admin_id, :permission_contact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_read, :tenantId, :role_admin_id, :permission_lead_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_create, :tenantId, :role_admin_id, :permission_lead_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_update, :tenantId, :role_admin_id, :permission_lead_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_soft_delete, :tenantId, :role_admin_id, :permission_lead_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_restore, :tenantId, :role_admin_id, :permission_lead_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_assign, :tenantId, :role_admin_id, :permission_lead_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_unassign, :tenantId, :role_admin_id, :permission_lead_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_transfer, :tenantId, :role_admin_id, :permission_lead_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leadactivity_read, :tenantId, :role_admin_id, :permission_leadactivity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leadactivity_create, :tenantId, :role_admin_id, :permission_leadactivity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leadactivity_update, :tenantId, :role_admin_id, :permission_leadactivity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leadactivity_soft_delete, :tenantId, :role_admin_id, :permission_leadactivity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leadactivity_restore, :tenantId, :role_admin_id, :permission_leadactivity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_read, :tenantId, :role_admin_id, :permission_opportunity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_create, :tenantId, :role_admin_id, :permission_opportunity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_update, :tenantId, :role_admin_id, :permission_opportunity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_soft_delete, :tenantId, :role_admin_id, :permission_opportunity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_restore, :tenantId, :role_admin_id, :permission_opportunity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_assign, :tenantId, :role_admin_id, :permission_opportunity_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_unassign, :tenantId, :role_admin_id, :permission_opportunity_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_transfer, :tenantId, :role_admin_id, :permission_opportunity_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitystage_read, :tenantId, :role_admin_id, :permission_opportunitystage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitystage_create, :tenantId, :role_admin_id, :permission_opportunitystage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitystage_update, :tenantId, :role_admin_id, :permission_opportunitystage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitystage_soft_delete, :tenantId, :role_admin_id, :permission_opportunitystage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitystage_restore, :tenantId, :role_admin_id, :permission_opportunitystage_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitylineitem_read, :tenantId, :role_admin_id, :permission_opportunitylineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitylineitem_create, :tenantId, :role_admin_id, :permission_opportunitylineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitylineitem_update, :tenantId, :role_admin_id, :permission_opportunitylineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitylineitem_soft_delete, :tenantId, :role_admin_id, :permission_opportunitylineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunitylineitem_restore, :tenantId, :role_admin_id, :permission_opportunitylineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_read, :tenantId, :role_admin_id, :permission_quote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_create, :tenantId, :role_admin_id, :permission_quote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_update, :tenantId, :role_admin_id, :permission_quote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_soft_delete, :tenantId, :role_admin_id, :permission_quote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_restore, :tenantId, :role_admin_id, :permission_quote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_send, :tenantId, :role_admin_id, :permission_quote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_approve, :tenantId, :role_admin_id, :permission_quote_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_reject, :tenantId, :role_admin_id, :permission_quote_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quotelineitem_read, :tenantId, :role_admin_id, :permission_quotelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quotelineitem_create, :tenantId, :role_admin_id, :permission_quotelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quotelineitem_update, :tenantId, :role_admin_id, :permission_quotelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quotelineitem_soft_delete, :tenantId, :role_admin_id, :permission_quotelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quotelineitem_restore, :tenantId, :role_admin_id, :permission_quotelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_read, :tenantId, :role_admin_id, :permission_estimate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_create, :tenantId, :role_admin_id, :permission_estimate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_update, :tenantId, :role_admin_id, :permission_estimate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_soft_delete, :tenantId, :role_admin_id, :permission_estimate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_restore, :tenantId, :role_admin_id, :permission_estimate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_send, :tenantId, :role_admin_id, :permission_estimate_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_approve, :tenantId, :role_admin_id, :permission_estimate_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_reject, :tenantId, :role_admin_id, :permission_estimate_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatelineitem_read, :tenantId, :role_admin_id, :permission_estimatelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatelineitem_create, :tenantId, :role_admin_id, :permission_estimatelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatelineitem_update, :tenantId, :role_admin_id, :permission_estimatelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatelineitem_soft_delete, :tenantId, :role_admin_id, :permission_estimatelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatelineitem_restore, :tenantId, :role_admin_id, :permission_estimatelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateattachment_read, :tenantId, :role_admin_id, :permission_estimateattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateattachment_create, :tenantId, :role_admin_id, :permission_estimateattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateattachment_update, :tenantId, :role_admin_id, :permission_estimateattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateattachment_soft_delete, :tenantId, :role_admin_id, :permission_estimateattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateattachment_restore, :tenantId, :role_admin_id, :permission_estimateattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateapproval_read, :tenantId, :role_admin_id, :permission_estimateapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateapproval_create, :tenantId, :role_admin_id, :permission_estimateapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateapproval_approve, :tenantId, :role_admin_id, :permission_estimateapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateapproval_reject, :tenantId, :role_admin_id, :permission_estimateapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_read, :tenantId, :role_admin_id, :permission_requestforquote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_create, :tenantId, :role_admin_id, :permission_requestforquote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_update, :tenantId, :role_admin_id, :permission_requestforquote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_soft_delete, :tenantId, :role_admin_id, :permission_requestforquote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_restore, :tenantId, :role_admin_id, :permission_requestforquote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_requestforquote_send, :tenantId, :role_admin_id, :permission_requestforquote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqline_read, :tenantId, :role_admin_id, :permission_rfqline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqline_create, :tenantId, :role_admin_id, :permission_rfqline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqline_update, :tenantId, :role_admin_id, :permission_rfqline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqline_soft_delete, :tenantId, :role_admin_id, :permission_rfqline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqline_restore, :tenantId, :role_admin_id, :permission_rfqline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponse_read, :tenantId, :role_admin_id, :permission_rfqresponse_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponse_create, :tenantId, :role_admin_id, :permission_rfqresponse_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponse_update, :tenantId, :role_admin_id, :permission_rfqresponse_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponse_soft_delete, :tenantId, :role_admin_id, :permission_rfqresponse_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponse_restore, :tenantId, :role_admin_id, :permission_rfqresponse_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_read, :tenantId, :role_admin_id, :permission_bid_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_create, :tenantId, :role_admin_id, :permission_bid_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_update, :tenantId, :role_admin_id, :permission_bid_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_soft_delete, :tenantId, :role_admin_id, :permission_bid_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_restore, :tenantId, :role_admin_id, :permission_bid_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_submit, :tenantId, :role_admin_id, :permission_bid_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_approve, :tenantId, :role_admin_id, :permission_bid_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bid_reject, :tenantId, :role_admin_id, :permission_bid_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidcomparison_read, :tenantId, :role_admin_id, :permission_bidcomparison_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidcomparison_create, :tenantId, :role_admin_id, :permission_bidcomparison_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidcomparison_update, :tenantId, :role_admin_id, :permission_bidcomparison_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidcomparison_soft_delete, :tenantId, :role_admin_id, :permission_bidcomparison_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidcomparison_restore, :tenantId, :role_admin_id, :permission_bidcomparison_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_read, :tenantId, :role_admin_id, :permission_bidinvitation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_create, :tenantId, :role_admin_id, :permission_bidinvitation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_update, :tenantId, :role_admin_id, :permission_bidinvitation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_send, :tenantId, :role_admin_id, :permission_bidinvitation_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_soft_delete, :tenantId, :role_admin_id, :permission_bidinvitation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidinvitation_restore, :tenantId, :role_admin_id, :permission_bidinvitation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_read, :tenantId, :role_admin_id, :permission_bidsubmission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_create, :tenantId, :role_admin_id, :permission_bidsubmission_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_update, :tenantId, :role_admin_id, :permission_bidsubmission_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_submit, :tenantId, :role_admin_id, :permission_bidsubmission_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_approve, :tenantId, :role_admin_id, :permission_bidsubmission_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bidsubmission_reject, :tenantId, :role_admin_id, :permission_bidsubmission_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_read, :tenantId, :role_admin_id, :permission_project_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_create, :tenantId, :role_admin_id, :permission_project_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_update, :tenantId, :role_admin_id, :permission_project_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_soft_delete, :tenantId, :role_admin_id, :permission_project_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_restore, :tenantId, :role_admin_id, :permission_project_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_hard_delete, :tenantId, :role_admin_id, :permission_project_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_archive, :tenantId, :role_admin_id, :permission_project_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_activate, :tenantId, :role_admin_id, :permission_project_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_deactivate, :tenantId, :role_admin_id, :permission_project_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_duplicate, :tenantId, :role_admin_id, :permission_project_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_transfer, :tenantId, :role_admin_id, :permission_project_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_read, :tenantId, :role_admin_id, :permission_projecttaskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_create, :tenantId, :role_admin_id, :permission_projecttaskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_update, :tenantId, :role_admin_id, :permission_projecttaskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_soft_delete, :tenantId, :role_admin_id, :permission_projecttaskassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_restore, :tenantId, :role_admin_id, :permission_projecttaskassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_assign, :tenantId, :role_admin_id, :permission_projecttaskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_unassign, :tenantId, :role_admin_id, :permission_projecttaskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskassignment_transfer, :tenantId, :role_admin_id, :permission_projecttaskassignment_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_read, :tenantId, :role_admin_id, :permission_projectmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_create, :tenantId, :role_admin_id, :permission_projectmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_update, :tenantId, :role_admin_id, :permission_projectmember_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_soft_delete, :tenantId, :role_admin_id, :permission_projectmember_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_restore, :tenantId, :role_admin_id, :permission_projectmember_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_assign, :tenantId, :role_admin_id, :permission_projectmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_unassign, :tenantId, :role_admin_id, :permission_projectmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectmember_transfer, :tenantId, :role_admin_id, :permission_projectmember_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectnote_read, :tenantId, :role_admin_id, :permission_projectnote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectnote_create, :tenantId, :role_admin_id, :permission_projectnote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectnote_update, :tenantId, :role_admin_id, :permission_projectnote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectnote_soft_delete, :tenantId, :role_admin_id, :permission_projectnote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectnote_restore, :tenantId, :role_admin_id, :permission_projectnote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_read, :tenantId, :role_admin_id, :permission_projectreport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_create, :tenantId, :role_admin_id, :permission_projectreport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_update, :tenantId, :role_admin_id, :permission_projectreport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_soft_delete, :tenantId, :role_admin_id, :permission_projectreport_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_restore, :tenantId, :role_admin_id, :permission_projectreport_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectreport_export, :tenantId, :role_admin_id, :permission_projectreport_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectbudgetline_read, :tenantId, :role_admin_id, :permission_projectbudgetline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectbudgetline_create, :tenantId, :role_admin_id, :permission_projectbudgetline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectbudgetline_update, :tenantId, :role_admin_id, :permission_projectbudgetline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectbudgetline_soft_delete, :tenantId, :role_admin_id, :permission_projectbudgetline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectbudgetline_restore, :tenantId, :role_admin_id, :permission_projectbudgetline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectfinancialsnapshot_read, :tenantId, :role_admin_id, :permission_projectfinancialsnapshot_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectfinancialsnapshot_create, :tenantId, :role_admin_id, :permission_projectfinancialsnapshot_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectfinancialsnapshot_export, :tenantId, :role_admin_id, :permission_projectfinancialsnapshot_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectinventorytransaction_read, :tenantId, :role_admin_id, :permission_projectinventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectinventorytransaction_create, :tenantId, :role_admin_id, :permission_projectinventorytransaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectinventorytransaction_update, :tenantId, :role_admin_id, :permission_projectinventorytransaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectinventorytransaction_soft_delete, :tenantId, :role_admin_id, :permission_projectinventorytransaction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectinventorytransaction_restore, :tenantId, :role_admin_id, :permission_projectinventorytransaction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_read, :tenantId, :role_admin_id, :permission_projectphase_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_create, :tenantId, :role_admin_id, :permission_projectphase_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_update, :tenantId, :role_admin_id, :permission_projectphase_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_soft_delete, :tenantId, :role_admin_id, :permission_projectphase_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_restore, :tenantId, :role_admin_id, :permission_projectphase_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_activate, :tenantId, :role_admin_id, :permission_projectphase_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectphase_deactivate, :tenantId, :role_admin_id, :permission_projectphase_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_wbsitem_read, :tenantId, :role_admin_id, :permission_wbsitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_wbsitem_create, :tenantId, :role_admin_id, :permission_wbsitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_wbsitem_update, :tenantId, :role_admin_id, :permission_wbsitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_wbsitem_soft_delete, :tenantId, :role_admin_id, :permission_wbsitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_wbsitem_restore, :tenantId, :role_admin_id, :permission_wbsitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectlocation_read, :tenantId, :role_admin_id, :permission_projectlocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectlocation_create, :tenantId, :role_admin_id, :permission_projectlocation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectlocation_update, :tenantId, :role_admin_id, :permission_projectlocation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectlocation_soft_delete, :tenantId, :role_admin_id, :permission_projectlocation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectlocation_restore, :tenantId, :role_admin_id, :permission_projectlocation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_read, :tenantId, :role_admin_id, :permission_projecttask_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_create, :tenantId, :role_admin_id, :permission_projecttask_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_update, :tenantId, :role_admin_id, :permission_projecttask_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_soft_delete, :tenantId, :role_admin_id, :permission_projecttask_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_restore, :tenantId, :role_admin_id, :permission_projecttask_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_assign, :tenantId, :role_admin_id, :permission_projecttask_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_unassign, :tenantId, :role_admin_id, :permission_projecttask_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttask_transfer, :tenantId, :role_admin_id, :permission_projecttask_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskdependency_read, :tenantId, :role_admin_id, :permission_projecttaskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskdependency_create, :tenantId, :role_admin_id, :permission_projecttaskdependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskdependency_update, :tenantId, :role_admin_id, :permission_projecttaskdependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskdependency_soft_delete, :tenantId, :role_admin_id, :permission_projecttaskdependency_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskdependency_restore, :tenantId, :role_admin_id, :permission_projecttaskdependency_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskattachment_read, :tenantId, :role_admin_id, :permission_projecttaskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskattachment_create, :tenantId, :role_admin_id, :permission_projecttaskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskattachment_update, :tenantId, :role_admin_id, :permission_projecttaskattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskattachment_soft_delete, :tenantId, :role_admin_id, :permission_projecttaskattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskattachment_restore, :tenantId, :role_admin_id, :permission_projecttaskattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskcomment_read, :tenantId, :role_admin_id, :permission_projecttaskcomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskcomment_create, :tenantId, :role_admin_id, :permission_projecttaskcomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskcomment_update, :tenantId, :role_admin_id, :permission_projecttaskcomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskcomment_soft_delete, :tenantId, :role_admin_id, :permission_projecttaskcomment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskcomment_restore, :tenantId, :role_admin_id, :permission_projecttaskcomment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_read, :tenantId, :role_admin_id, :permission_changeorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_create, :tenantId, :role_admin_id, :permission_changeorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_update, :tenantId, :role_admin_id, :permission_changeorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_soft_delete, :tenantId, :role_admin_id, :permission_changeorder_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_restore, :tenantId, :role_admin_id, :permission_changeorder_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_approve, :tenantId, :role_admin_id, :permission_changeorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorder_reject, :tenantId, :role_admin_id, :permission_changeorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderline_read, :tenantId, :role_admin_id, :permission_changeorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderline_create, :tenantId, :role_admin_id, :permission_changeorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderline_update, :tenantId, :role_admin_id, :permission_changeorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderline_soft_delete, :tenantId, :role_admin_id, :permission_changeorderline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderline_restore, :tenantId, :role_admin_id, :permission_changeorderline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderapproval_read, :tenantId, :role_admin_id, :permission_changeorderapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderapproval_create, :tenantId, :role_admin_id, :permission_changeorderapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderapproval_approve, :tenantId, :role_admin_id, :permission_changeorderapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderapproval_reject, :tenantId, :role_admin_id, :permission_changeorderapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderdocument_read, :tenantId, :role_admin_id, :permission_changeorderdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderdocument_create, :tenantId, :role_admin_id, :permission_changeorderdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderdocument_update, :tenantId, :role_admin_id, :permission_changeorderdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderdocument_soft_delete, :tenantId, :role_admin_id, :permission_changeorderdocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_changeorderdocument_restore, :tenantId, :role_admin_id, :permission_changeorderdocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_read, :tenantId, :role_admin_id, :permission_rfi_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_create, :tenantId, :role_admin_id, :permission_rfi_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_update, :tenantId, :role_admin_id, :permission_rfi_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_soft_delete, :tenantId, :role_admin_id, :permission_rfi_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_restore, :tenantId, :role_admin_id, :permission_rfi_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfi_send, :tenantId, :role_admin_id, :permission_rfi_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfireply_read, :tenantId, :role_admin_id, :permission_rfireply_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfireply_create, :tenantId, :role_admin_id, :permission_rfireply_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfireply_update, :tenantId, :role_admin_id, :permission_rfireply_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfireply_soft_delete, :tenantId, :role_admin_id, :permission_rfireply_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfireply_restore, :tenantId, :role_admin_id, :permission_rfireply_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittal_read, :tenantId, :role_admin_id, :permission_submittal_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittal_create, :tenantId, :role_admin_id, :permission_submittal_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittal_update, :tenantId, :role_admin_id, :permission_submittal_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittal_soft_delete, :tenantId, :role_admin_id, :permission_submittal_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittal_restore, :tenantId, :role_admin_id, :permission_submittal_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalitem_read, :tenantId, :role_admin_id, :permission_submittalitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalitem_create, :tenantId, :role_admin_id, :permission_submittalitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalitem_update, :tenantId, :role_admin_id, :permission_submittalitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalitem_soft_delete, :tenantId, :role_admin_id, :permission_submittalitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalitem_restore, :tenantId, :role_admin_id, :permission_submittalitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalapproval_read, :tenantId, :role_admin_id, :permission_submittalapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalapproval_create, :tenantId, :role_admin_id, :permission_submittalapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalapproval_approve, :tenantId, :role_admin_id, :permission_submittalapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_submittalapproval_reject, :tenantId, :role_admin_id, :permission_submittalapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspection_read, :tenantId, :role_admin_id, :permission_inspection_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspection_create, :tenantId, :role_admin_id, :permission_inspection_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspection_update, :tenantId, :role_admin_id, :permission_inspection_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspection_soft_delete, :tenantId, :role_admin_id, :permission_inspection_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspection_restore, :tenantId, :role_admin_id, :permission_inspection_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionitem_read, :tenantId, :role_admin_id, :permission_inspectionitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionitem_create, :tenantId, :role_admin_id, :permission_inspectionitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionitem_update, :tenantId, :role_admin_id, :permission_inspectionitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionitem_soft_delete, :tenantId, :role_admin_id, :permission_inspectionitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionitem_restore, :tenantId, :role_admin_id, :permission_inspectionitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionapproval_read, :tenantId, :role_admin_id, :permission_inspectionapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionapproval_create, :tenantId, :role_admin_id, :permission_inspectionapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionapproval_approve, :tenantId, :role_admin_id, :permission_inspectionapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inspectionapproval_reject, :tenantId, :role_admin_id, :permission_inspectionapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dailylog_read, :tenantId, :role_admin_id, :permission_dailylog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dailylog_create, :tenantId, :role_admin_id, :permission_dailylog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dailylog_update, :tenantId, :role_admin_id, :permission_dailylog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dailylog_soft_delete, :tenantId, :role_admin_id, :permission_dailylog_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dailylog_restore, :tenantId, :role_admin_id, :permission_dailylog_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlist_read, :tenantId, :role_admin_id, :permission_punchlist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlist_create, :tenantId, :role_admin_id, :permission_punchlist_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlist_update, :tenantId, :role_admin_id, :permission_punchlist_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlist_soft_delete, :tenantId, :role_admin_id, :permission_punchlist_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlist_restore, :tenantId, :role_admin_id, :permission_punchlist_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlistitem_read, :tenantId, :role_admin_id, :permission_punchlistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlistitem_create, :tenantId, :role_admin_id, :permission_punchlistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlistitem_update, :tenantId, :role_admin_id, :permission_punchlistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlistitem_soft_delete, :tenantId, :role_admin_id, :permission_punchlistitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_punchlistitem_restore, :tenantId, :role_admin_id, :permission_punchlistitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activity_read, :tenantId, :role_admin_id, :permission_activity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activity_create, :tenantId, :role_admin_id, :permission_activity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activity_update, :tenantId, :role_admin_id, :permission_activity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activity_soft_delete, :tenantId, :role_admin_id, :permission_activity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activity_restore, :tenantId, :role_admin_id, :permission_activity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activityattachment_read, :tenantId, :role_admin_id, :permission_activityattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activityattachment_create, :tenantId, :role_admin_id, :permission_activityattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activityattachment_update, :tenantId, :role_admin_id, :permission_activityattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activityattachment_soft_delete, :tenantId, :role_admin_id, :permission_activityattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_activityattachment_restore, :tenantId, :role_admin_id, :permission_activityattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestone_read, :tenantId, :role_admin_id, :permission_milestone_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestone_create, :tenantId, :role_admin_id, :permission_milestone_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestone_update, :tenantId, :role_admin_id, :permission_milestone_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestone_soft_delete, :tenantId, :role_admin_id, :permission_milestone_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestone_restore, :tenantId, :role_admin_id, :permission_milestone_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonedependency_read, :tenantId, :role_admin_id, :permission_milestonedependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonedependency_create, :tenantId, :role_admin_id, :permission_milestonedependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonedependency_update, :tenantId, :role_admin_id, :permission_milestonedependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonedependency_soft_delete, :tenantId, :role_admin_id, :permission_milestonedependency_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonedependency_restore, :tenantId, :role_admin_id, :permission_milestonedependency_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonestakeholder_read, :tenantId, :role_admin_id, :permission_milestonestakeholder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonestakeholder_create, :tenantId, :role_admin_id, :permission_milestonestakeholder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonestakeholder_update, :tenantId, :role_admin_id, :permission_milestonestakeholder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonestakeholder_soft_delete, :tenantId, :role_admin_id, :permission_milestonestakeholder_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_milestonestakeholder_restore, :tenantId, :role_admin_id, :permission_milestonestakeholder_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectdocument_read, :tenantId, :role_admin_id, :permission_projectdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectdocument_create, :tenantId, :role_admin_id, :permission_projectdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectdocument_update, :tenantId, :role_admin_id, :permission_projectdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectdocument_soft_delete, :tenantId, :role_admin_id, :permission_projectdocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectdocument_restore, :tenantId, :role_admin_id, :permission_projectdocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_read, :tenantId, :role_admin_id, :permission_projectexternalaccess_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_create, :tenantId, :role_admin_id, :permission_projectexternalaccess_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_update, :tenantId, :role_admin_id, :permission_projectexternalaccess_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_soft_delete, :tenantId, :role_admin_id, :permission_projectexternalaccess_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_restore, :tenantId, :role_admin_id, :permission_projectexternalaccess_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_grant, :tenantId, :role_admin_id, :permission_projectexternalaccess_grant_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectexternalaccess_revoke, :tenantId, :role_admin_id, :permission_projectexternalaccess_revoke_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_read, :tenantId, :role_admin_id, :permission_projectissue_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_create, :tenantId, :role_admin_id, :permission_projectissue_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_update, :tenantId, :role_admin_id, :permission_projectissue_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_soft_delete, :tenantId, :role_admin_id, :permission_projectissue_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_restore, :tenantId, :role_admin_id, :permission_projectissue_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_assign, :tenantId, :role_admin_id, :permission_projectissue_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectissue_resolve, :tenantId, :role_admin_id, :permission_projectissue_resolve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectledgerentry_read, :tenantId, :role_admin_id, :permission_projectledgerentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectledgerentry_create, :tenantId, :role_admin_id, :permission_projectledgerentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectledgerentry_update, :tenantId, :role_admin_id, :permission_projectledgerentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectledgerentry_soft_delete, :tenantId, :role_admin_id, :permission_projectledgerentry_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectledgerentry_restore, :tenantId, :role_admin_id, :permission_projectledgerentry_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_read, :tenantId, :role_admin_id, :permission_projectrisk_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_create, :tenantId, :role_admin_id, :permission_projectrisk_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_update, :tenantId, :role_admin_id, :permission_projectrisk_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_soft_delete, :tenantId, :role_admin_id, :permission_projectrisk_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_restore, :tenantId, :role_admin_id, :permission_projectrisk_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_assess, :tenantId, :role_admin_id, :permission_projectrisk_assess_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projectrisk_mitigate, :tenantId, :role_admin_id, :permission_projectrisk_mitigate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_read, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_create, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_update, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_soft_delete, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_restore, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttaskchecklistitem_complete, :tenantId, :role_admin_id, :permission_projecttaskchecklistitem_complete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_read, :tenantId, :role_admin_id, :permission_projecttype_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_create, :tenantId, :role_admin_id, :permission_projecttype_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_update, :tenantId, :role_admin_id, :permission_projecttype_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_soft_delete, :tenantId, :role_admin_id, :permission_projecttype_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_restore, :tenantId, :role_admin_id, :permission_projecttype_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_activate, :tenantId, :role_admin_id, :permission_projecttype_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_projecttype_deactivate, :tenantId, :role_admin_id, :permission_projecttype_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_read, :tenantId, :role_admin_id, :permission_task_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_create, :tenantId, :role_admin_id, :permission_task_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_update, :tenantId, :role_admin_id, :permission_task_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_soft_delete, :tenantId, :role_admin_id, :permission_task_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_restore, :tenantId, :role_admin_id, :permission_task_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_hard_delete, :tenantId, :role_admin_id, :permission_task_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_assign, :tenantId, :role_admin_id, :permission_task_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_unassign, :tenantId, :role_admin_id, :permission_task_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_transfer, :tenantId, :role_admin_id, :permission_task_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_activate, :tenantId, :role_admin_id, :permission_task_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_deactivate, :tenantId, :role_admin_id, :permission_task_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_task_duplicate, :tenantId, :role_admin_id, :permission_task_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_read, :tenantId, :role_admin_id, :permission_taskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_create, :tenantId, :role_admin_id, :permission_taskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_update, :tenantId, :role_admin_id, :permission_taskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_soft_delete, :tenantId, :role_admin_id, :permission_taskassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_restore, :tenantId, :role_admin_id, :permission_taskassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_assign, :tenantId, :role_admin_id, :permission_taskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_unassign, :tenantId, :role_admin_id, :permission_taskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskassignment_transfer, :tenantId, :role_admin_id, :permission_taskassignment_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskdependency_read, :tenantId, :role_admin_id, :permission_taskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskdependency_create, :tenantId, :role_admin_id, :permission_taskdependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskdependency_update, :tenantId, :role_admin_id, :permission_taskdependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskdependency_soft_delete, :tenantId, :role_admin_id, :permission_taskdependency_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskdependency_restore, :tenantId, :role_admin_id, :permission_taskdependency_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskattachment_read, :tenantId, :role_admin_id, :permission_taskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskattachment_create, :tenantId, :role_admin_id, :permission_taskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskattachment_update, :tenantId, :role_admin_id, :permission_taskattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskattachment_soft_delete, :tenantId, :role_admin_id, :permission_taskattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskattachment_restore, :tenantId, :role_admin_id, :permission_taskattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskchecklistitem_read, :tenantId, :role_admin_id, :permission_taskchecklistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskchecklistitem_create, :tenantId, :role_admin_id, :permission_taskchecklistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskchecklistitem_update, :tenantId, :role_admin_id, :permission_taskchecklistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskchecklistitem_soft_delete, :tenantId, :role_admin_id, :permission_taskchecklistitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_taskchecklistitem_restore, :tenantId, :role_admin_id, :permission_taskchecklistitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_read, :tenantId, :role_admin_id, :permission_invoice_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_create, :tenantId, :role_admin_id, :permission_invoice_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_update, :tenantId, :role_admin_id, :permission_invoice_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_soft_delete, :tenantId, :role_admin_id, :permission_invoice_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_restore, :tenantId, :role_admin_id, :permission_invoice_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_hard_delete, :tenantId, :role_admin_id, :permission_invoice_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_send, :tenantId, :role_admin_id, :permission_invoice_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_duplicate, :tenantId, :role_admin_id, :permission_invoice_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_export, :tenantId, :role_admin_id, :permission_invoice_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_approve, :tenantId, :role_admin_id, :permission_invoice_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoice_reject, :tenantId, :role_admin_id, :permission_invoice_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicelineitem_read, :tenantId, :role_admin_id, :permission_invoicelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicelineitem_create, :tenantId, :role_admin_id, :permission_invoicelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicelineitem_update, :tenantId, :role_admin_id, :permission_invoicelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicelineitem_soft_delete, :tenantId, :role_admin_id, :permission_invoicelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicelineitem_restore, :tenantId, :role_admin_id, :permission_invoicelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoiceattachment_read, :tenantId, :role_admin_id, :permission_invoiceattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoiceattachment_create, :tenantId, :role_admin_id, :permission_invoiceattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoiceattachment_update, :tenantId, :role_admin_id, :permission_invoiceattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoiceattachment_soft_delete, :tenantId, :role_admin_id, :permission_invoiceattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoiceattachment_restore, :tenantId, :role_admin_id, :permission_invoiceattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicetax_read, :tenantId, :role_admin_id, :permission_invoicetax_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicetax_create, :tenantId, :role_admin_id, :permission_invoicetax_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicetax_update, :tenantId, :role_admin_id, :permission_invoicetax_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicetax_soft_delete, :tenantId, :role_admin_id, :permission_invoicetax_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicetax_restore, :tenantId, :role_admin_id, :permission_invoicetax_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_read, :tenantId, :role_admin_id, :permission_payment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_create, :tenantId, :role_admin_id, :permission_payment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_update, :tenantId, :role_admin_id, :permission_payment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_soft_delete, :tenantId, :role_admin_id, :permission_payment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_restore, :tenantId, :role_admin_id, :permission_payment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payment_export, :tenantId, :role_admin_id, :permission_payment_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentschedule_read, :tenantId, :role_admin_id, :permission_paymentschedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentschedule_create, :tenantId, :role_admin_id, :permission_paymentschedule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentschedule_update, :tenantId, :role_admin_id, :permission_paymentschedule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentschedule_soft_delete, :tenantId, :role_admin_id, :permission_paymentschedule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentschedule_restore, :tenantId, :role_admin_id, :permission_paymentschedule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_read, :tenantId, :role_admin_id, :permission_apbill_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_create, :tenantId, :role_admin_id, :permission_apbill_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_update, :tenantId, :role_admin_id, :permission_apbill_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_soft_delete, :tenantId, :role_admin_id, :permission_apbill_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_restore, :tenantId, :role_admin_id, :permission_apbill_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_approve, :tenantId, :role_admin_id, :permission_apbill_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbill_reject, :tenantId, :role_admin_id, :permission_apbill_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbillline_read, :tenantId, :role_admin_id, :permission_apbillline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbillline_create, :tenantId, :role_admin_id, :permission_apbillline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbillline_update, :tenantId, :role_admin_id, :permission_apbillline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbillline_soft_delete, :tenantId, :role_admin_id, :permission_apbillline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_apbillline_restore, :tenantId, :role_admin_id, :permission_apbillline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billapproval_read, :tenantId, :role_admin_id, :permission_billapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billapproval_create, :tenantId, :role_admin_id, :permission_billapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billapproval_approve, :tenantId, :role_admin_id, :permission_billapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billapproval_reject, :tenantId, :role_admin_id, :permission_billapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billpayment_read, :tenantId, :role_admin_id, :permission_billpayment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billpayment_create, :tenantId, :role_admin_id, :permission_billpayment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billpayment_update, :tenantId, :role_admin_id, :permission_billpayment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billpayment_soft_delete, :tenantId, :role_admin_id, :permission_billpayment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_billpayment_restore, :tenantId, :role_admin_id, :permission_billpayment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_read, :tenantId, :role_admin_id, :permission_expense_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_create, :tenantId, :role_admin_id, :permission_expense_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_update, :tenantId, :role_admin_id, :permission_expense_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_soft_delete, :tenantId, :role_admin_id, :permission_expense_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_restore, :tenantId, :role_admin_id, :permission_expense_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_approve, :tenantId, :role_admin_id, :permission_expense_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_reject, :tenantId, :role_admin_id, :permission_expense_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_export, :tenantId, :role_admin_id, :permission_expense_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseline_read, :tenantId, :role_admin_id, :permission_expenseline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseline_create, :tenantId, :role_admin_id, :permission_expenseline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseline_update, :tenantId, :role_admin_id, :permission_expenseline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseline_soft_delete, :tenantId, :role_admin_id, :permission_expenseline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseline_restore, :tenantId, :role_admin_id, :permission_expenseline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseapproval_read, :tenantId, :role_admin_id, :permission_expenseapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseapproval_create, :tenantId, :role_admin_id, :permission_expenseapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseapproval_approve, :tenantId, :role_admin_id, :permission_expenseapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expenseapproval_reject, :tenantId, :role_admin_id, :permission_expenseapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_read, :tenantId, :role_admin_id, :permission_expensereceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_create, :tenantId, :role_admin_id, :permission_expensereceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_update, :tenantId, :role_admin_id, :permission_expensereceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_soft_delete, :tenantId, :role_admin_id, :permission_expensereceipt_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_restore, :tenantId, :role_admin_id, :permission_expensereceipt_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemo_read, :tenantId, :role_admin_id, :permission_creditmemo_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemo_create, :tenantId, :role_admin_id, :permission_creditmemo_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemo_update, :tenantId, :role_admin_id, :permission_creditmemo_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemo_soft_delete, :tenantId, :role_admin_id, :permission_creditmemo_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemo_restore, :tenantId, :role_admin_id, :permission_creditmemo_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemoline_read, :tenantId, :role_admin_id, :permission_creditmemoline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemoline_create, :tenantId, :role_admin_id, :permission_creditmemoline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemoline_update, :tenantId, :role_admin_id, :permission_creditmemoline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemoline_soft_delete, :tenantId, :role_admin_id, :permission_creditmemoline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_creditmemoline_restore, :tenantId, :role_admin_id, :permission_creditmemoline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_read, :tenantId, :role_admin_id, :permission_purchaseorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_create, :tenantId, :role_admin_id, :permission_purchaseorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_update, :tenantId, :role_admin_id, :permission_purchaseorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_soft_delete, :tenantId, :role_admin_id, :permission_purchaseorder_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_restore, :tenantId, :role_admin_id, :permission_purchaseorder_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_send, :tenantId, :role_admin_id, :permission_purchaseorder_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_approve, :tenantId, :role_admin_id, :permission_purchaseorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorder_reject, :tenantId, :role_admin_id, :permission_purchaseorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderline_read, :tenantId, :role_admin_id, :permission_purchaseorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderline_create, :tenantId, :role_admin_id, :permission_purchaseorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderline_update, :tenantId, :role_admin_id, :permission_purchaseorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderline_soft_delete, :tenantId, :role_admin_id, :permission_purchaseorderline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderline_restore, :tenantId, :role_admin_id, :permission_purchaseorderline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderapproval_read, :tenantId, :role_admin_id, :permission_purchaseorderapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderapproval_create, :tenantId, :role_admin_id, :permission_purchaseorderapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderapproval_approve, :tenantId, :role_admin_id, :permission_purchaseorderapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_purchaseorderapproval_reject, :tenantId, :role_admin_id, :permission_purchaseorderapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_read, :tenantId, :role_admin_id, :permission_glaccount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_create, :tenantId, :role_admin_id, :permission_glaccount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_update, :tenantId, :role_admin_id, :permission_glaccount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_soft_delete, :tenantId, :role_admin_id, :permission_glaccount_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_restore, :tenantId, :role_admin_id, :permission_glaccount_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_activate, :tenantId, :role_admin_id, :permission_glaccount_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_glaccount_deactivate, :tenantId, :role_admin_id, :permission_glaccount_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalentry_read, :tenantId, :role_admin_id, :permission_journalentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalentry_create, :tenantId, :role_admin_id, :permission_journalentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalentry_update, :tenantId, :role_admin_id, :permission_journalentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalentry_soft_delete, :tenantId, :role_admin_id, :permission_journalentry_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalentry_restore, :tenantId, :role_admin_id, :permission_journalentry_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalline_read, :tenantId, :role_admin_id, :permission_journalline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalline_create, :tenantId, :role_admin_id, :permission_journalline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalline_update, :tenantId, :role_admin_id, :permission_journalline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalline_soft_delete, :tenantId, :role_admin_id, :permission_journalline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_journalline_restore, :tenantId, :role_admin_id, :permission_journalline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_read, :tenantId, :role_admin_id, :permission_bankaccount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_create, :tenantId, :role_admin_id, :permission_bankaccount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_update, :tenantId, :role_admin_id, :permission_bankaccount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_soft_delete, :tenantId, :role_admin_id, :permission_bankaccount_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_restore, :tenantId, :role_admin_id, :permission_bankaccount_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_activate, :tenantId, :role_admin_id, :permission_bankaccount_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankaccount_deactivate, :tenantId, :role_admin_id, :permission_bankaccount_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankstatementline_read, :tenantId, :role_admin_id, :permission_bankstatementline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankstatementline_create, :tenantId, :role_admin_id, :permission_bankstatementline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankstatementline_update, :tenantId, :role_admin_id, :permission_bankstatementline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankstatementline_soft_delete, :tenantId, :role_admin_id, :permission_bankstatementline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_bankstatementline_restore, :tenantId, :role_admin_id, :permission_bankstatementline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reconciliation_read, :tenantId, :role_admin_id, :permission_reconciliation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reconciliation_create, :tenantId, :role_admin_id, :permission_reconciliation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reconciliation_update, :tenantId, :role_admin_id, :permission_reconciliation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reconciliation_soft_delete, :tenantId, :role_admin_id, :permission_reconciliation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reconciliation_restore, :tenantId, :role_admin_id, :permission_reconciliation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_read, :tenantId, :role_admin_id, :permission_payrollrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_create, :tenantId, :role_admin_id, :permission_payrollrun_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_update, :tenantId, :role_admin_id, :permission_payrollrun_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_soft_delete, :tenantId, :role_admin_id, :permission_payrollrun_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_restore, :tenantId, :role_admin_id, :permission_payrollrun_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_approve, :tenantId, :role_admin_id, :permission_payrollrun_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_reject, :tenantId, :role_admin_id, :permission_payrollrun_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollitem_read, :tenantId, :role_admin_id, :permission_payrollitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollitem_create, :tenantId, :role_admin_id, :permission_payrollitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollitem_update, :tenantId, :role_admin_id, :permission_payrollitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollitem_soft_delete, :tenantId, :role_admin_id, :permission_payrollitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollitem_restore, :tenantId, :role_admin_id, :permission_payrollitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolladjustment_read, :tenantId, :role_admin_id, :permission_payrolladjustment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolladjustment_create, :tenantId, :role_admin_id, :permission_payrolladjustment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolladjustment_update, :tenantId, :role_admin_id, :permission_payrolladjustment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolladjustment_soft_delete, :tenantId, :role_admin_id, :permission_payrolladjustment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolladjustment_restore, :tenantId, :role_admin_id, :permission_payrolladjustment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollpayment_read, :tenantId, :role_admin_id, :permission_payrollpayment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollpayment_create, :tenantId, :role_admin_id, :permission_payrollpayment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollpayment_update, :tenantId, :role_admin_id, :permission_payrollpayment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollpayment_soft_delete, :tenantId, :role_admin_id, :permission_payrollpayment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollpayment_restore, :tenantId, :role_admin_id, :permission_payrollpayment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolltax_read, :tenantId, :role_admin_id, :permission_payrolltax_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolltax_create, :tenantId, :role_admin_id, :permission_payrolltax_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolltax_update, :tenantId, :role_admin_id, :permission_payrolltax_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolltax_soft_delete, :tenantId, :role_admin_id, :permission_payrolltax_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrolltax_restore, :tenantId, :role_admin_id, :permission_payrolltax_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicepayment_read, :tenantId, :role_admin_id, :permission_invoicepayment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicepayment_create, :tenantId, :role_admin_id, :permission_invoicepayment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicepayment_update, :tenantId, :role_admin_id, :permission_invoicepayment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicepayment_soft_delete, :tenantId, :role_admin_id, :permission_invoicepayment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_invoicepayment_restore, :tenantId, :role_admin_id, :permission_invoicepayment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentapplication_read, :tenantId, :role_admin_id, :permission_paymentapplication_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentapplication_create, :tenantId, :role_admin_id, :permission_paymentapplication_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentapplication_update, :tenantId, :role_admin_id, :permission_paymentapplication_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentapplication_soft_delete, :tenantId, :role_admin_id, :permission_paymentapplication_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentapplication_restore, :tenantId, :role_admin_id, :permission_paymentapplication_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_read, :tenantId, :role_admin_id, :permission_paymentgateway_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_create, :tenantId, :role_admin_id, :permission_paymentgateway_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_update, :tenantId, :role_admin_id, :permission_paymentgateway_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_soft_delete, :tenantId, :role_admin_id, :permission_paymentgateway_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_restore, :tenantId, :role_admin_id, :permission_paymentgateway_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_activate, :tenantId, :role_admin_id, :permission_paymentgateway_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentgateway_deactivate, :tenantId, :role_admin_id, :permission_paymentgateway_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethod_read, :tenantId, :role_admin_id, :permission_paymentmethod_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethod_create, :tenantId, :role_admin_id, :permission_paymentmethod_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethod_update, :tenantId, :role_admin_id, :permission_paymentmethod_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethod_soft_delete, :tenantId, :role_admin_id, :permission_paymentmethod_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethod_restore, :tenantId, :role_admin_id, :permission_paymentmethod_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethodtoken_read, :tenantId, :role_admin_id, :permission_paymentmethodtoken_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethodtoken_create, :tenantId, :role_admin_id, :permission_paymentmethodtoken_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethodtoken_update, :tenantId, :role_admin_id, :permission_paymentmethodtoken_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethodtoken_soft_delete, :tenantId, :role_admin_id, :permission_paymentmethodtoken_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentmethodtoken_restore, :tenantId, :role_admin_id, :permission_paymentmethodtoken_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentterm_read, :tenantId, :role_admin_id, :permission_paymentterm_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentterm_create, :tenantId, :role_admin_id, :permission_paymentterm_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentterm_update, :tenantId, :role_admin_id, :permission_paymentterm_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentterm_soft_delete, :tenantId, :role_admin_id, :permission_paymentterm_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paymentterm_restore, :tenantId, :role_admin_id, :permission_paymentterm_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_read, :tenantId, :role_admin_id, :permission_fraudpolicy_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_create, :tenantId, :role_admin_id, :permission_fraudpolicy_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_update, :tenantId, :role_admin_id, :permission_fraudpolicy_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_soft_delete, :tenantId, :role_admin_id, :permission_fraudpolicy_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_restore, :tenantId, :role_admin_id, :permission_fraudpolicy_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_activate, :tenantId, :role_admin_id, :permission_fraudpolicy_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicy_deactivate, :tenantId, :role_admin_id, :permission_fraudpolicy_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyrule_read, :tenantId, :role_admin_id, :permission_fraudpolicyrule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyrule_create, :tenantId, :role_admin_id, :permission_fraudpolicyrule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyrule_update, :tenantId, :role_admin_id, :permission_fraudpolicyrule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyrule_soft_delete, :tenantId, :role_admin_id, :permission_fraudpolicyrule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyrule_restore, :tenantId, :role_admin_id, :permission_fraudpolicyrule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyscope_read, :tenantId, :role_admin_id, :permission_fraudpolicyscope_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyscope_create, :tenantId, :role_admin_id, :permission_fraudpolicyscope_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyscope_update, :tenantId, :role_admin_id, :permission_fraudpolicyscope_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyscope_soft_delete, :tenantId, :role_admin_id, :permission_fraudpolicyscope_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fraudpolicyscope_restore, :tenantId, :role_admin_id, :permission_fraudpolicyscope_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_currencyrate_read, :tenantId, :role_admin_id, :permission_currencyrate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_currencyrate_create, :tenantId, :role_admin_id, :permission_currencyrate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_currencyrate_update, :tenantId, :role_admin_id, :permission_currencyrate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastline_read, :tenantId, :role_admin_id, :permission_forecastline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastline_create, :tenantId, :role_admin_id, :permission_forecastline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastline_update, :tenantId, :role_admin_id, :permission_forecastline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastline_soft_delete, :tenantId, :role_admin_id, :permission_forecastline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastline_restore, :tenantId, :role_admin_id, :permission_forecastline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastsnapshot_read, :tenantId, :role_admin_id, :permission_forecastsnapshot_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastsnapshot_create, :tenantId, :role_admin_id, :permission_forecastsnapshot_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_forecastsnapshot_export, :tenantId, :role_admin_id, :permission_forecastsnapshot_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargeback_read, :tenantId, :role_admin_id, :permission_chargeback_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargeback_create, :tenantId, :role_admin_id, :permission_chargeback_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargeback_update, :tenantId, :role_admin_id, :permission_chargeback_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargeback_soft_delete, :tenantId, :role_admin_id, :permission_chargeback_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargeback_restore, :tenantId, :role_admin_id, :permission_chargeback_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargebackevidence_read, :tenantId, :role_admin_id, :permission_chargebackevidence_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargebackevidence_create, :tenantId, :role_admin_id, :permission_chargebackevidence_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargebackevidence_update, :tenantId, :role_admin_id, :permission_chargebackevidence_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargebackevidence_soft_delete, :tenantId, :role_admin_id, :permission_chargebackevidence_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_chargebackevidence_restore, :tenantId, :role_admin_id, :permission_chargebackevidence_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_refund_read, :tenantId, :role_admin_id, :permission_refund_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_refund_create, :tenantId, :role_admin_id, :permission_refund_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_refund_update, :tenantId, :role_admin_id, :permission_refund_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_refund_soft_delete, :tenantId, :role_admin_id, :permission_refund_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_refund_restore, :tenantId, :role_admin_id, :permission_refund_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payout_read, :tenantId, :role_admin_id, :permission_payout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payout_create, :tenantId, :role_admin_id, :permission_payout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payout_update, :tenantId, :role_admin_id, :permission_payout_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payout_soft_delete, :tenantId, :role_admin_id, :permission_payout_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payout_restore, :tenantId, :role_admin_id, :permission_payout_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_read, :tenantId, :role_admin_id, :permission_expensereport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_create, :tenantId, :role_admin_id, :permission_expensereport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_update, :tenantId, :role_admin_id, :permission_expensereport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_soft_delete, :tenantId, :role_admin_id, :permission_expensereport_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_restore, :tenantId, :role_admin_id, :permission_expensereport_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_submit, :tenantId, :role_admin_id, :permission_expensereport_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_approve, :tenantId, :role_admin_id, :permission_expensereport_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereport_reject, :tenantId, :role_admin_id, :permission_expensereport_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_read, :tenantId, :role_admin_id, :permission_reimbursement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_create, :tenantId, :role_admin_id, :permission_reimbursement_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_update, :tenantId, :role_admin_id, :permission_reimbursement_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_soft_delete, :tenantId, :role_admin_id, :permission_reimbursement_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_restore, :tenantId, :role_admin_id, :permission_reimbursement_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reimbursement_process, :tenantId, :role_admin_id, :permission_reimbursement_process_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dunningnotice_read, :tenantId, :role_admin_id, :permission_dunningnotice_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dunningnotice_create, :tenantId, :role_admin_id, :permission_dunningnotice_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dunningnotice_update, :tenantId, :role_admin_id, :permission_dunningnotice_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dunningnotice_send, :tenantId, :role_admin_id, :permission_dunningnotice_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminder_read, :tenantId, :role_admin_id, :permission_returnreminder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminder_create, :tenantId, :role_admin_id, :permission_returnreminder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminder_update, :tenantId, :role_admin_id, :permission_returnreminder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminder_send, :tenantId, :role_admin_id, :permission_returnreminder_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminderattempt_read, :tenantId, :role_admin_id, :permission_returnreminderattempt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_returnreminderattempt_create, :tenantId, :role_admin_id, :permission_returnreminderattempt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_read, :tenantId, :role_admin_id, :permission_clockinclockout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_create, :tenantId, :role_admin_id, :permission_clockinclockout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_update, :tenantId, :role_admin_id, :permission_clockinclockout_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_soft_delete, :tenantId, :role_admin_id, :permission_clockinclockout_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_restore, :tenantId, :role_admin_id, :permission_clockinclockout_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_approve, :tenantId, :role_admin_id, :permission_clockinclockout_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_reject, :tenantId, :role_admin_id, :permission_clockinclockout_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_clockinclockout_export, :tenantId, :role_admin_id, :permission_clockinclockout_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_read, :tenantId, :role_admin_id, :permission_schedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_create, :tenantId, :role_admin_id, :permission_schedule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_update, :tenantId, :role_admin_id, :permission_schedule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_soft_delete, :tenantId, :role_admin_id, :permission_schedule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_restore, :tenantId, :role_admin_id, :permission_schedule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_publish, :tenantId, :role_admin_id, :permission_schedule_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_activate, :tenantId, :role_admin_id, :permission_schedule_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_deactivate, :tenantId, :role_admin_id, :permission_schedule_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_read, :tenantId, :role_admin_id, :permission_scheduleexception_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_create, :tenantId, :role_admin_id, :permission_scheduleexception_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_update, :tenantId, :role_admin_id, :permission_scheduleexception_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_soft_delete, :tenantId, :role_admin_id, :permission_scheduleexception_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_restore, :tenantId, :role_admin_id, :permission_scheduleexception_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_read, :tenantId, :role_admin_id, :permission_leave_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_create, :tenantId, :role_admin_id, :permission_leave_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_update, :tenantId, :role_admin_id, :permission_leave_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_soft_delete, :tenantId, :role_admin_id, :permission_leave_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_restore, :tenantId, :role_admin_id, :permission_leave_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_approve, :tenantId, :role_admin_id, :permission_leave_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leave_reject, :tenantId, :role_admin_id, :permission_leave_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_read, :tenantId, :role_admin_id, :permission_timesheet_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_create, :tenantId, :role_admin_id, :permission_timesheet_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_update, :tenantId, :role_admin_id, :permission_timesheet_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_soft_delete, :tenantId, :role_admin_id, :permission_timesheet_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_restore, :tenantId, :role_admin_id, :permission_timesheet_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_submit, :tenantId, :role_admin_id, :permission_timesheet_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_approve, :tenantId, :role_admin_id, :permission_timesheet_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheet_reject, :tenantId, :role_admin_id, :permission_timesheet_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetentry_read, :tenantId, :role_admin_id, :permission_timesheetentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetentry_create, :tenantId, :role_admin_id, :permission_timesheetentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetentry_update, :tenantId, :role_admin_id, :permission_timesheetentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetentry_soft_delete, :tenantId, :role_admin_id, :permission_timesheetentry_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetentry_restore, :tenantId, :role_admin_id, :permission_timesheetentry_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetapproval_read, :tenantId, :role_admin_id, :permission_timesheetapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetapproval_create, :tenantId, :role_admin_id, :permission_timesheetapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetapproval_approve, :tenantId, :role_admin_id, :permission_timesheetapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_timesheetapproval_reject, :tenantId, :role_admin_id, :permission_timesheetapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_read, :tenantId, :role_admin_id, :permission_leaveofabsence_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_create, :tenantId, :role_admin_id, :permission_leaveofabsence_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_update, :tenantId, :role_admin_id, :permission_leaveofabsence_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_soft_delete, :tenantId, :role_admin_id, :permission_leaveofabsence_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_restore, :tenantId, :role_admin_id, :permission_leaveofabsence_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_approve, :tenantId, :role_admin_id, :permission_leaveofabsence_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_leaveofabsence_reject, :tenantId, :role_admin_id, :permission_leaveofabsence_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_absencebalance_read, :tenantId, :role_admin_id, :permission_absencebalance_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_absencebalance_create, :tenantId, :role_admin_id, :permission_absencebalance_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_absencebalance_update, :tenantId, :role_admin_id, :permission_absencebalance_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_absencebalance_soft_delete, :tenantId, :role_admin_id, :permission_absencebalance_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_absencebalance_restore, :tenantId, :role_admin_id, :permission_absencebalance_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_holidaycalendar_read, :tenantId, :role_admin_id, :permission_holidaycalendar_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_holidaycalendar_create, :tenantId, :role_admin_id, :permission_holidaycalendar_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_holidaycalendar_update, :tenantId, :role_admin_id, :permission_holidaycalendar_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_holidaycalendar_soft_delete, :tenantId, :role_admin_id, :permission_holidaycalendar_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_holidaycalendar_restore, :tenantId, :role_admin_id, :permission_holidaycalendar_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_read, :tenantId, :role_admin_id, :permission_overtimerule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_create, :tenantId, :role_admin_id, :permission_overtimerule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_update, :tenantId, :role_admin_id, :permission_overtimerule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_soft_delete, :tenantId, :role_admin_id, :permission_overtimerule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_restore, :tenantId, :role_admin_id, :permission_overtimerule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_activate, :tenantId, :role_admin_id, :permission_overtimerule_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_overtimerule_deactivate, :tenantId, :role_admin_id, :permission_overtimerule_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paycalendar_read, :tenantId, :role_admin_id, :permission_paycalendar_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paycalendar_create, :tenantId, :role_admin_id, :permission_paycalendar_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paycalendar_update, :tenantId, :role_admin_id, :permission_paycalendar_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paycalendar_soft_delete, :tenantId, :role_admin_id, :permission_paycalendar_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paycalendar_restore, :tenantId, :role_admin_id, :permission_paycalendar_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroup_read, :tenantId, :role_admin_id, :permission_paygroup_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroup_create, :tenantId, :role_admin_id, :permission_paygroup_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroup_update, :tenantId, :role_admin_id, :permission_paygroup_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroup_soft_delete, :tenantId, :role_admin_id, :permission_paygroup_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroup_restore, :tenantId, :role_admin_id, :permission_paygroup_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroupassignment_read, :tenantId, :role_admin_id, :permission_paygroupassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroupassignment_create, :tenantId, :role_admin_id, :permission_paygroupassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroupassignment_update, :tenantId, :role_admin_id, :permission_paygroupassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroupassignment_assign, :tenantId, :role_admin_id, :permission_paygroupassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paygroupassignment_unassign, :tenantId, :role_admin_id, :permission_paygroupassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_read, :tenantId, :role_admin_id, :permission_inventoryitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_create, :tenantId, :role_admin_id, :permission_inventoryitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_update, :tenantId, :role_admin_id, :permission_inventoryitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_soft_delete, :tenantId, :role_admin_id, :permission_inventoryitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_restore, :tenantId, :role_admin_id, :permission_inventoryitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_assign, :tenantId, :role_admin_id, :permission_inventoryitem_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_unassign, :tenantId, :role_admin_id, :permission_inventoryitem_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_transfer, :tenantId, :role_admin_id, :permission_inventoryitem_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_activate, :tenantId, :role_admin_id, :permission_inventoryitem_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_deactivate, :tenantId, :role_admin_id, :permission_inventoryitem_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorytransaction_read, :tenantId, :role_admin_id, :permission_inventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorytransaction_create, :tenantId, :role_admin_id, :permission_inventorytransaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorytransaction_update, :tenantId, :role_admin_id, :permission_inventorytransaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorytransaction_soft_delete, :tenantId, :role_admin_id, :permission_inventorytransaction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorytransaction_restore, :tenantId, :role_admin_id, :permission_inventorytransaction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_read, :tenantId, :role_admin_id, :permission_inventoryadjustment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_create, :tenantId, :role_admin_id, :permission_inventoryadjustment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_update, :tenantId, :role_admin_id, :permission_inventoryadjustment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_soft_delete, :tenantId, :role_admin_id, :permission_inventoryadjustment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_restore, :tenantId, :role_admin_id, :permission_inventoryadjustment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_approve, :tenantId, :role_admin_id, :permission_inventoryadjustment_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryadjustment_reject, :tenantId, :role_admin_id, :permission_inventoryadjustment_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycount_read, :tenantId, :role_admin_id, :permission_inventorycount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycount_create, :tenantId, :role_admin_id, :permission_inventorycount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycount_update, :tenantId, :role_admin_id, :permission_inventorycount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycount_soft_delete, :tenantId, :role_admin_id, :permission_inventorycount_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycount_restore, :tenantId, :role_admin_id, :permission_inventorycount_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycountline_read, :tenantId, :role_admin_id, :permission_inventorycountline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycountline_create, :tenantId, :role_admin_id, :permission_inventorycountline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycountline_update, :tenantId, :role_admin_id, :permission_inventorycountline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycountline_soft_delete, :tenantId, :role_admin_id, :permission_inventorycountline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorycountline_restore, :tenantId, :role_admin_id, :permission_inventorycountline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_read, :tenantId, :role_admin_id, :permission_asset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_create, :tenantId, :role_admin_id, :permission_asset_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_update, :tenantId, :role_admin_id, :permission_asset_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_soft_delete, :tenantId, :role_admin_id, :permission_asset_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_restore, :tenantId, :role_admin_id, :permission_asset_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_assign, :tenantId, :role_admin_id, :permission_asset_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_unassign, :tenantId, :role_admin_id, :permission_asset_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_transfer, :tenantId, :role_admin_id, :permission_asset_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_activate, :tenantId, :role_admin_id, :permission_asset_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_deactivate, :tenantId, :role_admin_id, :permission_asset_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_read, :tenantId, :role_admin_id, :permission_assetassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_create, :tenantId, :role_admin_id, :permission_assetassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_update, :tenantId, :role_admin_id, :permission_assetassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_soft_delete, :tenantId, :role_admin_id, :permission_assetassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_restore, :tenantId, :role_admin_id, :permission_assetassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_assign, :tenantId, :role_admin_id, :permission_assetassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_unassign, :tenantId, :role_admin_id, :permission_assetassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetassignment_transfer, :tenantId, :role_admin_id, :permission_assetassignment_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmaintenance_read, :tenantId, :role_admin_id, :permission_assetmaintenance_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmaintenance_create, :tenantId, :role_admin_id, :permission_assetmaintenance_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmaintenance_update, :tenantId, :role_admin_id, :permission_assetmaintenance_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmaintenance_soft_delete, :tenantId, :role_admin_id, :permission_assetmaintenance_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmaintenance_restore, :tenantId, :role_admin_id, :permission_assetmaintenance_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdepreciation_read, :tenantId, :role_admin_id, :permission_assetdepreciation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdepreciation_create, :tenantId, :role_admin_id, :permission_assetdepreciation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdepreciation_update, :tenantId, :role_admin_id, :permission_assetdepreciation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdepreciation_soft_delete, :tenantId, :role_admin_id, :permission_assetdepreciation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdepreciation_restore, :tenantId, :role_admin_id, :permission_assetdepreciation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdocument_read, :tenantId, :role_admin_id, :permission_assetdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdocument_create, :tenantId, :role_admin_id, :permission_assetdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdocument_update, :tenantId, :role_admin_id, :permission_assetdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdocument_soft_delete, :tenantId, :role_admin_id, :permission_assetdocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetdocument_restore, :tenantId, :role_admin_id, :permission_assetdocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmeterreading_read, :tenantId, :role_admin_id, :permission_assetmeterreading_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmeterreading_create, :tenantId, :role_admin_id, :permission_assetmeterreading_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmeterreading_update, :tenantId, :role_admin_id, :permission_assetmeterreading_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmeterreading_soft_delete, :tenantId, :role_admin_id, :permission_assetmeterreading_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_assetmeterreading_restore, :tenantId, :role_admin_id, :permission_assetmeterreading_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorylocation_read, :tenantId, :role_admin_id, :permission_inventorylocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorylocation_create, :tenantId, :role_admin_id, :permission_inventorylocation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorylocation_update, :tenantId, :role_admin_id, :permission_inventorylocation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorylocation_soft_delete, :tenantId, :role_admin_id, :permission_inventorylocation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorylocation_restore, :tenantId, :role_admin_id, :permission_inventorylocation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorybin_read, :tenantId, :role_admin_id, :permission_inventorybin_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorybin_create, :tenantId, :role_admin_id, :permission_inventorybin_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorybin_update, :tenantId, :role_admin_id, :permission_inventorybin_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorybin_soft_delete, :tenantId, :role_admin_id, :permission_inventorybin_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventorybin_restore, :tenantId, :role_admin_id, :permission_inventorybin_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryreservation_read, :tenantId, :role_admin_id, :permission_inventoryreservation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryreservation_create, :tenantId, :role_admin_id, :permission_inventoryreservation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryreservation_update, :tenantId, :role_admin_id, :permission_inventoryreservation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryreservation_soft_delete, :tenantId, :role_admin_id, :permission_inventoryreservation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryreservation_restore, :tenantId, :role_admin_id, :permission_inventoryreservation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryattachment_read, :tenantId, :role_admin_id, :permission_inventoryattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryattachment_create, :tenantId, :role_admin_id, :permission_inventoryattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryattachment_update, :tenantId, :role_admin_id, :permission_inventoryattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryattachment_soft_delete, :tenantId, :role_admin_id, :permission_inventoryattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryattachment_restore, :tenantId, :role_admin_id, :permission_inventoryattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceipt_read, :tenantId, :role_admin_id, :permission_goodsreceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceipt_create, :tenantId, :role_admin_id, :permission_goodsreceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceipt_update, :tenantId, :role_admin_id, :permission_goodsreceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceipt_soft_delete, :tenantId, :role_admin_id, :permission_goodsreceipt_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceipt_restore, :tenantId, :role_admin_id, :permission_goodsreceipt_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceiptline_read, :tenantId, :role_admin_id, :permission_goodsreceiptline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceiptline_create, :tenantId, :role_admin_id, :permission_goodsreceiptline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceiptline_update, :tenantId, :role_admin_id, :permission_goodsreceiptline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceiptline_soft_delete, :tenantId, :role_admin_id, :permission_goodsreceiptline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_goodsreceiptline_restore, :tenantId, :role_admin_id, :permission_goodsreceiptline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponseline_read, :tenantId, :role_admin_id, :permission_rfqresponseline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponseline_create, :tenantId, :role_admin_id, :permission_rfqresponseline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponseline_update, :tenantId, :role_admin_id, :permission_rfqresponseline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponseline_soft_delete, :tenantId, :role_admin_id, :permission_rfqresponseline_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_rfqresponseline_restore, :tenantId, :role_admin_id, :permission_rfqresponseline_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reasoncode_read, :tenantId, :role_admin_id, :permission_reasoncode_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reasoncode_create, :tenantId, :role_admin_id, :permission_reasoncode_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reasoncode_update, :tenantId, :role_admin_id, :permission_reasoncode_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reasoncode_soft_delete, :tenantId, :role_admin_id, :permission_reasoncode_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reasoncode_restore, :tenantId, :role_admin_id, :permission_reasoncode_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_read, :tenantId, :role_admin_id, :permission_resourceallocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_create, :tenantId, :role_admin_id, :permission_resourceallocation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_update, :tenantId, :role_admin_id, :permission_resourceallocation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_soft_delete, :tenantId, :role_admin_id, :permission_resourceallocation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_restore, :tenantId, :role_admin_id, :permission_resourceallocation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_allocate, :tenantId, :role_admin_id, :permission_resourceallocation_allocate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_resourceallocation_deallocate, :tenantId, :role_admin_id, :permission_resourceallocation_deallocate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_read, :tenantId, :role_admin_id, :permission_channel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_create, :tenantId, :role_admin_id, :permission_channel_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_update, :tenantId, :role_admin_id, :permission_channel_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_soft_delete, :tenantId, :role_admin_id, :permission_channel_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_restore, :tenantId, :role_admin_id, :permission_channel_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_archive, :tenantId, :role_admin_id, :permission_channel_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_activate, :tenantId, :role_admin_id, :permission_channel_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_deactivate, :tenantId, :role_admin_id, :permission_channel_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_read, :tenantId, :role_admin_id, :permission_channelmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_create, :tenantId, :role_admin_id, :permission_channelmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_update, :tenantId, :role_admin_id, :permission_channelmember_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_soft_delete, :tenantId, :role_admin_id, :permission_channelmember_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_restore, :tenantId, :role_admin_id, :permission_channelmember_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_assign, :tenantId, :role_admin_id, :permission_channelmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channelmember_unassign, :tenantId, :role_admin_id, :permission_channelmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_read, :tenantId, :role_admin_id, :permission_directchat_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_create, :tenantId, :role_admin_id, :permission_directchat_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_update, :tenantId, :role_admin_id, :permission_directchat_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_soft_delete, :tenantId, :role_admin_id, :permission_directchat_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_restore, :tenantId, :role_admin_id, :permission_directchat_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_archive, :tenantId, :role_admin_id, :permission_directchat_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessage_read, :tenantId, :role_admin_id, :permission_directmessage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessage_create, :tenantId, :role_admin_id, :permission_directmessage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessage_update, :tenantId, :role_admin_id, :permission_directmessage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessage_soft_delete, :tenantId, :role_admin_id, :permission_directmessage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessage_restore, :tenantId, :role_admin_id, :permission_directmessage_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessageread_read, :tenantId, :role_admin_id, :permission_directmessageread_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessageread_create, :tenantId, :role_admin_id, :permission_directmessageread_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directmessageread_update, :tenantId, :role_admin_id, :permission_directmessageread_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notification_read, :tenantId, :role_admin_id, :permission_notification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notification_create, :tenantId, :role_admin_id, :permission_notification_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notification_update, :tenantId, :role_admin_id, :permission_notification_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notification_soft_delete, :tenantId, :role_admin_id, :permission_notification_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notification_restore, :tenantId, :role_admin_id, :permission_notification_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_read, :tenantId, :role_admin_id, :permission_inappannouncement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_create, :tenantId, :role_admin_id, :permission_inappannouncement_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_update, :tenantId, :role_admin_id, :permission_inappannouncement_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_soft_delete, :tenantId, :role_admin_id, :permission_inappannouncement_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_restore, :tenantId, :role_admin_id, :permission_inappannouncement_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inappannouncement_publish, :tenantId, :role_admin_id, :permission_inappannouncement_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_message_read, :tenantId, :role_admin_id, :permission_message_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_message_create, :tenantId, :role_admin_id, :permission_message_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_message_update, :tenantId, :role_admin_id, :permission_message_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_message_soft_delete, :tenantId, :role_admin_id, :permission_message_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_message_restore, :tenantId, :role_admin_id, :permission_message_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageattachment_read, :tenantId, :role_admin_id, :permission_messageattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageattachment_create, :tenantId, :role_admin_id, :permission_messageattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageattachment_update, :tenantId, :role_admin_id, :permission_messageattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageattachment_soft_delete, :tenantId, :role_admin_id, :permission_messageattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageattachment_restore, :tenantId, :role_admin_id, :permission_messageattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageread_read, :tenantId, :role_admin_id, :permission_messageread_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageread_create, :tenantId, :role_admin_id, :permission_messageread_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_messageread_update, :tenantId, :role_admin_id, :permission_messageread_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationpreference_read, :tenantId, :role_admin_id, :permission_notificationpreference_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationpreference_create, :tenantId, :role_admin_id, :permission_notificationpreference_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationpreference_update, :tenantId, :role_admin_id, :permission_notificationpreference_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationpreference_soft_delete, :tenantId, :role_admin_id, :permission_notificationpreference_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationpreference_restore, :tenantId, :role_admin_id, :permission_notificationpreference_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationtemplate_read, :tenantId, :role_admin_id, :permission_notificationtemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationtemplate_create, :tenantId, :role_admin_id, :permission_notificationtemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationtemplate_update, :tenantId, :role_admin_id, :permission_notificationtemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationtemplate_soft_delete, :tenantId, :role_admin_id, :permission_notificationtemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_notificationtemplate_restore, :tenantId, :role_admin_id, :permission_notificationtemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_emailtemplate_read, :tenantId, :role_admin_id, :permission_emailtemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_emailtemplate_create, :tenantId, :role_admin_id, :permission_emailtemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_emailtemplate_update, :tenantId, :role_admin_id, :permission_emailtemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_emailtemplate_soft_delete, :tenantId, :role_admin_id, :permission_emailtemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_emailtemplate_restore, :tenantId, :role_admin_id, :permission_emailtemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_read, :tenantId, :role_admin_id, :permission_fileobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_create, :tenantId, :role_admin_id, :permission_fileobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_update, :tenantId, :role_admin_id, :permission_fileobject_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_soft_delete, :tenantId, :role_admin_id, :permission_fileobject_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_restore, :tenantId, :role_admin_id, :permission_fileobject_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_read, :tenantId, :role_admin_id, :permission_attachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_create, :tenantId, :role_admin_id, :permission_attachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_update, :tenantId, :role_admin_id, :permission_attachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_soft_delete, :tenantId, :role_admin_id, :permission_attachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_restore, :tenantId, :role_admin_id, :permission_attachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_approve, :tenantId, :role_admin_id, :permission_attachment_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_reject, :tenantId, :role_admin_id, :permission_attachment_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachmentlink_read, :tenantId, :role_admin_id, :permission_attachmentlink_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachmentlink_create, :tenantId, :role_admin_id, :permission_attachmentlink_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachmentlink_update, :tenantId, :role_admin_id, :permission_attachmentlink_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachmentlink_soft_delete, :tenantId, :role_admin_id, :permission_attachmentlink_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachmentlink_restore, :tenantId, :role_admin_id, :permission_attachmentlink_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_read, :tenantId, :role_admin_id, :permission_esignatureenvelope_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_create, :tenantId, :role_admin_id, :permission_esignatureenvelope_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_update, :tenantId, :role_admin_id, :permission_esignatureenvelope_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_soft_delete, :tenantId, :role_admin_id, :permission_esignatureenvelope_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_restore, :tenantId, :role_admin_id, :permission_esignatureenvelope_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignatureenvelope_send, :tenantId, :role_admin_id, :permission_esignatureenvelope_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignaturerecipient_read, :tenantId, :role_admin_id, :permission_esignaturerecipient_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignaturerecipient_create, :tenantId, :role_admin_id, :permission_esignaturerecipient_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignaturerecipient_update, :tenantId, :role_admin_id, :permission_esignaturerecipient_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignaturerecipient_soft_delete, :tenantId, :role_admin_id, :permission_esignaturerecipient_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_esignaturerecipient_restore, :tenantId, :role_admin_id, :permission_esignaturerecipient_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_documentgroup_read, :tenantId, :role_admin_id, :permission_documentgroup_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_documentgroup_create, :tenantId, :role_admin_id, :permission_documentgroup_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_documentgroup_update, :tenantId, :role_admin_id, :permission_documentgroup_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_documentgroup_soft_delete, :tenantId, :role_admin_id, :permission_documentgroup_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_documentgroup_restore, :tenantId, :role_admin_id, :permission_documentgroup_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_read, :tenantId, :role_admin_id, :permission_contracttemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_create, :tenantId, :role_admin_id, :permission_contracttemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_update, :tenantId, :role_admin_id, :permission_contracttemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_soft_delete, :tenantId, :role_admin_id, :permission_contracttemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_restore, :tenantId, :role_admin_id, :permission_contracttemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_read, :tenantId, :role_admin_id, :permission_termstemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_create, :tenantId, :role_admin_id, :permission_termstemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_update, :tenantId, :role_admin_id, :permission_termstemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_soft_delete, :tenantId, :role_admin_id, :permission_termstemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_restore, :tenantId, :role_admin_id, :permission_termstemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_read, :tenantId, :role_admin_id, :permission_vendor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_create, :tenantId, :role_admin_id, :permission_vendor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_update, :tenantId, :role_admin_id, :permission_vendor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_soft_delete, :tenantId, :role_admin_id, :permission_vendor_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_restore, :tenantId, :role_admin_id, :permission_vendor_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_activate, :tenantId, :role_admin_id, :permission_vendor_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_deactivate, :tenantId, :role_admin_id, :permission_vendor_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendorcontact_read, :tenantId, :role_admin_id, :permission_vendorcontact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendorcontact_create, :tenantId, :role_admin_id, :permission_vendorcontact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendorcontact_update, :tenantId, :role_admin_id, :permission_vendorcontact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendorcontact_soft_delete, :tenantId, :role_admin_id, :permission_vendorcontact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendorcontact_restore, :tenantId, :role_admin_id, :permission_vendorcontact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendordocument_read, :tenantId, :role_admin_id, :permission_vendordocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendordocument_create, :tenantId, :role_admin_id, :permission_vendordocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendordocument_update, :tenantId, :role_admin_id, :permission_vendordocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendordocument_soft_delete, :tenantId, :role_admin_id, :permission_vendordocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendordocument_restore, :tenantId, :role_admin_id, :permission_vendordocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_read, :tenantId, :role_admin_id, :permission_contract_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_create, :tenantId, :role_admin_id, :permission_contract_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_update, :tenantId, :role_admin_id, :permission_contract_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_soft_delete, :tenantId, :role_admin_id, :permission_contract_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_restore, :tenantId, :role_admin_id, :permission_contract_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_send, :tenantId, :role_admin_id, :permission_contract_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_approve, :tenantId, :role_admin_id, :permission_contract_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contract_reject, :tenantId, :role_admin_id, :permission_contract_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_person_read, :tenantId, :role_admin_id, :permission_person_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_person_create, :tenantId, :role_admin_id, :permission_person_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_person_update, :tenantId, :role_admin_id, :permission_person_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_person_soft_delete, :tenantId, :role_admin_id, :permission_person_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_person_restore, :tenantId, :role_admin_id, :permission_person_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personname_read, :tenantId, :role_admin_id, :permission_personname_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personname_create, :tenantId, :role_admin_id, :permission_personname_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personname_update, :tenantId, :role_admin_id, :permission_personname_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personname_soft_delete, :tenantId, :role_admin_id, :permission_personname_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personname_restore, :tenantId, :role_admin_id, :permission_personname_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personaddress_read, :tenantId, :role_admin_id, :permission_personaddress_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personaddress_create, :tenantId, :role_admin_id, :permission_personaddress_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personaddress_update, :tenantId, :role_admin_id, :permission_personaddress_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personaddress_soft_delete, :tenantId, :role_admin_id, :permission_personaddress_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personaddress_restore, :tenantId, :role_admin_id, :permission_personaddress_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personcontactmethod_read, :tenantId, :role_admin_id, :permission_personcontactmethod_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personcontactmethod_create, :tenantId, :role_admin_id, :permission_personcontactmethod_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personcontactmethod_update, :tenantId, :role_admin_id, :permission_personcontactmethod_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personcontactmethod_soft_delete, :tenantId, :role_admin_id, :permission_personcontactmethod_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_personcontactmethod_restore, :tenantId, :role_admin_id, :permission_personcontactmethod_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_persondocument_read, :tenantId, :role_admin_id, :permission_persondocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_persondocument_create, :tenantId, :role_admin_id, :permission_persondocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_persondocument_update, :tenantId, :role_admin_id, :permission_persondocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_persondocument_soft_delete, :tenantId, :role_admin_id, :permission_persondocument_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_persondocument_restore, :tenantId, :role_admin_id, :permission_persondocument_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_read, :tenantId, :role_admin_id, :permission_aiaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_create, :tenantId, :role_admin_id, :permission_aiaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_update, :tenantId, :role_admin_id, :permission_aiaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_soft_delete, :tenantId, :role_admin_id, :permission_aiaction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_restore, :tenantId, :role_admin_id, :permission_aiaction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_activate, :tenantId, :role_admin_id, :permission_aiaction_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiaction_deactivate, :tenantId, :role_admin_id, :permission_aiaction_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiactionrun_read, :tenantId, :role_admin_id, :permission_aiactionrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiactionrun_create, :tenantId, :role_admin_id, :permission_aiactionrun_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiactionrun_update, :tenantId, :role_admin_id, :permission_aiactionrun_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiactionrun_soft_delete, :tenantId, :role_admin_id, :permission_aiactionrun_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiactionrun_restore, :tenantId, :role_admin_id, :permission_aiactionrun_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijob_read, :tenantId, :role_admin_id, :permission_aijob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijob_create, :tenantId, :role_admin_id, :permission_aijob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijob_update, :tenantId, :role_admin_id, :permission_aijob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijob_soft_delete, :tenantId, :role_admin_id, :permission_aijob_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijob_restore, :tenantId, :role_admin_id, :permission_aijob_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijobartifact_read, :tenantId, :role_admin_id, :permission_aijobartifact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijobartifact_create, :tenantId, :role_admin_id, :permission_aijobartifact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijobartifact_update, :tenantId, :role_admin_id, :permission_aijobartifact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijobartifact_soft_delete, :tenantId, :role_admin_id, :permission_aijobartifact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aijobartifact_restore, :tenantId, :role_admin_id, :permission_aijobartifact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsight_read, :tenantId, :role_admin_id, :permission_aiinsight_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsight_create, :tenantId, :role_admin_id, :permission_aiinsight_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsight_update, :tenantId, :role_admin_id, :permission_aiinsight_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsight_soft_delete, :tenantId, :role_admin_id, :permission_aiinsight_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsight_restore, :tenantId, :role_admin_id, :permission_aiinsight_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsightfeedback_read, :tenantId, :role_admin_id, :permission_aiinsightfeedback_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsightfeedback_create, :tenantId, :role_admin_id, :permission_aiinsightfeedback_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsightfeedback_update, :tenantId, :role_admin_id, :permission_aiinsightfeedback_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsightfeedback_soft_delete, :tenantId, :role_admin_id, :permission_aiinsightfeedback_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiinsightfeedback_restore, :tenantId, :role_admin_id, :permission_aiinsightfeedback_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_read, :tenantId, :role_admin_id, :permission_aiplaybook_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_create, :tenantId, :role_admin_id, :permission_aiplaybook_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_update, :tenantId, :role_admin_id, :permission_aiplaybook_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_soft_delete, :tenantId, :role_admin_id, :permission_aiplaybook_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_restore, :tenantId, :role_admin_id, :permission_aiplaybook_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_activate, :tenantId, :role_admin_id, :permission_aiplaybook_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybook_deactivate, :tenantId, :role_admin_id, :permission_aiplaybook_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybookstep_read, :tenantId, :role_admin_id, :permission_aiplaybookstep_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybookstep_create, :tenantId, :role_admin_id, :permission_aiplaybookstep_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybookstep_update, :tenantId, :role_admin_id, :permission_aiplaybookstep_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybookstep_soft_delete, :tenantId, :role_admin_id, :permission_aiplaybookstep_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiplaybookstep_restore, :tenantId, :role_admin_id, :permission_aiplaybookstep_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiprompttemplate_read, :tenantId, :role_admin_id, :permission_aiprompttemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiprompttemplate_create, :tenantId, :role_admin_id, :permission_aiprompttemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiprompttemplate_update, :tenantId, :role_admin_id, :permission_aiprompttemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiprompttemplate_soft_delete, :tenantId, :role_admin_id, :permission_aiprompttemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiprompttemplate_restore, :tenantId, :role_admin_id, :permission_aiprompttemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_read, :tenantId, :role_admin_id, :permission_aiassistantprofile_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_create, :tenantId, :role_admin_id, :permission_aiassistantprofile_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_update, :tenantId, :role_admin_id, :permission_aiassistantprofile_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_soft_delete, :tenantId, :role_admin_id, :permission_aiassistantprofile_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_restore, :tenantId, :role_admin_id, :permission_aiassistantprofile_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_activate, :tenantId, :role_admin_id, :permission_aiassistantprofile_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiassistantprofile_deactivate, :tenantId, :role_admin_id, :permission_aiassistantprofile_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentindex_read, :tenantId, :role_admin_id, :permission_aidocumentindex_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentindex_create, :tenantId, :role_admin_id, :permission_aidocumentindex_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentindex_update, :tenantId, :role_admin_id, :permission_aidocumentindex_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentindex_soft_delete, :tenantId, :role_admin_id, :permission_aidocumentindex_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentindex_restore, :tenantId, :role_admin_id, :permission_aidocumentindex_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentchunk_read, :tenantId, :role_admin_id, :permission_aidocumentchunk_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentchunk_create, :tenantId, :role_admin_id, :permission_aidocumentchunk_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentchunk_update, :tenantId, :role_admin_id, :permission_aidocumentchunk_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentchunk_soft_delete, :tenantId, :role_admin_id, :permission_aidocumentchunk_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aidocumentchunk_restore, :tenantId, :role_admin_id, :permission_aidocumentchunk_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiembedding_read, :tenantId, :role_admin_id, :permission_aiembedding_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiembedding_create, :tenantId, :role_admin_id, :permission_aiembedding_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiembedding_update, :tenantId, :role_admin_id, :permission_aiembedding_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiembedding_soft_delete, :tenantId, :role_admin_id, :permission_aiembedding_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_aiembedding_restore, :tenantId, :role_admin_id, :permission_aiembedding_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_read, :tenantId, :role_admin_id, :permission_roomscansession_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_list, :tenantId, :role_admin_id, :permission_roomscansession_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_create, :tenantId, :role_admin_id, :permission_roomscansession_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_update, :tenantId, :role_admin_id, :permission_roomscansession_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_soft_delete, :tenantId, :role_admin_id, :permission_roomscansession_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_restore, :tenantId, :role_admin_id, :permission_roomscansession_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_activate, :tenantId, :role_admin_id, :permission_roomscansession_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_deactivate, :tenantId, :role_admin_id, :permission_roomscansession_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscansession_export, :tenantId, :role_admin_id, :permission_roomscansession_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_read, :tenantId, :role_admin_id, :permission_roomscanfile_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_list, :tenantId, :role_admin_id, :permission_roomscanfile_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_create, :tenantId, :role_admin_id, :permission_roomscanfile_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_update, :tenantId, :role_admin_id, :permission_roomscanfile_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_soft_delete, :tenantId, :role_admin_id, :permission_roomscanfile_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_restore, :tenantId, :role_admin_id, :permission_roomscanfile_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomscanfile_export, :tenantId, :role_admin_id, :permission_roomscanfile_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_read, :tenantId, :role_admin_id, :permission_roommodel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_list, :tenantId, :role_admin_id, :permission_roommodel_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_create, :tenantId, :role_admin_id, :permission_roommodel_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_update, :tenantId, :role_admin_id, :permission_roommodel_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_soft_delete, :tenantId, :role_admin_id, :permission_roommodel_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_restore, :tenantId, :role_admin_id, :permission_roommodel_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_publish, :tenantId, :role_admin_id, :permission_roommodel_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_export, :tenantId, :role_admin_id, :permission_roommodel_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommodel_duplicate, :tenantId, :role_admin_id, :permission_roommodel_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_read, :tenantId, :role_admin_id, :permission_roommeasurement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_list, :tenantId, :role_admin_id, :permission_roommeasurement_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_create, :tenantId, :role_admin_id, :permission_roommeasurement_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_update, :tenantId, :role_admin_id, :permission_roommeasurement_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_soft_delete, :tenantId, :role_admin_id, :permission_roommeasurement_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_restore, :tenantId, :role_admin_id, :permission_roommeasurement_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roommeasurement_export, :tenantId, :role_admin_id, :permission_roommeasurement_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_read, :tenantId, :role_admin_id, :permission_roomobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_list, :tenantId, :role_admin_id, :permission_roomobject_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_create, :tenantId, :role_admin_id, :permission_roomobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_update, :tenantId, :role_admin_id, :permission_roomobject_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_soft_delete, :tenantId, :role_admin_id, :permission_roomobject_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_restore, :tenantId, :role_admin_id, :permission_roomobject_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomobject_export, :tenantId, :role_admin_id, :permission_roomobject_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_read, :tenantId, :role_admin_id, :permission_roomsurface_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_list, :tenantId, :role_admin_id, :permission_roomsurface_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_create, :tenantId, :role_admin_id, :permission_roomsurface_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_update, :tenantId, :role_admin_id, :permission_roomsurface_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_soft_delete, :tenantId, :role_admin_id, :permission_roomsurface_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_restore, :tenantId, :role_admin_id, :permission_roomsurface_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomsurface_export, :tenantId, :role_admin_id, :permission_roomsurface_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_read, :tenantId, :role_admin_id, :permission_roomannotation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_list, :tenantId, :role_admin_id, :permission_roomannotation_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_create, :tenantId, :role_admin_id, :permission_roomannotation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_update, :tenantId, :role_admin_id, :permission_roomannotation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_soft_delete, :tenantId, :role_admin_id, :permission_roomannotation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_restore, :tenantId, :role_admin_id, :permission_roomannotation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_publish, :tenantId, :role_admin_id, :permission_roomannotation_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomannotation_export, :tenantId, :role_admin_id, :permission_roomannotation_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_read, :tenantId, :role_admin_id, :permission_roomexport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_list, :tenantId, :role_admin_id, :permission_roomexport_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_create, :tenantId, :role_admin_id, :permission_roomexport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_update, :tenantId, :role_admin_id, :permission_roomexport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_soft_delete, :tenantId, :role_admin_id, :permission_roomexport_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_restore, :tenantId, :role_admin_id, :permission_roomexport_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_export, :tenantId, :role_admin_id, :permission_roomexport_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomexport_send, :tenantId, :role_admin_id, :permission_roomexport_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_read, :tenantId, :role_admin_id, :permission_roomplanpreset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_list, :tenantId, :role_admin_id, :permission_roomplanpreset_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_create, :tenantId, :role_admin_id, :permission_roomplanpreset_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_update, :tenantId, :role_admin_id, :permission_roomplanpreset_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_soft_delete, :tenantId, :role_admin_id, :permission_roomplanpreset_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_restore, :tenantId, :role_admin_id, :permission_roomplanpreset_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_duplicate, :tenantId, :role_admin_id, :permission_roomplanpreset_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomplanpreset_publish, :tenantId, :role_admin_id, :permission_roomplanpreset_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_read, :tenantId, :role_admin_id, :permission_roomprocessingjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_list, :tenantId, :role_admin_id, :permission_roomprocessingjob_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_create, :tenantId, :role_admin_id, :permission_roomprocessingjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_update, :tenantId, :role_admin_id, :permission_roomprocessingjob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_soft_delete, :tenantId, :role_admin_id, :permission_roomprocessingjob_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_restore, :tenantId, :role_admin_id, :permission_roomprocessingjob_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_activate, :tenantId, :role_admin_id, :permission_roomprocessingjob_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_roomprocessingjob_deactivate, :tenantId, :role_admin_id, :permission_roomprocessingjob_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_read, :tenantId, :role_admin_id, :permission_employment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_create, :tenantId, :role_admin_id, :permission_employment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_update, :tenantId, :role_admin_id, :permission_employment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_soft_delete, :tenantId, :role_admin_id, :permission_employment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_restore, :tenantId, :role_admin_id, :permission_employment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_activate, :tenantId, :role_admin_id, :permission_employment_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_employment_deactivate, :tenantId, :role_admin_id, :permission_employment_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_read, :tenantId, :role_admin_id, :permission_position_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_create, :tenantId, :role_admin_id, :permission_position_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_update, :tenantId, :role_admin_id, :permission_position_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_soft_delete, :tenantId, :role_admin_id, :permission_position_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_restore, :tenantId, :role_admin_id, :permission_position_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_activate, :tenantId, :role_admin_id, :permission_position_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_position_deactivate, :tenantId, :role_admin_id, :permission_position_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_read, :tenantId, :role_admin_id, :permission_positionassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_create, :tenantId, :role_admin_id, :permission_positionassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_update, :tenantId, :role_admin_id, :permission_positionassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_soft_delete, :tenantId, :role_admin_id, :permission_positionassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_restore, :tenantId, :role_admin_id, :permission_positionassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_assign, :tenantId, :role_admin_id, :permission_positionassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionassignment_unassign, :tenantId, :role_admin_id, :permission_positionassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionbudget_read, :tenantId, :role_admin_id, :permission_positionbudget_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionbudget_create, :tenantId, :role_admin_id, :permission_positionbudget_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionbudget_update, :tenantId, :role_admin_id, :permission_positionbudget_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionbudget_soft_delete, :tenantId, :role_admin_id, :permission_positionbudget_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_positionbudget_restore, :tenantId, :role_admin_id, :permission_positionbudget_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_read, :tenantId, :role_admin_id, :permission_compensationcomponent_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_create, :tenantId, :role_admin_id, :permission_compensationcomponent_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_update, :tenantId, :role_admin_id, :permission_compensationcomponent_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_soft_delete, :tenantId, :role_admin_id, :permission_compensationcomponent_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_restore, :tenantId, :role_admin_id, :permission_compensationcomponent_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_activate, :tenantId, :role_admin_id, :permission_compensationcomponent_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationcomponent_deactivate, :tenantId, :role_admin_id, :permission_compensationcomponent_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_read, :tenantId, :role_admin_id, :permission_compensationplan_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_create, :tenantId, :role_admin_id, :permission_compensationplan_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_update, :tenantId, :role_admin_id, :permission_compensationplan_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_soft_delete, :tenantId, :role_admin_id, :permission_compensationplan_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_restore, :tenantId, :role_admin_id, :permission_compensationplan_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_activate, :tenantId, :role_admin_id, :permission_compensationplan_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_compensationplan_deactivate, :tenantId, :role_admin_id, :permission_compensationplan_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_read, :tenantId, :role_admin_id, :permission_allowance_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_create, :tenantId, :role_admin_id, :permission_allowance_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_update, :tenantId, :role_admin_id, :permission_allowance_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_soft_delete, :tenantId, :role_admin_id, :permission_allowance_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_restore, :tenantId, :role_admin_id, :permission_allowance_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_approve, :tenantId, :role_admin_id, :permission_allowance_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_allowance_reject, :tenantId, :role_admin_id, :permission_allowance_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_read, :tenantId, :role_admin_id, :permission_deduction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_create, :tenantId, :role_admin_id, :permission_deduction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_update, :tenantId, :role_admin_id, :permission_deduction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_soft_delete, :tenantId, :role_admin_id, :permission_deduction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_restore, :tenantId, :role_admin_id, :permission_deduction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_approve, :tenantId, :role_admin_id, :permission_deduction_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_deduction_reject, :tenantId, :role_admin_id, :permission_deduction_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitdependent_read, :tenantId, :role_admin_id, :permission_benefitdependent_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitdependent_create, :tenantId, :role_admin_id, :permission_benefitdependent_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitdependent_update, :tenantId, :role_admin_id, :permission_benefitdependent_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitdependent_soft_delete, :tenantId, :role_admin_id, :permission_benefitdependent_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitdependent_restore, :tenantId, :role_admin_id, :permission_benefitdependent_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_read, :tenantId, :role_admin_id, :permission_benefitenrollment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_create, :tenantId, :role_admin_id, :permission_benefitenrollment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_update, :tenantId, :role_admin_id, :permission_benefitenrollment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_soft_delete, :tenantId, :role_admin_id, :permission_benefitenrollment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_restore, :tenantId, :role_admin_id, :permission_benefitenrollment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_approve, :tenantId, :role_admin_id, :permission_benefitenrollment_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_benefitenrollment_reject, :tenantId, :role_admin_id, :permission_benefitenrollment_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_read, :tenantId, :role_admin_id, :permission_certification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_create, :tenantId, :role_admin_id, :permission_certification_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_update, :tenantId, :role_admin_id, :permission_certification_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_soft_delete, :tenantId, :role_admin_id, :permission_certification_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_restore, :tenantId, :role_admin_id, :permission_certification_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_approve, :tenantId, :role_admin_id, :permission_certification_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_certification_reject, :tenantId, :role_admin_id, :permission_certification_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancegoal_read, :tenantId, :role_admin_id, :permission_performancegoal_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancegoal_create, :tenantId, :role_admin_id, :permission_performancegoal_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancegoal_update, :tenantId, :role_admin_id, :permission_performancegoal_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancegoal_soft_delete, :tenantId, :role_admin_id, :permission_performancegoal_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancegoal_restore, :tenantId, :role_admin_id, :permission_performancegoal_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_read, :tenantId, :role_admin_id, :permission_performancereview_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_create, :tenantId, :role_admin_id, :permission_performancereview_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_update, :tenantId, :role_admin_id, :permission_performancereview_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_soft_delete, :tenantId, :role_admin_id, :permission_performancereview_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_restore, :tenantId, :role_admin_id, :permission_performancereview_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_approve, :tenantId, :role_admin_id, :permission_performancereview_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_performancereview_reject, :tenantId, :role_admin_id, :permission_performancereview_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_grade_read, :tenantId, :role_admin_id, :permission_grade_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_grade_create, :tenantId, :role_admin_id, :permission_grade_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_grade_update, :tenantId, :role_admin_id, :permission_grade_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_grade_soft_delete, :tenantId, :role_admin_id, :permission_grade_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_grade_restore, :tenantId, :role_admin_id, :permission_grade_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_read, :tenantId, :role_admin_id, :permission_department_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_create, :tenantId, :role_admin_id, :permission_department_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_update, :tenantId, :role_admin_id, :permission_department_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_soft_delete, :tenantId, :role_admin_id, :permission_department_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_restore, :tenantId, :role_admin_id, :permission_department_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_activate, :tenantId, :role_admin_id, :permission_department_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_department_deactivate, :tenantId, :role_admin_id, :permission_department_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_read, :tenantId, :role_admin_id, :permission_orgunit_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_create, :tenantId, :role_admin_id, :permission_orgunit_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_update, :tenantId, :role_admin_id, :permission_orgunit_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_soft_delete, :tenantId, :role_admin_id, :permission_orgunit_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_restore, :tenantId, :role_admin_id, :permission_orgunit_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_activate, :tenantId, :role_admin_id, :permission_orgunit_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_orgunit_deactivate, :tenantId, :role_admin_id, :permission_orgunit_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_read, :tenantId, :role_admin_id, :permission_trainingenrollment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_create, :tenantId, :role_admin_id, :permission_trainingenrollment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_update, :tenantId, :role_admin_id, :permission_trainingenrollment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_soft_delete, :tenantId, :role_admin_id, :permission_trainingenrollment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_restore, :tenantId, :role_admin_id, :permission_trainingenrollment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_approve, :tenantId, :role_admin_id, :permission_trainingenrollment_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_trainingenrollment_reject, :tenantId, :role_admin_id, :permission_trainingenrollment_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_read, :tenantId, :role_admin_id, :permission_worker_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_create, :tenantId, :role_admin_id, :permission_worker_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_update, :tenantId, :role_admin_id, :permission_worker_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_soft_delete, :tenantId, :role_admin_id, :permission_worker_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_restore, :tenantId, :role_admin_id, :permission_worker_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_activate, :tenantId, :role_admin_id, :permission_worker_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worker_deactivate, :tenantId, :role_admin_id, :permission_worker_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigation_read, :tenantId, :role_admin_id, :permission_lossinvestigation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigation_create, :tenantId, :role_admin_id, :permission_lossinvestigation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigation_update, :tenantId, :role_admin_id, :permission_lossinvestigation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigation_soft_delete, :tenantId, :role_admin_id, :permission_lossinvestigation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigation_restore, :tenantId, :role_admin_id, :permission_lossinvestigation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigationfinding_read, :tenantId, :role_admin_id, :permission_lossinvestigationfinding_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigationfinding_create, :tenantId, :role_admin_id, :permission_lossinvestigationfinding_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigationfinding_update, :tenantId, :role_admin_id, :permission_lossinvestigationfinding_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigationfinding_soft_delete, :tenantId, :role_admin_id, :permission_lossinvestigationfinding_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lossinvestigationfinding_restore, :tenantId, :role_admin_id, :permission_lossinvestigationfinding_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_read, :tenantId, :role_admin_id, :permission_mitigationaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_create, :tenantId, :role_admin_id, :permission_mitigationaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_update, :tenantId, :role_admin_id, :permission_mitigationaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_soft_delete, :tenantId, :role_admin_id, :permission_mitigationaction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_restore, :tenantId, :role_admin_id, :permission_mitigationaction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_mitigationaction_implement, :tenantId, :role_admin_id, :permission_mitigationaction_implement_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_read, :tenantId, :role_admin_id, :permission_riskfactor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_create, :tenantId, :role_admin_id, :permission_riskfactor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_update, :tenantId, :role_admin_id, :permission_riskfactor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_soft_delete, :tenantId, :role_admin_id, :permission_riskfactor_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_restore, :tenantId, :role_admin_id, :permission_riskfactor_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_riskfactor_assess, :tenantId, :role_admin_id, :permission_riskfactor_assess_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedulerisk_read, :tenantId, :role_admin_id, :permission_schedulerisk_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedulerisk_create, :tenantId, :role_admin_id, :permission_schedulerisk_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedulerisk_update, :tenantId, :role_admin_id, :permission_schedulerisk_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedulerisk_soft_delete, :tenantId, :role_admin_id, :permission_schedulerisk_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedulerisk_restore, :tenantId, :role_admin_id, :permission_schedulerisk_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_read, :tenantId, :role_admin_id, :permission_anomalycase_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_create, :tenantId, :role_admin_id, :permission_anomalycase_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_update, :tenantId, :role_admin_id, :permission_anomalycase_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_soft_delete, :tenantId, :role_admin_id, :permission_anomalycase_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_restore, :tenantId, :role_admin_id, :permission_anomalycase_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycase_investigate, :tenantId, :role_admin_id, :permission_anomalycase_investigate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycaseaction_read, :tenantId, :role_admin_id, :permission_anomalycaseaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycaseaction_create, :tenantId, :role_admin_id, :permission_anomalycaseaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycaseaction_update, :tenantId, :role_admin_id, :permission_anomalycaseaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalycaseaction_execute, :tenantId, :role_admin_id, :permission_anomalycaseaction_execute_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignal_read, :tenantId, :role_admin_id, :permission_anomalysignal_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignal_create, :tenantId, :role_admin_id, :permission_anomalysignal_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignal_update, :tenantId, :role_admin_id, :permission_anomalysignal_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignalfeature_read, :tenantId, :role_admin_id, :permission_anomalysignalfeature_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignalfeature_create, :tenantId, :role_admin_id, :permission_anomalysignalfeature_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_anomalysignalfeature_update, :tenantId, :role_admin_id, :permission_anomalysignalfeature_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_read, :tenantId, :role_admin_id, :permission_approvalrequest_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_create, :tenantId, :role_admin_id, :permission_approvalrequest_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_update, :tenantId, :role_admin_id, :permission_approvalrequest_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_soft_delete, :tenantId, :role_admin_id, :permission_approvalrequest_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_restore, :tenantId, :role_admin_id, :permission_approvalrequest_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_submit, :tenantId, :role_admin_id, :permission_approvalrequest_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_approve, :tenantId, :role_admin_id, :permission_approvalrequest_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrequest_reject, :tenantId, :role_admin_id, :permission_approvalrequest_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvaldecision_read, :tenantId, :role_admin_id, :permission_approvaldecision_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvaldecision_create, :tenantId, :role_admin_id, :permission_approvaldecision_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvaldecision_update, :tenantId, :role_admin_id, :permission_approvaldecision_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvaldecision_soft_delete, :tenantId, :role_admin_id, :permission_approvaldecision_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvaldecision_restore, :tenantId, :role_admin_id, :permission_approvaldecision_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_read, :tenantId, :role_admin_id, :permission_approvalrule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_create, :tenantId, :role_admin_id, :permission_approvalrule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_update, :tenantId, :role_admin_id, :permission_approvalrule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_soft_delete, :tenantId, :role_admin_id, :permission_approvalrule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_restore, :tenantId, :role_admin_id, :permission_approvalrule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_activate, :tenantId, :role_admin_id, :permission_approvalrule_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_approvalrule_deactivate, :tenantId, :role_admin_id, :permission_approvalrule_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobrun_read, :tenantId, :role_admin_id, :permission_jobrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobrun_create, :tenantId, :role_admin_id, :permission_jobrun_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobrun_update, :tenantId, :role_admin_id, :permission_jobrun_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobrun_soft_delete, :tenantId, :role_admin_id, :permission_jobrun_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobrun_restore, :tenantId, :role_admin_id, :permission_jobrun_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobschedule_read, :tenantId, :role_admin_id, :permission_jobschedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobschedule_create, :tenantId, :role_admin_id, :permission_jobschedule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobschedule_update, :tenantId, :role_admin_id, :permission_jobschedule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobschedule_activate, :tenantId, :role_admin_id, :permission_jobschedule_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobschedule_deactivate, :tenantId, :role_admin_id, :permission_jobschedule_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobfamily_read, :tenantId, :role_admin_id, :permission_jobfamily_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobfamily_create, :tenantId, :role_admin_id, :permission_jobfamily_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobfamily_update, :tenantId, :role_admin_id, :permission_jobfamily_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobfamily_soft_delete, :tenantId, :role_admin_id, :permission_jobfamily_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobfamily_restore, :tenantId, :role_admin_id, :permission_jobfamily_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofile_read, :tenantId, :role_admin_id, :permission_jobprofile_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofile_create, :tenantId, :role_admin_id, :permission_jobprofile_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofile_update, :tenantId, :role_admin_id, :permission_jobprofile_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofile_soft_delete, :tenantId, :role_admin_id, :permission_jobprofile_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofile_restore, :tenantId, :role_admin_id, :permission_jobprofile_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofileassignment_read, :tenantId, :role_admin_id, :permission_jobprofileassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofileassignment_create, :tenantId, :role_admin_id, :permission_jobprofileassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofileassignment_update, :tenantId, :role_admin_id, :permission_jobprofileassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofileassignment_assign, :tenantId, :role_admin_id, :permission_jobprofileassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_jobprofileassignment_unassign, :tenantId, :role_admin_id, :permission_jobprofileassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_distributedlock_read, :tenantId, :role_admin_id, :permission_distributedlock_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_distributedlock_create, :tenantId, :role_admin_id, :permission_distributedlock_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_distributedlock_update, :tenantId, :role_admin_id, :permission_distributedlock_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_numbersequence_read, :tenantId, :role_admin_id, :permission_numbersequence_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_numbersequence_create, :tenantId, :role_admin_id, :permission_numbersequence_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_numbersequence_update, :tenantId, :role_admin_id, :permission_numbersequence_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alerts_read, :tenantId, :role_admin_id, :permission_weather_alerts_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alerts_create, :tenantId, :role_admin_id, :permission_weather_alerts_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alerts_update, :tenantId, :role_admin_id, :permission_weather_alerts_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alerts_activate, :tenantId, :role_admin_id, :permission_weather_alerts_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alerts_deactivate, :tenantId, :role_admin_id, :permission_weather_alerts_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_watches_read, :tenantId, :role_admin_id, :permission_weather_watches_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_watches_create, :tenantId, :role_admin_id, :permission_weather_watches_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_watches_update, :tenantId, :role_admin_id, :permission_weather_watches_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_incidents_read, :tenantId, :role_admin_id, :permission_weather_incidents_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_incidents_create, :tenantId, :role_admin_id, :permission_weather_incidents_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_incidents_update, :tenantId, :role_admin_id, :permission_weather_incidents_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_incidents_resolve, :tenantId, :role_admin_id, :permission_weather_incidents_resolve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alert_deliveries_read, :tenantId, :role_admin_id, :permission_weather_alert_deliveries_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alert_deliveries_create, :tenantId, :role_admin_id, :permission_weather_alert_deliveries_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_alert_deliveries_update, :tenantId, :role_admin_id, :permission_weather_alert_deliveries_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_forecast_cache_read, :tenantId, :role_admin_id, :permission_weather_forecast_cache_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_forecast_cache_create, :tenantId, :role_admin_id, :permission_weather_forecast_cache_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_forecast_cache_update, :tenantId, :role_admin_id, :permission_weather_forecast_cache_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_providers_read, :tenantId, :role_admin_id, :permission_weather_providers_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_providers_create, :tenantId, :role_admin_id, :permission_weather_providers_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_providers_update, :tenantId, :role_admin_id, :permission_weather_providers_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_providers_activate, :tenantId, :role_admin_id, :permission_weather_providers_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_providers_deactivate, :tenantId, :role_admin_id, :permission_weather_providers_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_risk_factors_read, :tenantId, :role_admin_id, :permission_weather_risk_factors_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_risk_factors_create, :tenantId, :role_admin_id, :permission_weather_risk_factors_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_risk_factors_update, :tenantId, :role_admin_id, :permission_weather_risk_factors_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_risk_factors_activate, :tenantId, :role_admin_id, :permission_weather_risk_factors_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_weather_risk_factors_deactivate, :tenantId, :role_admin_id, :permission_weather_risk_factors_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_read, :tenantId, :role_admin_id, :permission_webhook_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_create, :tenantId, :role_admin_id, :permission_webhook_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_update, :tenantId, :role_admin_id, :permission_webhook_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_soft_delete, :tenantId, :role_admin_id, :permission_webhook_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_restore, :tenantId, :role_admin_id, :permission_webhook_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_activate, :tenantId, :role_admin_id, :permission_webhook_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhook_deactivate, :tenantId, :role_admin_id, :permission_webhook_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookendpoint_read, :tenantId, :role_admin_id, :permission_webhookendpoint_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookendpoint_create, :tenantId, :role_admin_id, :permission_webhookendpoint_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookendpoint_update, :tenantId, :role_admin_id, :permission_webhookendpoint_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookendpoint_soft_delete, :tenantId, :role_admin_id, :permission_webhookendpoint_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookendpoint_restore, :tenantId, :role_admin_id, :permission_webhookendpoint_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookdelivery_read, :tenantId, :role_admin_id, :permission_webhookdelivery_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookdelivery_create, :tenantId, :role_admin_id, :permission_webhookdelivery_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookdelivery_update, :tenantId, :role_admin_id, :permission_webhookdelivery_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookdelivery_soft_delete, :tenantId, :role_admin_id, :permission_webhookdelivery_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookdelivery_restore, :tenantId, :role_admin_id, :permission_webhookdelivery_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookevent_read, :tenantId, :role_admin_id, :permission_webhookevent_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookevent_create, :tenantId, :role_admin_id, :permission_webhookevent_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookevent_update, :tenantId, :role_admin_id, :permission_webhookevent_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookevent_soft_delete, :tenantId, :role_admin_id, :permission_webhookevent_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhookevent_restore, :tenantId, :role_admin_id, :permission_webhookevent_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhooklog_read, :tenantId, :role_admin_id, :permission_webhooklog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhooklog_create, :tenantId, :role_admin_id, :permission_webhooklog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhooklog_update, :tenantId, :role_admin_id, :permission_webhooklog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhooklog_soft_delete, :tenantId, :role_admin_id, :permission_webhooklog_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_webhooklog_restore, :tenantId, :role_admin_id, :permission_webhooklog_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_read, :tenantId, :role_admin_id, :permission_integrationconnection_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_create, :tenantId, :role_admin_id, :permission_integrationconnection_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_update, :tenantId, :role_admin_id, :permission_integrationconnection_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_soft_delete, :tenantId, :role_admin_id, :permission_integrationconnection_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_restore, :tenantId, :role_admin_id, :permission_integrationconnection_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_activate, :tenantId, :role_admin_id, :permission_integrationconnection_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnection_deactivate, :tenantId, :role_admin_id, :permission_integrationconnection_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnector_read, :tenantId, :role_admin_id, :permission_integrationconnector_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnector_create, :tenantId, :role_admin_id, :permission_integrationconnector_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnector_update, :tenantId, :role_admin_id, :permission_integrationconnector_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnector_soft_delete, :tenantId, :role_admin_id, :permission_integrationconnector_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationconnector_restore, :tenantId, :role_admin_id, :permission_integrationconnector_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationmapping_read, :tenantId, :role_admin_id, :permission_integrationmapping_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationmapping_create, :tenantId, :role_admin_id, :permission_integrationmapping_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationmapping_update, :tenantId, :role_admin_id, :permission_integrationmapping_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationmapping_soft_delete, :tenantId, :role_admin_id, :permission_integrationmapping_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationmapping_restore, :tenantId, :role_admin_id, :permission_integrationmapping_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationprovider_read, :tenantId, :role_admin_id, :permission_integrationprovider_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationprovider_create, :tenantId, :role_admin_id, :permission_integrationprovider_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationprovider_update, :tenantId, :role_admin_id, :permission_integrationprovider_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationprovider_soft_delete, :tenantId, :role_admin_id, :permission_integrationprovider_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationprovider_restore, :tenantId, :role_admin_id, :permission_integrationprovider_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationsecret_read, :tenantId, :role_admin_id, :permission_integrationsecret_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationsecret_create, :tenantId, :role_admin_id, :permission_integrationsecret_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationsecret_update, :tenantId, :role_admin_id, :permission_integrationsecret_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationsecret_soft_delete, :tenantId, :role_admin_id, :permission_integrationsecret_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_integrationsecret_restore, :tenantId, :role_admin_id, :permission_integrationsecret_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncjob_read, :tenantId, :role_admin_id, :permission_syncjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncjob_create, :tenantId, :role_admin_id, :permission_syncjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncjob_update, :tenantId, :role_admin_id, :permission_syncjob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncjob_soft_delete, :tenantId, :role_admin_id, :permission_syncjob_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncjob_restore, :tenantId, :role_admin_id, :permission_syncjob_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_synclog_read, :tenantId, :role_admin_id, :permission_synclog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_synclog_create, :tenantId, :role_admin_id, :permission_synclog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_synclog_update, :tenantId, :role_admin_id, :permission_synclog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_synclog_soft_delete, :tenantId, :role_admin_id, :permission_synclog_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_synclog_restore, :tenantId, :role_admin_id, :permission_synclog_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncstate_read, :tenantId, :role_admin_id, :permission_syncstate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncstate_create, :tenantId, :role_admin_id, :permission_syncstate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncstate_update, :tenantId, :role_admin_id, :permission_syncstate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncstate_soft_delete, :tenantId, :role_admin_id, :permission_syncstate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_syncstate_restore, :tenantId, :role_admin_id, :permission_syncstate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_location_read, :tenantId, :role_admin_id, :permission_location_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_location_create, :tenantId, :role_admin_id, :permission_location_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_location_update, :tenantId, :role_admin_id, :permission_location_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_location_soft_delete, :tenantId, :role_admin_id, :permission_location_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_location_restore, :tenantId, :role_admin_id, :permission_location_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_country_read, :tenantId, :role_admin_id, :permission_country_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_country_create, :tenantId, :role_admin_id, :permission_country_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_country_update, :tenantId, :role_admin_id, :permission_country_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_country_soft_delete, :tenantId, :role_admin_id, :permission_country_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_country_restore, :tenantId, :role_admin_id, :permission_country_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_region_read, :tenantId, :role_admin_id, :permission_region_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_region_create, :tenantId, :role_admin_id, :permission_region_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_region_update, :tenantId, :role_admin_id, :permission_region_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_region_soft_delete, :tenantId, :role_admin_id, :permission_region_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_region_restore, :tenantId, :role_admin_id, :permission_region_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_stateprovince_read, :tenantId, :role_admin_id, :permission_stateprovince_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_stateprovince_create, :tenantId, :role_admin_id, :permission_stateprovince_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_stateprovince_update, :tenantId, :role_admin_id, :permission_stateprovince_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_stateprovince_soft_delete, :tenantId, :role_admin_id, :permission_stateprovince_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_stateprovince_restore, :tenantId, :role_admin_id, :permission_stateprovince_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_read, :tenantId, :role_admin_id, :permission_pricelist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_create, :tenantId, :role_admin_id, :permission_pricelist_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_update, :tenantId, :role_admin_id, :permission_pricelist_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_soft_delete, :tenantId, :role_admin_id, :permission_pricelist_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_restore, :tenantId, :role_admin_id, :permission_pricelist_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_activate, :tenantId, :role_admin_id, :permission_pricelist_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelist_deactivate, :tenantId, :role_admin_id, :permission_pricelist_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelistitem_read, :tenantId, :role_admin_id, :permission_pricelistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelistitem_create, :tenantId, :role_admin_id, :permission_pricelistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelistitem_update, :tenantId, :role_admin_id, :permission_pricelistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelistitem_soft_delete, :tenantId, :role_admin_id, :permission_pricelistitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_pricelistitem_restore, :tenantId, :role_admin_id, :permission_pricelistitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcenter_read, :tenantId, :role_admin_id, :permission_costcenter_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcenter_create, :tenantId, :role_admin_id, :permission_costcenter_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcenter_update, :tenantId, :role_admin_id, :permission_costcenter_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcenter_soft_delete, :tenantId, :role_admin_id, :permission_costcenter_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcenter_restore, :tenantId, :role_admin_id, :permission_costcenter_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcategory_read, :tenantId, :role_admin_id, :permission_costcategory_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcategory_create, :tenantId, :role_admin_id, :permission_costcategory_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcategory_update, :tenantId, :role_admin_id, :permission_costcategory_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcategory_soft_delete, :tenantId, :role_admin_id, :permission_costcategory_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcategory_restore, :tenantId, :role_admin_id, :permission_costcategory_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcode_read, :tenantId, :role_admin_id, :permission_costcode_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcode_create, :tenantId, :role_admin_id, :permission_costcode_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcode_update, :tenantId, :role_admin_id, :permission_costcode_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcode_soft_delete, :tenantId, :role_admin_id, :permission_costcode_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_costcode_restore, :tenantId, :role_admin_id, :permission_costcode_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_unitofmeasure_read, :tenantId, :role_admin_id, :permission_unitofmeasure_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_unitofmeasure_create, :tenantId, :role_admin_id, :permission_unitofmeasure_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_unitofmeasure_update, :tenantId, :role_admin_id, :permission_unitofmeasure_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_unitofmeasure_soft_delete, :tenantId, :role_admin_id, :permission_unitofmeasure_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_unitofmeasure_restore, :tenantId, :role_admin_id, :permission_unitofmeasure_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worktype_read, :tenantId, :role_admin_id, :permission_worktype_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worktype_create, :tenantId, :role_admin_id, :permission_worktype_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worktype_update, :tenantId, :role_admin_id, :permission_worktype_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worktype_soft_delete, :tenantId, :role_admin_id, :permission_worktype_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_worktype_restore, :tenantId, :role_admin_id, :permission_worktype_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantauditlog_read, :tenantId, :role_admin_id, :permission_tenantauditlog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_tenantauditlog_export, :tenantId, :role_admin_id, :permission_tenantauditlog_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_read, :tenantId, :role_admin_id, :permission_dataretentionpolicy_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_create, :tenantId, :role_admin_id, :permission_dataretentionpolicy_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_update, :tenantId, :role_admin_id, :permission_dataretentionpolicy_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_soft_delete, :tenantId, :role_admin_id, :permission_dataretentionpolicy_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_restore, :tenantId, :role_admin_id, :permission_dataretentionpolicy_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_activate, :tenantId, :role_admin_id, :permission_dataretentionpolicy_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dataretentionpolicy_deactivate, :tenantId, :role_admin_id, :permission_dataretentionpolicy_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_errorreport_read, :tenantId, :role_admin_id, :permission_errorreport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_errorreport_create, :tenantId, :role_admin_id, :permission_errorreport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_errorreport_update, :tenantId, :role_admin_id, :permission_errorreport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_errorreport_soft_delete, :tenantId, :role_admin_id, :permission_errorreport_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_errorreport_restore, :tenantId, :role_admin_id, :permission_errorreport_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_systemlog_read, :tenantId, :role_admin_id, :permission_systemlog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_systemlog_create, :tenantId, :role_admin_id, :permission_systemlog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_systemlog_update, :tenantId, :role_admin_id, :permission_systemlog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_systemlog_soft_delete, :tenantId, :role_admin_id, :permission_systemlog_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_systemlog_restore, :tenantId, :role_admin_id, :permission_systemlog_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportjob_read, :tenantId, :role_admin_id, :permission_exportjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportjob_create, :tenantId, :role_admin_id, :permission_exportjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportjob_update, :tenantId, :role_admin_id, :permission_exportjob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportjob_soft_delete, :tenantId, :role_admin_id, :permission_exportjob_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportjob_restore, :tenantId, :role_admin_id, :permission_exportjob_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportartifact_read, :tenantId, :role_admin_id, :permission_exportartifact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportartifact_create, :tenantId, :role_admin_id, :permission_exportartifact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportartifact_update, :tenantId, :role_admin_id, :permission_exportartifact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportartifact_soft_delete, :tenantId, :role_admin_id, :permission_exportartifact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_exportartifact_restore, :tenantId, :role_admin_id, :permission_exportartifact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reportdefinition_read, :tenantId, :role_admin_id, :permission_reportdefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reportdefinition_create, :tenantId, :role_admin_id, :permission_reportdefinition_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reportdefinition_update, :tenantId, :role_admin_id, :permission_reportdefinition_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reportdefinition_soft_delete, :tenantId, :role_admin_id, :permission_reportdefinition_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_reportdefinition_restore, :tenantId, :role_admin_id, :permission_reportdefinition_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dashboarddefinition_read, :tenantId, :role_admin_id, :permission_dashboarddefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dashboarddefinition_create, :tenantId, :role_admin_id, :permission_dashboarddefinition_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dashboarddefinition_update, :tenantId, :role_admin_id, :permission_dashboarddefinition_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dashboarddefinition_soft_delete, :tenantId, :role_admin_id, :permission_dashboarddefinition_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_dashboarddefinition_restore, :tenantId, :role_admin_id, :permission_dashboarddefinition_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_assign, :tenantId, :role_admin_id, :permission_account_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_unassign, :tenantId, :role_admin_id, :permission_account_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_assign, :tenantId, :role_admin_id, :permission_project_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_project_unassign, :tenantId, :role_admin_id, :permission_project_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_approve, :tenantId, :role_admin_id, :permission_expensereceipt_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expensereceipt_reject, :tenantId, :role_admin_id, :permission_expensereceipt_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_payrollrun_submit, :tenantId, :role_admin_id, :permission_payrollrun_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_approve, :tenantId, :role_admin_id, :permission_scheduleexception_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_scheduleexception_reject, :tenantId, :role_admin_id, :permission_scheduleexception_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_assign, :tenantId, :role_admin_id, :permission_vendor_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_unassign, :tenantId, :role_admin_id, :permission_vendor_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_paystatement_read, :tenantId, :role_admin_id, :permission_paystatement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_account_hard_delete, :tenantId, :role_admin_id, :permission_account_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_accountaddress_hard_delete, :tenantId, :role_admin_id, :permission_accountaddress_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contact_hard_delete, :tenantId, :role_admin_id, :permission_contact_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_lead_hard_delete, :tenantId, :role_admin_id, :permission_lead_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_opportunity_hard_delete, :tenantId, :role_admin_id, :permission_opportunity_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_quote_hard_delete, :tenantId, :role_admin_id, :permission_quote_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimate_hard_delete, :tenantId, :role_admin_id, :permission_estimate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatecomment_read, :tenantId, :role_admin_id, :permission_estimatecomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatecomment_create, :tenantId, :role_admin_id, :permission_estimatecomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatecomment_update, :tenantId, :role_admin_id, :permission_estimatecomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatecomment_soft_delete, :tenantId, :role_admin_id, :permission_estimatecomment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatecomment_restore, :tenantId, :role_admin_id, :permission_estimatecomment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatediscount_read, :tenantId, :role_admin_id, :permission_estimatediscount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatediscount_create, :tenantId, :role_admin_id, :permission_estimatediscount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatediscount_update, :tenantId, :role_admin_id, :permission_estimatediscount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatediscount_soft_delete, :tenantId, :role_admin_id, :permission_estimatediscount_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatediscount_restore, :tenantId, :role_admin_id, :permission_estimatediscount_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatehistoryevent_read, :tenantId, :role_admin_id, :permission_estimatehistoryevent_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatehistoryevent_create, :tenantId, :role_admin_id, :permission_estimatehistoryevent_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimaterevision_read, :tenantId, :role_admin_id, :permission_estimaterevision_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimaterevision_create, :tenantId, :role_admin_id, :permission_estimaterevision_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimaterevision_update, :tenantId, :role_admin_id, :permission_estimaterevision_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimaterevision_soft_delete, :tenantId, :role_admin_id, :permission_estimaterevision_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimaterevision_restore, :tenantId, :role_admin_id, :permission_estimaterevision_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatetax_read, :tenantId, :role_admin_id, :permission_estimatetax_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatetax_create, :tenantId, :role_admin_id, :permission_estimatetax_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatetax_update, :tenantId, :role_admin_id, :permission_estimatetax_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatetax_soft_delete, :tenantId, :role_admin_id, :permission_estimatetax_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimatetax_restore, :tenantId, :role_admin_id, :permission_estimatetax_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateterm_read, :tenantId, :role_admin_id, :permission_estimateterm_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateterm_create, :tenantId, :role_admin_id, :permission_estimateterm_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateterm_update, :tenantId, :role_admin_id, :permission_estimateterm_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateterm_soft_delete, :tenantId, :role_admin_id, :permission_estimateterm_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_estimateterm_restore, :tenantId, :role_admin_id, :permission_estimateterm_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_expense_hard_delete, :tenantId, :role_admin_id, :permission_expense_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_schedule_hard_delete, :tenantId, :role_admin_id, :permission_schedule_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_inventoryitem_hard_delete, :tenantId, :role_admin_id, :permission_inventoryitem_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_asset_hard_delete, :tenantId, :role_admin_id, :permission_asset_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_channel_hard_delete, :tenantId, :role_admin_id, :permission_channel_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_directchat_hard_delete, :tenantId, :role_admin_id, :permission_directchat_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_fileobject_hard_delete, :tenantId, :role_admin_id, :permission_fileobject_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_attachment_hard_delete, :tenantId, :role_admin_id, :permission_attachment_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_contracttemplate_hard_delete, :tenantId, :role_admin_id, :permission_contracttemplate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_termstemplate_hard_delete, :tenantId, :role_admin_id, :permission_termstemplate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_admin_vendor_hard_delete, :tenantId, :role_admin_id, :permission_vendor_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;

-- PROJECT_MANAGER Role Permissions
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenant_read, :tenantId, :role_project_manager_id, :permission_tenant_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenantsettings_read, :tenantId, :role_project_manager_id, :permission_tenantsettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenantmetrics_read, :tenantId, :role_project_manager_id, :permission_tenantmetrics_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenantfeatureflag_read, :tenantId, :role_project_manager_id, :permission_tenantfeatureflag_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenantusagerecord_read, :tenantId, :role_project_manager_id, :permission_tenantusagerecord_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_user_read, :tenantId, :role_project_manager_id, :permission_user_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_user_update, :tenantId, :role_project_manager_id, :permission_user_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_read, :tenantId, :role_project_manager_id, :permission_member_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_update, :tenantId, :role_project_manager_id, :permission_member_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_create, :tenantId, :role_project_manager_id, :permission_member_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_soft_delete, :tenantId, :role_project_manager_id, :permission_member_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_restore, :tenantId, :role_project_manager_id, :permission_member_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_assign, :tenantId, :role_project_manager_id, :permission_member_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_unassign, :tenantId, :role_project_manager_id, :permission_member_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_member_transfer, :tenantId, :role_project_manager_id, :permission_member_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberrole_read, :tenantId, :role_project_manager_id, :permission_memberrole_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberrole_assign, :tenantId, :role_project_manager_id, :permission_memberrole_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberrole_unassign, :tenantId, :role_project_manager_id, :permission_memberrole_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_membersettings_read, :tenantId, :role_project_manager_id, :permission_membersettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_membersettings_update, :tenantId, :role_project_manager_id, :permission_membersettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberdocument_read, :tenantId, :role_project_manager_id, :permission_memberdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberdocument_create, :tenantId, :role_project_manager_id, :permission_memberdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_memberdocument_update, :tenantId, :role_project_manager_id, :permission_memberdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_role_read, :tenantId, :role_project_manager_id, :permission_role_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_permission_read, :tenantId, :role_project_manager_id, :permission_permission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rolepermission_read, :tenantId, :role_project_manager_id, :permission_rolepermission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_apikey_read, :tenantId, :role_project_manager_id, :permission_apikey_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_apikey_create, :tenantId, :role_project_manager_id, :permission_apikey_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_apikey_soft_delete, :tenantId, :role_project_manager_id, :permission_apikey_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_authfactor_read, :tenantId, :role_project_manager_id, :permission_authfactor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_authfactor_create, :tenantId, :role_project_manager_id, :permission_authfactor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_authfactor_update, :tenantId, :role_project_manager_id, :permission_authfactor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_read, :tenantId, :role_project_manager_id, :permission_account_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_create, :tenantId, :role_project_manager_id, :permission_account_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_update, :tenantId, :role_project_manager_id, :permission_account_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_soft_delete, :tenantId, :role_project_manager_id, :permission_account_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_restore, :tenantId, :role_project_manager_id, :permission_account_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_assign, :tenantId, :role_project_manager_id, :permission_account_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_account_unassign, :tenantId, :role_project_manager_id, :permission_account_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_accountaddress_read, :tenantId, :role_project_manager_id, :permission_accountaddress_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_accountaddress_create, :tenantId, :role_project_manager_id, :permission_accountaddress_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_accountaddress_update, :tenantId, :role_project_manager_id, :permission_accountaddress_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_accountaddress_soft_delete, :tenantId, :role_project_manager_id, :permission_accountaddress_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_accountaddress_restore, :tenantId, :role_project_manager_id, :permission_accountaddress_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contact_read, :tenantId, :role_project_manager_id, :permission_contact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contact_create, :tenantId, :role_project_manager_id, :permission_contact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contact_update, :tenantId, :role_project_manager_id, :permission_contact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contact_soft_delete, :tenantId, :role_project_manager_id, :permission_contact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contact_restore, :tenantId, :role_project_manager_id, :permission_contact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_read, :tenantId, :role_project_manager_id, :permission_lead_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_create, :tenantId, :role_project_manager_id, :permission_lead_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_update, :tenantId, :role_project_manager_id, :permission_lead_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_soft_delete, :tenantId, :role_project_manager_id, :permission_lead_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_restore, :tenantId, :role_project_manager_id, :permission_lead_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_assign, :tenantId, :role_project_manager_id, :permission_lead_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_unassign, :tenantId, :role_project_manager_id, :permission_lead_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_lead_transfer, :tenantId, :role_project_manager_id, :permission_lead_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leadactivity_read, :tenantId, :role_project_manager_id, :permission_leadactivity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leadactivity_create, :tenantId, :role_project_manager_id, :permission_leadactivity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leadactivity_update, :tenantId, :role_project_manager_id, :permission_leadactivity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leadactivity_soft_delete, :tenantId, :role_project_manager_id, :permission_leadactivity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leadactivity_restore, :tenantId, :role_project_manager_id, :permission_leadactivity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_read, :tenantId, :role_project_manager_id, :permission_opportunity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_create, :tenantId, :role_project_manager_id, :permission_opportunity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_update, :tenantId, :role_project_manager_id, :permission_opportunity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_soft_delete, :tenantId, :role_project_manager_id, :permission_opportunity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_restore, :tenantId, :role_project_manager_id, :permission_opportunity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_assign, :tenantId, :role_project_manager_id, :permission_opportunity_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunity_unassign, :tenantId, :role_project_manager_id, :permission_opportunity_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitystage_read, :tenantId, :role_project_manager_id, :permission_opportunitystage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitystage_create, :tenantId, :role_project_manager_id, :permission_opportunitystage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitystage_update, :tenantId, :role_project_manager_id, :permission_opportunitystage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitylineitem_read, :tenantId, :role_project_manager_id, :permission_opportunitylineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitylineitem_create, :tenantId, :role_project_manager_id, :permission_opportunitylineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitylineitem_update, :tenantId, :role_project_manager_id, :permission_opportunitylineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitylineitem_soft_delete, :tenantId, :role_project_manager_id, :permission_opportunitylineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_opportunitylineitem_restore, :tenantId, :role_project_manager_id, :permission_opportunitylineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_read, :tenantId, :role_project_manager_id, :permission_quote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_create, :tenantId, :role_project_manager_id, :permission_quote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_update, :tenantId, :role_project_manager_id, :permission_quote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_soft_delete, :tenantId, :role_project_manager_id, :permission_quote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_restore, :tenantId, :role_project_manager_id, :permission_quote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quote_send, :tenantId, :role_project_manager_id, :permission_quote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quotelineitem_read, :tenantId, :role_project_manager_id, :permission_quotelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quotelineitem_create, :tenantId, :role_project_manager_id, :permission_quotelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quotelineitem_update, :tenantId, :role_project_manager_id, :permission_quotelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quotelineitem_soft_delete, :tenantId, :role_project_manager_id, :permission_quotelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_quotelineitem_restore, :tenantId, :role_project_manager_id, :permission_quotelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_read, :tenantId, :role_project_manager_id, :permission_estimate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_create, :tenantId, :role_project_manager_id, :permission_estimate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_update, :tenantId, :role_project_manager_id, :permission_estimate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_soft_delete, :tenantId, :role_project_manager_id, :permission_estimate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_restore, :tenantId, :role_project_manager_id, :permission_estimate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_send, :tenantId, :role_project_manager_id, :permission_estimate_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_approve, :tenantId, :role_project_manager_id, :permission_estimate_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimate_reject, :tenantId, :role_project_manager_id, :permission_estimate_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimatelineitem_read, :tenantId, :role_project_manager_id, :permission_estimatelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimatelineitem_create, :tenantId, :role_project_manager_id, :permission_estimatelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimatelineitem_update, :tenantId, :role_project_manager_id, :permission_estimatelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimatelineitem_soft_delete, :tenantId, :role_project_manager_id, :permission_estimatelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimatelineitem_restore, :tenantId, :role_project_manager_id, :permission_estimatelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateattachment_read, :tenantId, :role_project_manager_id, :permission_estimateattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateattachment_create, :tenantId, :role_project_manager_id, :permission_estimateattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateattachment_update, :tenantId, :role_project_manager_id, :permission_estimateattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateattachment_soft_delete, :tenantId, :role_project_manager_id, :permission_estimateattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateattachment_restore, :tenantId, :role_project_manager_id, :permission_estimateattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateapproval_read, :tenantId, :role_project_manager_id, :permission_estimateapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateapproval_create, :tenantId, :role_project_manager_id, :permission_estimateapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateapproval_approve, :tenantId, :role_project_manager_id, :permission_estimateapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_estimateapproval_reject, :tenantId, :role_project_manager_id, :permission_estimateapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_requestforquote_read, :tenantId, :role_project_manager_id, :permission_requestforquote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_requestforquote_create, :tenantId, :role_project_manager_id, :permission_requestforquote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_requestforquote_update, :tenantId, :role_project_manager_id, :permission_requestforquote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_requestforquote_send, :tenantId, :role_project_manager_id, :permission_requestforquote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfqline_read, :tenantId, :role_project_manager_id, :permission_rfqline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfqline_create, :tenantId, :role_project_manager_id, :permission_rfqline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfqline_update, :tenantId, :role_project_manager_id, :permission_rfqline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_bid_read, :tenantId, :role_project_manager_id, :permission_bid_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_bid_create, :tenantId, :role_project_manager_id, :permission_bid_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_bid_update, :tenantId, :role_project_manager_id, :permission_bid_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_bid_submit, :tenantId, :role_project_manager_id, :permission_bid_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_read, :tenantId, :role_project_manager_id, :permission_project_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_create, :tenantId, :role_project_manager_id, :permission_project_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_update, :tenantId, :role_project_manager_id, :permission_project_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_soft_delete, :tenantId, :role_project_manager_id, :permission_project_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_restore, :tenantId, :role_project_manager_id, :permission_project_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_archive, :tenantId, :role_project_manager_id, :permission_project_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_activate, :tenantId, :role_project_manager_id, :permission_project_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_deactivate, :tenantId, :role_project_manager_id, :permission_project_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_assign, :tenantId, :role_project_manager_id, :permission_project_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_unassign, :tenantId, :role_project_manager_id, :permission_project_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_project_transfer, :tenantId, :role_project_manager_id, :permission_project_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_read, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_create, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_update, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_soft_delete, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_restore, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_assign, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskassignment_unassign, :tenantId, :role_project_manager_id, :permission_projecttaskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_read, :tenantId, :role_project_manager_id, :permission_projectmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_create, :tenantId, :role_project_manager_id, :permission_projectmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_update, :tenantId, :role_project_manager_id, :permission_projectmember_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_soft_delete, :tenantId, :role_project_manager_id, :permission_projectmember_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_restore, :tenantId, :role_project_manager_id, :permission_projectmember_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_assign, :tenantId, :role_project_manager_id, :permission_projectmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectmember_unassign, :tenantId, :role_project_manager_id, :permission_projectmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectnote_read, :tenantId, :role_project_manager_id, :permission_projectnote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectnote_create, :tenantId, :role_project_manager_id, :permission_projectnote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectnote_update, :tenantId, :role_project_manager_id, :permission_projectnote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectnote_soft_delete, :tenantId, :role_project_manager_id, :permission_projectnote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectnote_restore, :tenantId, :role_project_manager_id, :permission_projectnote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectreport_read, :tenantId, :role_project_manager_id, :permission_projectreport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectreport_create, :tenantId, :role_project_manager_id, :permission_projectreport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectreport_update, :tenantId, :role_project_manager_id, :permission_projectreport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectreport_export, :tenantId, :role_project_manager_id, :permission_projectreport_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectbudgetline_read, :tenantId, :role_project_manager_id, :permission_projectbudgetline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectbudgetline_create, :tenantId, :role_project_manager_id, :permission_projectbudgetline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectbudgetline_update, :tenantId, :role_project_manager_id, :permission_projectbudgetline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectfinancialsnapshot_read, :tenantId, :role_project_manager_id, :permission_projectfinancialsnapshot_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectfinancialsnapshot_export, :tenantId, :role_project_manager_id, :permission_projectfinancialsnapshot_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_read, :tenantId, :role_project_manager_id, :permission_projectphase_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_create, :tenantId, :role_project_manager_id, :permission_projectphase_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_update, :tenantId, :role_project_manager_id, :permission_projectphase_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_soft_delete, :tenantId, :role_project_manager_id, :permission_projectphase_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_restore, :tenantId, :role_project_manager_id, :permission_projectphase_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_activate, :tenantId, :role_project_manager_id, :permission_projectphase_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectphase_deactivate, :tenantId, :role_project_manager_id, :permission_projectphase_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_wbsitem_read, :tenantId, :role_project_manager_id, :permission_wbsitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_wbsitem_create, :tenantId, :role_project_manager_id, :permission_wbsitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_wbsitem_update, :tenantId, :role_project_manager_id, :permission_wbsitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_wbsitem_soft_delete, :tenantId, :role_project_manager_id, :permission_wbsitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_wbsitem_restore, :tenantId, :role_project_manager_id, :permission_wbsitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectlocation_read, :tenantId, :role_project_manager_id, :permission_projectlocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectlocation_create, :tenantId, :role_project_manager_id, :permission_projectlocation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectlocation_update, :tenantId, :role_project_manager_id, :permission_projectlocation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectlocation_soft_delete, :tenantId, :role_project_manager_id, :permission_projectlocation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projectlocation_restore, :tenantId, :role_project_manager_id, :permission_projectlocation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_read, :tenantId, :role_project_manager_id, :permission_projecttask_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_create, :tenantId, :role_project_manager_id, :permission_projecttask_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_update, :tenantId, :role_project_manager_id, :permission_projecttask_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_soft_delete, :tenantId, :role_project_manager_id, :permission_projecttask_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_restore, :tenantId, :role_project_manager_id, :permission_projecttask_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_assign, :tenantId, :role_project_manager_id, :permission_projecttask_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttask_unassign, :tenantId, :role_project_manager_id, :permission_projecttask_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskdependency_read, :tenantId, :role_project_manager_id, :permission_projecttaskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskdependency_create, :tenantId, :role_project_manager_id, :permission_projecttaskdependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskdependency_update, :tenantId, :role_project_manager_id, :permission_projecttaskdependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskdependency_soft_delete, :tenantId, :role_project_manager_id, :permission_projecttaskdependency_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskdependency_restore, :tenantId, :role_project_manager_id, :permission_projecttaskdependency_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskcomment_read, :tenantId, :role_project_manager_id, :permission_projecttaskcomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskcomment_create, :tenantId, :role_project_manager_id, :permission_projecttaskcomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskcomment_update, :tenantId, :role_project_manager_id, :permission_projecttaskcomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskcomment_soft_delete, :tenantId, :role_project_manager_id, :permission_projecttaskcomment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_projecttaskcomment_restore, :tenantId, :role_project_manager_id, :permission_projecttaskcomment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_read, :tenantId, :role_project_manager_id, :permission_changeorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_create, :tenantId, :role_project_manager_id, :permission_changeorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_update, :tenantId, :role_project_manager_id, :permission_changeorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_soft_delete, :tenantId, :role_project_manager_id, :permission_changeorder_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_restore, :tenantId, :role_project_manager_id, :permission_changeorder_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_approve, :tenantId, :role_project_manager_id, :permission_changeorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorder_reject, :tenantId, :role_project_manager_id, :permission_changeorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderline_read, :tenantId, :role_project_manager_id, :permission_changeorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderline_create, :tenantId, :role_project_manager_id, :permission_changeorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderline_update, :tenantId, :role_project_manager_id, :permission_changeorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderapproval_read, :tenantId, :role_project_manager_id, :permission_changeorderapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderapproval_create, :tenantId, :role_project_manager_id, :permission_changeorderapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderapproval_approve, :tenantId, :role_project_manager_id, :permission_changeorderapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_changeorderapproval_reject, :tenantId, :role_project_manager_id, :permission_changeorderapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfi_read, :tenantId, :role_project_manager_id, :permission_rfi_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfi_create, :tenantId, :role_project_manager_id, :permission_rfi_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfi_update, :tenantId, :role_project_manager_id, :permission_rfi_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfi_send, :tenantId, :role_project_manager_id, :permission_rfi_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfireply_read, :tenantId, :role_project_manager_id, :permission_rfireply_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfireply_create, :tenantId, :role_project_manager_id, :permission_rfireply_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_rfireply_update, :tenantId, :role_project_manager_id, :permission_rfireply_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittal_read, :tenantId, :role_project_manager_id, :permission_submittal_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittal_create, :tenantId, :role_project_manager_id, :permission_submittal_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittal_update, :tenantId, :role_project_manager_id, :permission_submittal_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalitem_read, :tenantId, :role_project_manager_id, :permission_submittalitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalitem_create, :tenantId, :role_project_manager_id, :permission_submittalitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalitem_update, :tenantId, :role_project_manager_id, :permission_submittalitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalapproval_read, :tenantId, :role_project_manager_id, :permission_submittalapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalapproval_create, :tenantId, :role_project_manager_id, :permission_submittalapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalapproval_approve, :tenantId, :role_project_manager_id, :permission_submittalapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_submittalapproval_reject, :tenantId, :role_project_manager_id, :permission_submittalapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspection_read, :tenantId, :role_project_manager_id, :permission_inspection_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspection_create, :tenantId, :role_project_manager_id, :permission_inspection_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspection_update, :tenantId, :role_project_manager_id, :permission_inspection_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionitem_read, :tenantId, :role_project_manager_id, :permission_inspectionitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionitem_create, :tenantId, :role_project_manager_id, :permission_inspectionitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionitem_update, :tenantId, :role_project_manager_id, :permission_inspectionitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionapproval_read, :tenantId, :role_project_manager_id, :permission_inspectionapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionapproval_create, :tenantId, :role_project_manager_id, :permission_inspectionapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionapproval_approve, :tenantId, :role_project_manager_id, :permission_inspectionapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inspectionapproval_reject, :tenantId, :role_project_manager_id, :permission_inspectionapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_dailylog_read, :tenantId, :role_project_manager_id, :permission_dailylog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_dailylog_create, :tenantId, :role_project_manager_id, :permission_dailylog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_dailylog_update, :tenantId, :role_project_manager_id, :permission_dailylog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlist_read, :tenantId, :role_project_manager_id, :permission_punchlist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlist_create, :tenantId, :role_project_manager_id, :permission_punchlist_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlist_update, :tenantId, :role_project_manager_id, :permission_punchlist_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlistitem_read, :tenantId, :role_project_manager_id, :permission_punchlistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlistitem_create, :tenantId, :role_project_manager_id, :permission_punchlistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_punchlistitem_update, :tenantId, :role_project_manager_id, :permission_punchlistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_read, :tenantId, :role_project_manager_id, :permission_task_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_create, :tenantId, :role_project_manager_id, :permission_task_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_update, :tenantId, :role_project_manager_id, :permission_task_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_soft_delete, :tenantId, :role_project_manager_id, :permission_task_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_restore, :tenantId, :role_project_manager_id, :permission_task_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_assign, :tenantId, :role_project_manager_id, :permission_task_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_unassign, :tenantId, :role_project_manager_id, :permission_task_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_transfer, :tenantId, :role_project_manager_id, :permission_task_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_activate, :tenantId, :role_project_manager_id, :permission_task_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_task_deactivate, :tenantId, :role_project_manager_id, :permission_task_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_read, :tenantId, :role_project_manager_id, :permission_taskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_create, :tenantId, :role_project_manager_id, :permission_taskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_update, :tenantId, :role_project_manager_id, :permission_taskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_assign, :tenantId, :role_project_manager_id, :permission_taskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_unassign, :tenantId, :role_project_manager_id, :permission_taskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskassignment_transfer, :tenantId, :role_project_manager_id, :permission_taskassignment_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskdependency_read, :tenantId, :role_project_manager_id, :permission_taskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskdependency_create, :tenantId, :role_project_manager_id, :permission_taskdependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskdependency_update, :tenantId, :role_project_manager_id, :permission_taskdependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskdependency_soft_delete, :tenantId, :role_project_manager_id, :permission_taskdependency_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskdependency_restore, :tenantId, :role_project_manager_id, :permission_taskdependency_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskattachment_read, :tenantId, :role_project_manager_id, :permission_taskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskattachment_create, :tenantId, :role_project_manager_id, :permission_taskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskattachment_update, :tenantId, :role_project_manager_id, :permission_taskattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskattachment_soft_delete, :tenantId, :role_project_manager_id, :permission_taskattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskattachment_restore, :tenantId, :role_project_manager_id, :permission_taskattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskchecklistitem_read, :tenantId, :role_project_manager_id, :permission_taskchecklistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskchecklistitem_create, :tenantId, :role_project_manager_id, :permission_taskchecklistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskchecklistitem_update, :tenantId, :role_project_manager_id, :permission_taskchecklistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskchecklistitem_soft_delete, :tenantId, :role_project_manager_id, :permission_taskchecklistitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_taskchecklistitem_restore, :tenantId, :role_project_manager_id, :permission_taskchecklistitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoice_read, :tenantId, :role_project_manager_id, :permission_invoice_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoice_create, :tenantId, :role_project_manager_id, :permission_invoice_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoice_update, :tenantId, :role_project_manager_id, :permission_invoice_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoice_send, :tenantId, :role_project_manager_id, :permission_invoice_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoice_soft_delete, :tenantId, :role_project_manager_id, :permission_invoice_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoicelineitem_read, :tenantId, :role_project_manager_id, :permission_invoicelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoicelineitem_create, :tenantId, :role_project_manager_id, :permission_invoicelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_invoicelineitem_update, :tenantId, :role_project_manager_id, :permission_invoicelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_payment_read, :tenantId, :role_project_manager_id, :permission_payment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_paymentschedule_read, :tenantId, :role_project_manager_id, :permission_paymentschedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_read, :tenantId, :role_project_manager_id, :permission_purchaseorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_create, :tenantId, :role_project_manager_id, :permission_purchaseorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_update, :tenantId, :role_project_manager_id, :permission_purchaseorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_send, :tenantId, :role_project_manager_id, :permission_purchaseorder_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_approve, :tenantId, :role_project_manager_id, :permission_purchaseorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorder_reject, :tenantId, :role_project_manager_id, :permission_purchaseorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorderline_read, :tenantId, :role_project_manager_id, :permission_purchaseorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorderline_create, :tenantId, :role_project_manager_id, :permission_purchaseorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_purchaseorderline_update, :tenantId, :role_project_manager_id, :permission_purchaseorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expense_read, :tenantId, :role_project_manager_id, :permission_expense_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expense_create, :tenantId, :role_project_manager_id, :permission_expense_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expense_update, :tenantId, :role_project_manager_id, :permission_expense_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expense_approve, :tenantId, :role_project_manager_id, :permission_expense_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expense_reject, :tenantId, :role_project_manager_id, :permission_expense_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expenseline_read, :tenantId, :role_project_manager_id, :permission_expenseline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expenseline_create, :tenantId, :role_project_manager_id, :permission_expenseline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expenseline_update, :tenantId, :role_project_manager_id, :permission_expenseline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expensereceipt_read, :tenantId, :role_project_manager_id, :permission_expensereceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expensereceipt_create, :tenantId, :role_project_manager_id, :permission_expensereceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expensereceipt_update, :tenantId, :role_project_manager_id, :permission_expensereceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expensereceipt_approve, :tenantId, :role_project_manager_id, :permission_expensereceipt_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_expensereceipt_reject, :tenantId, :role_project_manager_id, :permission_expensereceipt_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_payrollrun_read, :tenantId, :role_project_manager_id, :permission_payrollrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_payrollitem_read, :tenantId, :role_project_manager_id, :permission_payrollitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_payrollrun_submit, :tenantId, :role_project_manager_id, :permission_payrollrun_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_payrollrun_approve, :tenantId, :role_project_manager_id, :permission_payrollrun_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_clockinclockout_read, :tenantId, :role_project_manager_id, :permission_clockinclockout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_clockinclockout_create, :tenantId, :role_project_manager_id, :permission_clockinclockout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_clockinclockout_update, :tenantId, :role_project_manager_id, :permission_clockinclockout_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_clockinclockout_approve, :tenantId, :role_project_manager_id, :permission_clockinclockout_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_clockinclockout_reject, :tenantId, :role_project_manager_id, :permission_clockinclockout_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_read, :tenantId, :role_project_manager_id, :permission_schedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_create, :tenantId, :role_project_manager_id, :permission_schedule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_update, :tenantId, :role_project_manager_id, :permission_schedule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_soft_delete, :tenantId, :role_project_manager_id, :permission_schedule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_restore, :tenantId, :role_project_manager_id, :permission_schedule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_schedule_publish, :tenantId, :role_project_manager_id, :permission_schedule_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_scheduleexception_read, :tenantId, :role_project_manager_id, :permission_scheduleexception_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_scheduleexception_create, :tenantId, :role_project_manager_id, :permission_scheduleexception_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_scheduleexception_update, :tenantId, :role_project_manager_id, :permission_scheduleexception_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_scheduleexception_approve, :tenantId, :role_project_manager_id, :permission_scheduleexception_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_scheduleexception_reject, :tenantId, :role_project_manager_id, :permission_scheduleexception_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leave_read, :tenantId, :role_project_manager_id, :permission_leave_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leave_create, :tenantId, :role_project_manager_id, :permission_leave_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leave_update, :tenantId, :role_project_manager_id, :permission_leave_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leave_approve, :tenantId, :role_project_manager_id, :permission_leave_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leave_reject, :tenantId, :role_project_manager_id, :permission_leave_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheet_read, :tenantId, :role_project_manager_id, :permission_timesheet_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheet_create, :tenantId, :role_project_manager_id, :permission_timesheet_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheet_update, :tenantId, :role_project_manager_id, :permission_timesheet_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheet_approve, :tenantId, :role_project_manager_id, :permission_timesheet_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheet_reject, :tenantId, :role_project_manager_id, :permission_timesheet_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheetentry_read, :tenantId, :role_project_manager_id, :permission_timesheetentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheetentry_create, :tenantId, :role_project_manager_id, :permission_timesheetentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_timesheetentry_update, :tenantId, :role_project_manager_id, :permission_timesheetentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leaveofabsence_read, :tenantId, :role_project_manager_id, :permission_leaveofabsence_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leaveofabsence_approve, :tenantId, :role_project_manager_id, :permission_leaveofabsence_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_leaveofabsence_reject, :tenantId, :role_project_manager_id, :permission_leaveofabsence_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventoryitem_read, :tenantId, :role_project_manager_id, :permission_inventoryitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventoryitem_update, :tenantId, :role_project_manager_id, :permission_inventoryitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventoryitem_assign, :tenantId, :role_project_manager_id, :permission_inventoryitem_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventoryitem_unassign, :tenantId, :role_project_manager_id, :permission_inventoryitem_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventoryitem_transfer, :tenantId, :role_project_manager_id, :permission_inventoryitem_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorytransaction_read, :tenantId, :role_project_manager_id, :permission_inventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorytransaction_create, :tenantId, :role_project_manager_id, :permission_inventorytransaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorytransaction_update, :tenantId, :role_project_manager_id, :permission_inventorytransaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorycount_read, :tenantId, :role_project_manager_id, :permission_inventorycount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorycount_create, :tenantId, :role_project_manager_id, :permission_inventorycount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_inventorycount_update, :tenantId, :role_project_manager_id, :permission_inventorycount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_asset_read, :tenantId, :role_project_manager_id, :permission_asset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_asset_assign, :tenantId, :role_project_manager_id, :permission_asset_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_asset_unassign, :tenantId, :role_project_manager_id, :permission_asset_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_asset_transfer, :tenantId, :role_project_manager_id, :permission_asset_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_assetassignment_read, :tenantId, :role_project_manager_id, :permission_assetassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_assetassignment_create, :tenantId, :role_project_manager_id, :permission_assetassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_assetassignment_update, :tenantId, :role_project_manager_id, :permission_assetassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_assetassignment_assign, :tenantId, :role_project_manager_id, :permission_assetassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_assetassignment_unassign, :tenantId, :role_project_manager_id, :permission_assetassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channel_read, :tenantId, :role_project_manager_id, :permission_channel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channel_create, :tenantId, :role_project_manager_id, :permission_channel_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channel_update, :tenantId, :role_project_manager_id, :permission_channel_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channel_archive, :tenantId, :role_project_manager_id, :permission_channel_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channelmember_read, :tenantId, :role_project_manager_id, :permission_channelmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channelmember_create, :tenantId, :role_project_manager_id, :permission_channelmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channelmember_assign, :tenantId, :role_project_manager_id, :permission_channelmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_channelmember_unassign, :tenantId, :role_project_manager_id, :permission_channelmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directchat_read, :tenantId, :role_project_manager_id, :permission_directchat_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directchat_create, :tenantId, :role_project_manager_id, :permission_directchat_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directchat_update, :tenantId, :role_project_manager_id, :permission_directchat_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directmessage_read, :tenantId, :role_project_manager_id, :permission_directmessage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directmessage_create, :tenantId, :role_project_manager_id, :permission_directmessage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directmessage_update, :tenantId, :role_project_manager_id, :permission_directmessage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_directmessage_soft_delete, :tenantId, :role_project_manager_id, :permission_directmessage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_notification_read, :tenantId, :role_project_manager_id, :permission_notification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_notificationpreference_read, :tenantId, :role_project_manager_id, :permission_notificationpreference_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_notificationpreference_update, :tenantId, :role_project_manager_id, :permission_notificationpreference_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_fileobject_read, :tenantId, :role_project_manager_id, :permission_fileobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_fileobject_create, :tenantId, :role_project_manager_id, :permission_fileobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_fileobject_update, :tenantId, :role_project_manager_id, :permission_fileobject_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_fileobject_soft_delete, :tenantId, :role_project_manager_id, :permission_fileobject_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_fileobject_restore, :tenantId, :role_project_manager_id, :permission_fileobject_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_attachment_read, :tenantId, :role_project_manager_id, :permission_attachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_attachment_create, :tenantId, :role_project_manager_id, :permission_attachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_attachment_update, :tenantId, :role_project_manager_id, :permission_attachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_attachment_soft_delete, :tenantId, :role_project_manager_id, :permission_attachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_attachment_restore, :tenantId, :role_project_manager_id, :permission_attachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contracttemplate_read, :tenantId, :role_project_manager_id, :permission_contracttemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_termstemplate_read, :tenantId, :role_project_manager_id, :permission_termstemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendor_read, :tenantId, :role_project_manager_id, :permission_vendor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendor_create, :tenantId, :role_project_manager_id, :permission_vendor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendor_update, :tenantId, :role_project_manager_id, :permission_vendor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendor_assign, :tenantId, :role_project_manager_id, :permission_vendor_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendor_unassign, :tenantId, :role_project_manager_id, :permission_vendor_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendorcontact_read, :tenantId, :role_project_manager_id, :permission_vendorcontact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendorcontact_create, :tenantId, :role_project_manager_id, :permission_vendorcontact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_vendorcontact_update, :tenantId, :role_project_manager_id, :permission_vendorcontact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contract_read, :tenantId, :role_project_manager_id, :permission_contract_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contract_create, :tenantId, :role_project_manager_id, :permission_contract_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_contract_update, :tenantId, :role_project_manager_id, :permission_contract_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_read, :tenantId, :role_project_manager_id, :permission_approvalrequest_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_create, :tenantId, :role_project_manager_id, :permission_approvalrequest_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_update, :tenantId, :role_project_manager_id, :permission_approvalrequest_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_submit, :tenantId, :role_project_manager_id, :permission_approvalrequest_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_approve, :tenantId, :role_project_manager_id, :permission_approvalrequest_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrequest_reject, :tenantId, :role_project_manager_id, :permission_approvalrequest_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvaldecision_read, :tenantId, :role_project_manager_id, :permission_approvaldecision_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvaldecision_create, :tenantId, :role_project_manager_id, :permission_approvaldecision_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_approvalrule_read, :tenantId, :role_project_manager_id, :permission_approvalrule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_location_read, :tenantId, :role_project_manager_id, :permission_location_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_country_read, :tenantId, :role_project_manager_id, :permission_country_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_region_read, :tenantId, :role_project_manager_id, :permission_region_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_stateprovince_read, :tenantId, :role_project_manager_id, :permission_stateprovince_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_pricelist_read, :tenantId, :role_project_manager_id, :permission_pricelist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_pricelistitem_read, :tenantId, :role_project_manager_id, :permission_pricelistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_costcenter_read, :tenantId, :role_project_manager_id, :permission_costcenter_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_costcategory_read, :tenantId, :role_project_manager_id, :permission_costcategory_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_costcode_read, :tenantId, :role_project_manager_id, :permission_costcode_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_worktype_read, :tenantId, :role_project_manager_id, :permission_worktype_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_tenantauditlog_read, :tenantId, :role_project_manager_id, :permission_tenantauditlog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_exportjob_read, :tenantId, :role_project_manager_id, :permission_exportjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_exportjob_create, :tenantId, :role_project_manager_id, :permission_exportjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_reportdefinition_read, :tenantId, :role_project_manager_id, :permission_reportdefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_dashboarddefinition_read, :tenantId, :role_project_manager_id, :permission_dashboarddefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_read, :tenantId, :role_project_manager_id, :permission_roomscansession_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_list, :tenantId, :role_project_manager_id, :permission_roomscansession_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_create, :tenantId, :role_project_manager_id, :permission_roomscansession_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_update, :tenantId, :role_project_manager_id, :permission_roomscansession_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_soft_delete, :tenantId, :role_project_manager_id, :permission_roomscansession_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_restore, :tenantId, :role_project_manager_id, :permission_roomscansession_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_activate, :tenantId, :role_project_manager_id, :permission_roomscansession_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_deactivate, :tenantId, :role_project_manager_id, :permission_roomscansession_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscansession_export, :tenantId, :role_project_manager_id, :permission_roomscansession_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_read, :tenantId, :role_project_manager_id, :permission_roomscanfile_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_list, :tenantId, :role_project_manager_id, :permission_roomscanfile_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_create, :tenantId, :role_project_manager_id, :permission_roomscanfile_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_update, :tenantId, :role_project_manager_id, :permission_roomscanfile_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_soft_delete, :tenantId, :role_project_manager_id, :permission_roomscanfile_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_restore, :tenantId, :role_project_manager_id, :permission_roomscanfile_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomscanfile_export, :tenantId, :role_project_manager_id, :permission_roomscanfile_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_read, :tenantId, :role_project_manager_id, :permission_roommodel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_list, :tenantId, :role_project_manager_id, :permission_roommodel_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_create, :tenantId, :role_project_manager_id, :permission_roommodel_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_update, :tenantId, :role_project_manager_id, :permission_roommodel_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_soft_delete, :tenantId, :role_project_manager_id, :permission_roommodel_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_restore, :tenantId, :role_project_manager_id, :permission_roommodel_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_publish, :tenantId, :role_project_manager_id, :permission_roommodel_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_export, :tenantId, :role_project_manager_id, :permission_roommodel_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommodel_duplicate, :tenantId, :role_project_manager_id, :permission_roommodel_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_read, :tenantId, :role_project_manager_id, :permission_roommeasurement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_list, :tenantId, :role_project_manager_id, :permission_roommeasurement_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_create, :tenantId, :role_project_manager_id, :permission_roommeasurement_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_update, :tenantId, :role_project_manager_id, :permission_roommeasurement_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_soft_delete, :tenantId, :role_project_manager_id, :permission_roommeasurement_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_restore, :tenantId, :role_project_manager_id, :permission_roommeasurement_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roommeasurement_export, :tenantId, :role_project_manager_id, :permission_roommeasurement_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_read, :tenantId, :role_project_manager_id, :permission_roomobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_list, :tenantId, :role_project_manager_id, :permission_roomobject_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_create, :tenantId, :role_project_manager_id, :permission_roomobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_update, :tenantId, :role_project_manager_id, :permission_roomobject_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_soft_delete, :tenantId, :role_project_manager_id, :permission_roomobject_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_restore, :tenantId, :role_project_manager_id, :permission_roomobject_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomobject_export, :tenantId, :role_project_manager_id, :permission_roomobject_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_read, :tenantId, :role_project_manager_id, :permission_roomsurface_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_list, :tenantId, :role_project_manager_id, :permission_roomsurface_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_create, :tenantId, :role_project_manager_id, :permission_roomsurface_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_update, :tenantId, :role_project_manager_id, :permission_roomsurface_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_soft_delete, :tenantId, :role_project_manager_id, :permission_roomsurface_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_restore, :tenantId, :role_project_manager_id, :permission_roomsurface_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomsurface_export, :tenantId, :role_project_manager_id, :permission_roomsurface_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_read, :tenantId, :role_project_manager_id, :permission_roomannotation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_list, :tenantId, :role_project_manager_id, :permission_roomannotation_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_create, :tenantId, :role_project_manager_id, :permission_roomannotation_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_update, :tenantId, :role_project_manager_id, :permission_roomannotation_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_soft_delete, :tenantId, :role_project_manager_id, :permission_roomannotation_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_restore, :tenantId, :role_project_manager_id, :permission_roomannotation_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_publish, :tenantId, :role_project_manager_id, :permission_roomannotation_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomannotation_export, :tenantId, :role_project_manager_id, :permission_roomannotation_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_read, :tenantId, :role_project_manager_id, :permission_roomexport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_list, :tenantId, :role_project_manager_id, :permission_roomexport_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_create, :tenantId, :role_project_manager_id, :permission_roomexport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_update, :tenantId, :role_project_manager_id, :permission_roomexport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_soft_delete, :tenantId, :role_project_manager_id, :permission_roomexport_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_restore, :tenantId, :role_project_manager_id, :permission_roomexport_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_export, :tenantId, :role_project_manager_id, :permission_roomexport_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomexport_send, :tenantId, :role_project_manager_id, :permission_roomexport_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_read, :tenantId, :role_project_manager_id, :permission_roomplanpreset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_list, :tenantId, :role_project_manager_id, :permission_roomplanpreset_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_create, :tenantId, :role_project_manager_id, :permission_roomplanpreset_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_update, :tenantId, :role_project_manager_id, :permission_roomplanpreset_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_soft_delete, :tenantId, :role_project_manager_id, :permission_roomplanpreset_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_restore, :tenantId, :role_project_manager_id, :permission_roomplanpreset_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_duplicate, :tenantId, :role_project_manager_id, :permission_roomplanpreset_duplicate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomplanpreset_publish, :tenantId, :role_project_manager_id, :permission_roomplanpreset_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_read, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_list, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_list_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_create, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_update, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_soft_delete, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_restore, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_activate, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_project_manager_roomprocessingjob_deactivate, :tenantId, :role_project_manager_id, :permission_roomprocessingjob_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;

-- WORKER Role Permissions
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_user_read, :tenantId, :role_worker_id, :permission_user_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_user_update, :tenantId, :role_worker_id, :permission_user_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_member_read, :tenantId, :role_worker_id, :permission_member_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_member_update, :tenantId, :role_worker_id, :permission_member_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_membersettings_read, :tenantId, :role_worker_id, :permission_membersettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_membersettings_update, :tenantId, :role_worker_id, :permission_membersettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_memberdocument_read, :tenantId, :role_worker_id, :permission_memberdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_memberdocument_create, :tenantId, :role_worker_id, :permission_memberdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_memberdocument_update, :tenantId, :role_worker_id, :permission_memberdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_project_read, :tenantId, :role_worker_id, :permission_project_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttaskassignment_read, :tenantId, :role_worker_id, :permission_projecttaskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projectnote_read, :tenantId, :role_worker_id, :permission_projectnote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projectnote_create, :tenantId, :role_worker_id, :permission_projectnote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projectnote_update, :tenantId, :role_worker_id, :permission_projectnote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projectlocation_read, :tenantId, :role_worker_id, :permission_projectlocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttask_read, :tenantId, :role_worker_id, :permission_projecttask_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttask_update, :tenantId, :role_worker_id, :permission_projecttask_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttaskcomment_read, :tenantId, :role_worker_id, :permission_projecttaskcomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttaskcomment_create, :tenantId, :role_worker_id, :permission_projecttaskcomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_projecttaskcomment_update, :tenantId, :role_worker_id, :permission_projecttaskcomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_dailylog_read, :tenantId, :role_worker_id, :permission_dailylog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_dailylog_create, :tenantId, :role_worker_id, :permission_dailylog_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_dailylog_update, :tenantId, :role_worker_id, :permission_dailylog_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_task_read, :tenantId, :role_worker_id, :permission_task_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_task_update, :tenantId, :role_worker_id, :permission_task_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskassignment_read, :tenantId, :role_worker_id, :permission_taskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskdependency_read, :tenantId, :role_worker_id, :permission_taskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskattachment_read, :tenantId, :role_worker_id, :permission_taskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskattachment_create, :tenantId, :role_worker_id, :permission_taskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskchecklistitem_read, :tenantId, :role_worker_id, :permission_taskchecklistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_taskchecklistitem_update, :tenantId, :role_worker_id, :permission_taskchecklistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expense_read, :tenantId, :role_worker_id, :permission_expense_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expense_create, :tenantId, :role_worker_id, :permission_expense_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expense_update, :tenantId, :role_worker_id, :permission_expense_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expenseline_read, :tenantId, :role_worker_id, :permission_expenseline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expenseline_create, :tenantId, :role_worker_id, :permission_expenseline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expenseline_update, :tenantId, :role_worker_id, :permission_expenseline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expensereceipt_read, :tenantId, :role_worker_id, :permission_expensereceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expensereceipt_create, :tenantId, :role_worker_id, :permission_expensereceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_expensereceipt_update, :tenantId, :role_worker_id, :permission_expensereceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_payrollrun_read, :tenantId, :role_worker_id, :permission_payrollrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_payrollitem_read, :tenantId, :role_worker_id, :permission_payrollitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_paystatement_read, :tenantId, :role_worker_id, :permission_paystatement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_clockinclockout_read, :tenantId, :role_worker_id, :permission_clockinclockout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_clockinclockout_create, :tenantId, :role_worker_id, :permission_clockinclockout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_clockinclockout_update, :tenantId, :role_worker_id, :permission_clockinclockout_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_schedule_read, :tenantId, :role_worker_id, :permission_schedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_scheduleexception_read, :tenantId, :role_worker_id, :permission_scheduleexception_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_scheduleexception_create, :tenantId, :role_worker_id, :permission_scheduleexception_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_scheduleexception_update, :tenantId, :role_worker_id, :permission_scheduleexception_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_leave_read, :tenantId, :role_worker_id, :permission_leave_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_leave_create, :tenantId, :role_worker_id, :permission_leave_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_leave_update, :tenantId, :role_worker_id, :permission_leave_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheet_read, :tenantId, :role_worker_id, :permission_timesheet_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheet_create, :tenantId, :role_worker_id, :permission_timesheet_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheet_update, :tenantId, :role_worker_id, :permission_timesheet_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheetentry_read, :tenantId, :role_worker_id, :permission_timesheetentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheetentry_create, :tenantId, :role_worker_id, :permission_timesheetentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_timesheetentry_update, :tenantId, :role_worker_id, :permission_timesheetentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_inventoryitem_read, :tenantId, :role_worker_id, :permission_inventoryitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_inventorytransaction_read, :tenantId, :role_worker_id, :permission_inventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_asset_read, :tenantId, :role_worker_id, :permission_asset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_assetassignment_read, :tenantId, :role_worker_id, :permission_assetassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_channel_read, :tenantId, :role_worker_id, :permission_channel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_channelmember_read, :tenantId, :role_worker_id, :permission_channelmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directchat_read, :tenantId, :role_worker_id, :permission_directchat_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directchat_create, :tenantId, :role_worker_id, :permission_directchat_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directmessage_read, :tenantId, :role_worker_id, :permission_directmessage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directmessage_create, :tenantId, :role_worker_id, :permission_directmessage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directmessage_update, :tenantId, :role_worker_id, :permission_directmessage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_directmessage_soft_delete, :tenantId, :role_worker_id, :permission_directmessage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_notification_read, :tenantId, :role_worker_id, :permission_notification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_notificationpreference_read, :tenantId, :role_worker_id, :permission_notificationpreference_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_notificationpreference_update, :tenantId, :role_worker_id, :permission_notificationpreference_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_fileobject_read, :tenantId, :role_worker_id, :permission_fileobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_fileobject_create, :tenantId, :role_worker_id, :permission_fileobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_attachment_read, :tenantId, :role_worker_id, :permission_attachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_worker_attachment_create, :tenantId, :role_worker_id, :permission_attachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;

-- DRIVER Role Permissions
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_user_read, :tenantId, :role_driver_id, :permission_user_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_user_update, :tenantId, :role_driver_id, :permission_user_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_member_read, :tenantId, :role_driver_id, :permission_member_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_member_update, :tenantId, :role_driver_id, :permission_member_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_membersettings_read, :tenantId, :role_driver_id, :permission_membersettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_membersettings_update, :tenantId, :role_driver_id, :permission_membersettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_project_read, :tenantId, :role_driver_id, :permission_project_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_projecttaskassignment_read, :tenantId, :role_driver_id, :permission_projecttaskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_projectlocation_read, :tenantId, :role_driver_id, :permission_projectlocation_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_task_read, :tenantId, :role_driver_id, :permission_task_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_task_update, :tenantId, :role_driver_id, :permission_task_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_taskassignment_read, :tenantId, :role_driver_id, :permission_taskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_taskattachment_read, :tenantId, :role_driver_id, :permission_taskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_taskattachment_create, :tenantId, :role_driver_id, :permission_taskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expense_read, :tenantId, :role_driver_id, :permission_expense_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expense_create, :tenantId, :role_driver_id, :permission_expense_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expense_update, :tenantId, :role_driver_id, :permission_expense_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expensereceipt_read, :tenantId, :role_driver_id, :permission_expensereceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expensereceipt_create, :tenantId, :role_driver_id, :permission_expensereceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_expensereceipt_update, :tenantId, :role_driver_id, :permission_expensereceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_payrollrun_read, :tenantId, :role_driver_id, :permission_payrollrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_payrollitem_read, :tenantId, :role_driver_id, :permission_payrollitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_paystatement_read, :tenantId, :role_driver_id, :permission_paystatement_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_clockinclockout_read, :tenantId, :role_driver_id, :permission_clockinclockout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_clockinclockout_create, :tenantId, :role_driver_id, :permission_clockinclockout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_schedule_read, :tenantId, :role_driver_id, :permission_schedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_leave_read, :tenantId, :role_driver_id, :permission_leave_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_leave_create, :tenantId, :role_driver_id, :permission_leave_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_leave_update, :tenantId, :role_driver_id, :permission_leave_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_inventoryitem_read, :tenantId, :role_driver_id, :permission_inventoryitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_inventorytransaction_read, :tenantId, :role_driver_id, :permission_inventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directchat_read, :tenantId, :role_driver_id, :permission_directchat_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directchat_create, :tenantId, :role_driver_id, :permission_directchat_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directmessage_read, :tenantId, :role_driver_id, :permission_directmessage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directmessage_create, :tenantId, :role_driver_id, :permission_directmessage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directmessage_update, :tenantId, :role_driver_id, :permission_directmessage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_directmessage_soft_delete, :tenantId, :role_driver_id, :permission_directmessage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_notification_read, :tenantId, :role_driver_id, :permission_notification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_notificationpreference_read, :tenantId, :role_driver_id, :permission_notificationpreference_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_driver_notificationpreference_update, :tenantId, :role_driver_id, :permission_notificationpreference_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;

-- VIEWER Role Permissions
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenant_read, :tenantId, :role_viewer_id, :permission_tenant_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenant_update, :tenantId, :role_viewer_id, :permission_tenant_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantsettings_read, :tenantId, :role_viewer_id, :permission_tenantsettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantsettings_update, :tenantId, :role_viewer_id, :permission_tenantsettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantsettings_activate, :tenantId, :role_viewer_id, :permission_tenantsettings_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantsettings_deactivate, :tenantId, :role_viewer_id, :permission_tenantsettings_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantmetrics_read, :tenantId, :role_viewer_id, :permission_tenantmetrics_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantmetrics_export, :tenantId, :role_viewer_id, :permission_tenantmetrics_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantfeatureflag_read, :tenantId, :role_viewer_id, :permission_tenantfeatureflag_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantfeatureflag_create, :tenantId, :role_viewer_id, :permission_tenantfeatureflag_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantfeatureflag_update, :tenantId, :role_viewer_id, :permission_tenantfeatureflag_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantfeatureflag_activate, :tenantId, :role_viewer_id, :permission_tenantfeatureflag_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantfeatureflag_deactivate, :tenantId, :role_viewer_id, :permission_tenantfeatureflag_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantusagerecord_read, :tenantId, :role_viewer_id, :permission_tenantusagerecord_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantusagerecord_export, :tenantId, :role_viewer_id, :permission_tenantusagerecord_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_user_read, :tenantId, :role_viewer_id, :permission_user_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_user_update, :tenantId, :role_viewer_id, :permission_user_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_read, :tenantId, :role_viewer_id, :permission_member_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_create, :tenantId, :role_viewer_id, :permission_member_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_update, :tenantId, :role_viewer_id, :permission_member_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_soft_delete, :tenantId, :role_viewer_id, :permission_member_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_restore, :tenantId, :role_viewer_id, :permission_member_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_assign, :tenantId, :role_viewer_id, :permission_member_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_member_unassign, :tenantId, :role_viewer_id, :permission_member_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_membersettings_read, :tenantId, :role_viewer_id, :permission_membersettings_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_membersettings_update, :tenantId, :role_viewer_id, :permission_membersettings_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_memberdocument_read, :tenantId, :role_viewer_id, :permission_memberdocument_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_memberdocument_create, :tenantId, :role_viewer_id, :permission_memberdocument_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_memberdocument_update, :tenantId, :role_viewer_id, :permission_memberdocument_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_role_read, :tenantId, :role_viewer_id, :permission_role_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_role_create, :tenantId, :role_viewer_id, :permission_role_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_role_update, :tenantId, :role_viewer_id, :permission_role_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_role_soft_delete, :tenantId, :role_viewer_id, :permission_role_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_role_restore, :tenantId, :role_viewer_id, :permission_role_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_permission_read, :tenantId, :role_viewer_id, :permission_permission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rolepermission_read, :tenantId, :role_viewer_id, :permission_rolepermission_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rolepermission_create, :tenantId, :role_viewer_id, :permission_rolepermission_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rolepermission_soft_delete, :tenantId, :role_viewer_id, :permission_rolepermission_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rolepermission_restore, :tenantId, :role_viewer_id, :permission_rolepermission_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_read, :tenantId, :role_viewer_id, :permission_account_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_create, :tenantId, :role_viewer_id, :permission_account_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_update, :tenantId, :role_viewer_id, :permission_account_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_soft_delete, :tenantId, :role_viewer_id, :permission_account_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_restore, :tenantId, :role_viewer_id, :permission_account_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_account_hard_delete, :tenantId, :role_viewer_id, :permission_account_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_read, :tenantId, :role_viewer_id, :permission_accountaddress_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_create, :tenantId, :role_viewer_id, :permission_accountaddress_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_update, :tenantId, :role_viewer_id, :permission_accountaddress_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_soft_delete, :tenantId, :role_viewer_id, :permission_accountaddress_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_restore, :tenantId, :role_viewer_id, :permission_accountaddress_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_accountaddress_hard_delete, :tenantId, :role_viewer_id, :permission_accountaddress_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_read, :tenantId, :role_viewer_id, :permission_contact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_create, :tenantId, :role_viewer_id, :permission_contact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_update, :tenantId, :role_viewer_id, :permission_contact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_soft_delete, :tenantId, :role_viewer_id, :permission_contact_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_restore, :tenantId, :role_viewer_id, :permission_contact_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contact_hard_delete, :tenantId, :role_viewer_id, :permission_contact_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_read, :tenantId, :role_viewer_id, :permission_lead_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_create, :tenantId, :role_viewer_id, :permission_lead_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_update, :tenantId, :role_viewer_id, :permission_lead_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_soft_delete, :tenantId, :role_viewer_id, :permission_lead_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_restore, :tenantId, :role_viewer_id, :permission_lead_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_hard_delete, :tenantId, :role_viewer_id, :permission_lead_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_assign, :tenantId, :role_viewer_id, :permission_lead_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_lead_unassign, :tenantId, :role_viewer_id, :permission_lead_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leadactivity_read, :tenantId, :role_viewer_id, :permission_leadactivity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leadactivity_create, :tenantId, :role_viewer_id, :permission_leadactivity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leadactivity_update, :tenantId, :role_viewer_id, :permission_leadactivity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leadactivity_soft_delete, :tenantId, :role_viewer_id, :permission_leadactivity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leadactivity_restore, :tenantId, :role_viewer_id, :permission_leadactivity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_read, :tenantId, :role_viewer_id, :permission_opportunity_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_create, :tenantId, :role_viewer_id, :permission_opportunity_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_update, :tenantId, :role_viewer_id, :permission_opportunity_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_soft_delete, :tenantId, :role_viewer_id, :permission_opportunity_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_restore, :tenantId, :role_viewer_id, :permission_opportunity_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_hard_delete, :tenantId, :role_viewer_id, :permission_opportunity_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_assign, :tenantId, :role_viewer_id, :permission_opportunity_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunity_unassign, :tenantId, :role_viewer_id, :permission_opportunity_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitystage_read, :tenantId, :role_viewer_id, :permission_opportunitystage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitystage_create, :tenantId, :role_viewer_id, :permission_opportunitystage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitystage_update, :tenantId, :role_viewer_id, :permission_opportunitystage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitylineitem_read, :tenantId, :role_viewer_id, :permission_opportunitylineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitylineitem_create, :tenantId, :role_viewer_id, :permission_opportunitylineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitylineitem_update, :tenantId, :role_viewer_id, :permission_opportunitylineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitylineitem_soft_delete, :tenantId, :role_viewer_id, :permission_opportunitylineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_opportunitylineitem_restore, :tenantId, :role_viewer_id, :permission_opportunitylineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_read, :tenantId, :role_viewer_id, :permission_quote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_create, :tenantId, :role_viewer_id, :permission_quote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_update, :tenantId, :role_viewer_id, :permission_quote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_soft_delete, :tenantId, :role_viewer_id, :permission_quote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_restore, :tenantId, :role_viewer_id, :permission_quote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_hard_delete, :tenantId, :role_viewer_id, :permission_quote_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_send, :tenantId, :role_viewer_id, :permission_quote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_approve, :tenantId, :role_viewer_id, :permission_quote_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quote_reject, :tenantId, :role_viewer_id, :permission_quote_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quotelineitem_read, :tenantId, :role_viewer_id, :permission_quotelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quotelineitem_create, :tenantId, :role_viewer_id, :permission_quotelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quotelineitem_update, :tenantId, :role_viewer_id, :permission_quotelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quotelineitem_soft_delete, :tenantId, :role_viewer_id, :permission_quotelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_quotelineitem_restore, :tenantId, :role_viewer_id, :permission_quotelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_read, :tenantId, :role_viewer_id, :permission_estimate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_create, :tenantId, :role_viewer_id, :permission_estimate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_update, :tenantId, :role_viewer_id, :permission_estimate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_soft_delete, :tenantId, :role_viewer_id, :permission_estimate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_restore, :tenantId, :role_viewer_id, :permission_estimate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_hard_delete, :tenantId, :role_viewer_id, :permission_estimate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_send, :tenantId, :role_viewer_id, :permission_estimate_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_approve, :tenantId, :role_viewer_id, :permission_estimate_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimate_reject, :tenantId, :role_viewer_id, :permission_estimate_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatelineitem_read, :tenantId, :role_viewer_id, :permission_estimatelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatelineitem_create, :tenantId, :role_viewer_id, :permission_estimatelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatelineitem_update, :tenantId, :role_viewer_id, :permission_estimatelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatelineitem_soft_delete, :tenantId, :role_viewer_id, :permission_estimatelineitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatelineitem_restore, :tenantId, :role_viewer_id, :permission_estimatelineitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateattachment_read, :tenantId, :role_viewer_id, :permission_estimateattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateattachment_create, :tenantId, :role_viewer_id, :permission_estimateattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateattachment_update, :tenantId, :role_viewer_id, :permission_estimateattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateattachment_soft_delete, :tenantId, :role_viewer_id, :permission_estimateattachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateattachment_restore, :tenantId, :role_viewer_id, :permission_estimateattachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateapproval_read, :tenantId, :role_viewer_id, :permission_estimateapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateapproval_create, :tenantId, :role_viewer_id, :permission_estimateapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateapproval_approve, :tenantId, :role_viewer_id, :permission_estimateapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateapproval_reject, :tenantId, :role_viewer_id, :permission_estimateapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatecomment_read, :tenantId, :role_viewer_id, :permission_estimatecomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatecomment_create, :tenantId, :role_viewer_id, :permission_estimatecomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatecomment_update, :tenantId, :role_viewer_id, :permission_estimatecomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatecomment_soft_delete, :tenantId, :role_viewer_id, :permission_estimatecomment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatecomment_restore, :tenantId, :role_viewer_id, :permission_estimatecomment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatediscount_read, :tenantId, :role_viewer_id, :permission_estimatediscount_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatediscount_create, :tenantId, :role_viewer_id, :permission_estimatediscount_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatediscount_update, :tenantId, :role_viewer_id, :permission_estimatediscount_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatediscount_soft_delete, :tenantId, :role_viewer_id, :permission_estimatediscount_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatediscount_restore, :tenantId, :role_viewer_id, :permission_estimatediscount_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatehistoryevent_read, :tenantId, :role_viewer_id, :permission_estimatehistoryevent_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatehistoryevent_create, :tenantId, :role_viewer_id, :permission_estimatehistoryevent_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimaterevision_read, :tenantId, :role_viewer_id, :permission_estimaterevision_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimaterevision_create, :tenantId, :role_viewer_id, :permission_estimaterevision_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimaterevision_update, :tenantId, :role_viewer_id, :permission_estimaterevision_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimaterevision_soft_delete, :tenantId, :role_viewer_id, :permission_estimaterevision_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimaterevision_restore, :tenantId, :role_viewer_id, :permission_estimaterevision_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatetax_read, :tenantId, :role_viewer_id, :permission_estimatetax_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatetax_create, :tenantId, :role_viewer_id, :permission_estimatetax_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatetax_update, :tenantId, :role_viewer_id, :permission_estimatetax_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatetax_soft_delete, :tenantId, :role_viewer_id, :permission_estimatetax_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimatetax_restore, :tenantId, :role_viewer_id, :permission_estimatetax_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateterm_read, :tenantId, :role_viewer_id, :permission_estimateterm_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateterm_create, :tenantId, :role_viewer_id, :permission_estimateterm_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateterm_update, :tenantId, :role_viewer_id, :permission_estimateterm_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateterm_soft_delete, :tenantId, :role_viewer_id, :permission_estimateterm_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_estimateterm_restore, :tenantId, :role_viewer_id, :permission_estimateterm_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_requestforquote_read, :tenantId, :role_viewer_id, :permission_requestforquote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_requestforquote_create, :tenantId, :role_viewer_id, :permission_requestforquote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_requestforquote_update, :tenantId, :role_viewer_id, :permission_requestforquote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_requestforquote_send, :tenantId, :role_viewer_id, :permission_requestforquote_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rfqline_read, :tenantId, :role_viewer_id, :permission_rfqline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rfqline_create, :tenantId, :role_viewer_id, :permission_rfqline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_rfqline_update, :tenantId, :role_viewer_id, :permission_rfqline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_read, :tenantId, :role_viewer_id, :permission_bid_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_create, :tenantId, :role_viewer_id, :permission_bid_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_update, :tenantId, :role_viewer_id, :permission_bid_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_submit, :tenantId, :role_viewer_id, :permission_bid_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_approve, :tenantId, :role_viewer_id, :permission_bid_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_bid_reject, :tenantId, :role_viewer_id, :permission_bid_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_read, :tenantId, :role_viewer_id, :permission_project_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_create, :tenantId, :role_viewer_id, :permission_project_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_update, :tenantId, :role_viewer_id, :permission_project_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_soft_delete, :tenantId, :role_viewer_id, :permission_project_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_restore, :tenantId, :role_viewer_id, :permission_project_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_hard_delete, :tenantId, :role_viewer_id, :permission_project_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_archive, :tenantId, :role_viewer_id, :permission_project_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_activate, :tenantId, :role_viewer_id, :permission_project_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_deactivate, :tenantId, :role_viewer_id, :permission_project_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_assign, :tenantId, :role_viewer_id, :permission_project_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_project_unassign, :tenantId, :role_viewer_id, :permission_project_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_read, :tenantId, :role_viewer_id, :permission_projecttaskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_create, :tenantId, :role_viewer_id, :permission_projecttaskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_update, :tenantId, :role_viewer_id, :permission_projecttaskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_soft_delete, :tenantId, :role_viewer_id, :permission_projecttaskassignment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_restore, :tenantId, :role_viewer_id, :permission_projecttaskassignment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_assign, :tenantId, :role_viewer_id, :permission_projecttaskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskassignment_unassign, :tenantId, :role_viewer_id, :permission_projecttaskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_read, :tenantId, :role_viewer_id, :permission_projectmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_create, :tenantId, :role_viewer_id, :permission_projectmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_update, :tenantId, :role_viewer_id, :permission_projectmember_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_soft_delete, :tenantId, :role_viewer_id, :permission_projectmember_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_restore, :tenantId, :role_viewer_id, :permission_projectmember_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_assign, :tenantId, :role_viewer_id, :permission_projectmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectmember_unassign, :tenantId, :role_viewer_id, :permission_projectmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectnote_read, :tenantId, :role_viewer_id, :permission_projectnote_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectnote_create, :tenantId, :role_viewer_id, :permission_projectnote_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectnote_update, :tenantId, :role_viewer_id, :permission_projectnote_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectnote_soft_delete, :tenantId, :role_viewer_id, :permission_projectnote_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectnote_restore, :tenantId, :role_viewer_id, :permission_projectnote_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectreport_read, :tenantId, :role_viewer_id, :permission_projectreport_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectreport_create, :tenantId, :role_viewer_id, :permission_projectreport_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectreport_update, :tenantId, :role_viewer_id, :permission_projectreport_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectreport_export, :tenantId, :role_viewer_id, :permission_projectreport_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectbudgetline_read, :tenantId, :role_viewer_id, :permission_projectbudgetline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectbudgetline_create, :tenantId, :role_viewer_id, :permission_projectbudgetline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectbudgetline_update, :tenantId, :role_viewer_id, :permission_projectbudgetline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectfinancialsnapshot_read, :tenantId, :role_viewer_id, :permission_projectfinancialsnapshot_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectfinancialsnapshot_create, :tenantId, :role_viewer_id, :permission_projectfinancialsnapshot_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projectfinancialsnapshot_export, :tenantId, :role_viewer_id, :permission_projectfinancialsnapshot_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_read, :tenantId, :role_viewer_id, :permission_projecttask_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_create, :tenantId, :role_viewer_id, :permission_projecttask_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_update, :tenantId, :role_viewer_id, :permission_projecttask_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_soft_delete, :tenantId, :role_viewer_id, :permission_projecttask_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_restore, :tenantId, :role_viewer_id, :permission_projecttask_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_assign, :tenantId, :role_viewer_id, :permission_projecttask_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttask_unassign, :tenantId, :role_viewer_id, :permission_projecttask_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskcomment_read, :tenantId, :role_viewer_id, :permission_projecttaskcomment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskcomment_create, :tenantId, :role_viewer_id, :permission_projecttaskcomment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_projecttaskcomment_update, :tenantId, :role_viewer_id, :permission_projecttaskcomment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_read, :tenantId, :role_viewer_id, :permission_changeorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_create, :tenantId, :role_viewer_id, :permission_changeorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_update, :tenantId, :role_viewer_id, :permission_changeorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_soft_delete, :tenantId, :role_viewer_id, :permission_changeorder_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_restore, :tenantId, :role_viewer_id, :permission_changeorder_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_approve, :tenantId, :role_viewer_id, :permission_changeorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorder_reject, :tenantId, :role_viewer_id, :permission_changeorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderline_read, :tenantId, :role_viewer_id, :permission_changeorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderline_create, :tenantId, :role_viewer_id, :permission_changeorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderline_update, :tenantId, :role_viewer_id, :permission_changeorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderapproval_read, :tenantId, :role_viewer_id, :permission_changeorderapproval_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderapproval_create, :tenantId, :role_viewer_id, :permission_changeorderapproval_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderapproval_approve, :tenantId, :role_viewer_id, :permission_changeorderapproval_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_changeorderapproval_reject, :tenantId, :role_viewer_id, :permission_changeorderapproval_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_read, :tenantId, :role_viewer_id, :permission_task_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_create, :tenantId, :role_viewer_id, :permission_task_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_update, :tenantId, :role_viewer_id, :permission_task_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_soft_delete, :tenantId, :role_viewer_id, :permission_task_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_restore, :tenantId, :role_viewer_id, :permission_task_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_hard_delete, :tenantId, :role_viewer_id, :permission_task_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_assign, :tenantId, :role_viewer_id, :permission_task_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_unassign, :tenantId, :role_viewer_id, :permission_task_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_activate, :tenantId, :role_viewer_id, :permission_task_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_task_deactivate, :tenantId, :role_viewer_id, :permission_task_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskassignment_read, :tenantId, :role_viewer_id, :permission_taskassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskassignment_create, :tenantId, :role_viewer_id, :permission_taskassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskassignment_update, :tenantId, :role_viewer_id, :permission_taskassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskassignment_assign, :tenantId, :role_viewer_id, :permission_taskassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskassignment_unassign, :tenantId, :role_viewer_id, :permission_taskassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskdependency_read, :tenantId, :role_viewer_id, :permission_taskdependency_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskdependency_create, :tenantId, :role_viewer_id, :permission_taskdependency_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskdependency_update, :tenantId, :role_viewer_id, :permission_taskdependency_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskattachment_read, :tenantId, :role_viewer_id, :permission_taskattachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskattachment_create, :tenantId, :role_viewer_id, :permission_taskattachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskattachment_update, :tenantId, :role_viewer_id, :permission_taskattachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskchecklistitem_read, :tenantId, :role_viewer_id, :permission_taskchecklistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskchecklistitem_create, :tenantId, :role_viewer_id, :permission_taskchecklistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_taskchecklistitem_update, :tenantId, :role_viewer_id, :permission_taskchecklistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_read, :tenantId, :role_viewer_id, :permission_invoice_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_create, :tenantId, :role_viewer_id, :permission_invoice_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_update, :tenantId, :role_viewer_id, :permission_invoice_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_soft_delete, :tenantId, :role_viewer_id, :permission_invoice_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_restore, :tenantId, :role_viewer_id, :permission_invoice_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_hard_delete, :tenantId, :role_viewer_id, :permission_invoice_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_send, :tenantId, :role_viewer_id, :permission_invoice_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_approve, :tenantId, :role_viewer_id, :permission_invoice_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_reject, :tenantId, :role_viewer_id, :permission_invoice_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoice_export, :tenantId, :role_viewer_id, :permission_invoice_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoicelineitem_read, :tenantId, :role_viewer_id, :permission_invoicelineitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoicelineitem_create, :tenantId, :role_viewer_id, :permission_invoicelineitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_invoicelineitem_update, :tenantId, :role_viewer_id, :permission_invoicelineitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payment_read, :tenantId, :role_viewer_id, :permission_payment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payment_create, :tenantId, :role_viewer_id, :permission_payment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payment_update, :tenantId, :role_viewer_id, :permission_payment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payment_export, :tenantId, :role_viewer_id, :permission_payment_export_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_read, :tenantId, :role_viewer_id, :permission_purchaseorder_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_create, :tenantId, :role_viewer_id, :permission_purchaseorder_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_update, :tenantId, :role_viewer_id, :permission_purchaseorder_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_send, :tenantId, :role_viewer_id, :permission_purchaseorder_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_approve, :tenantId, :role_viewer_id, :permission_purchaseorder_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorder_reject, :tenantId, :role_viewer_id, :permission_purchaseorder_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorderline_read, :tenantId, :role_viewer_id, :permission_purchaseorderline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorderline_create, :tenantId, :role_viewer_id, :permission_purchaseorderline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_purchaseorderline_update, :tenantId, :role_viewer_id, :permission_purchaseorderline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_read, :tenantId, :role_viewer_id, :permission_expense_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_create, :tenantId, :role_viewer_id, :permission_expense_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_update, :tenantId, :role_viewer_id, :permission_expense_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_soft_delete, :tenantId, :role_viewer_id, :permission_expense_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_restore, :tenantId, :role_viewer_id, :permission_expense_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_hard_delete, :tenantId, :role_viewer_id, :permission_expense_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_approve, :tenantId, :role_viewer_id, :permission_expense_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expense_reject, :tenantId, :role_viewer_id, :permission_expense_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expenseline_read, :tenantId, :role_viewer_id, :permission_expenseline_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expenseline_create, :tenantId, :role_viewer_id, :permission_expenseline_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expenseline_update, :tenantId, :role_viewer_id, :permission_expenseline_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expensereceipt_read, :tenantId, :role_viewer_id, :permission_expensereceipt_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expensereceipt_create, :tenantId, :role_viewer_id, :permission_expensereceipt_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_expensereceipt_update, :tenantId, :role_viewer_id, :permission_expensereceipt_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_read, :tenantId, :role_viewer_id, :permission_payrollrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_create, :tenantId, :role_viewer_id, :permission_payrollrun_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_update, :tenantId, :role_viewer_id, :permission_payrollrun_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_soft_delete, :tenantId, :role_viewer_id, :permission_payrollrun_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_restore, :tenantId, :role_viewer_id, :permission_payrollrun_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_approve, :tenantId, :role_viewer_id, :permission_payrollrun_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollrun_reject, :tenantId, :role_viewer_id, :permission_payrollrun_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollitem_read, :tenantId, :role_viewer_id, :permission_payrollitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollitem_create, :tenantId, :role_viewer_id, :permission_payrollitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_payrollitem_update, :tenantId, :role_viewer_id, :permission_payrollitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_clockinclockout_read, :tenantId, :role_viewer_id, :permission_clockinclockout_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_clockinclockout_create, :tenantId, :role_viewer_id, :permission_clockinclockout_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_clockinclockout_update, :tenantId, :role_viewer_id, :permission_clockinclockout_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_clockinclockout_approve, :tenantId, :role_viewer_id, :permission_clockinclockout_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_clockinclockout_reject, :tenantId, :role_viewer_id, :permission_clockinclockout_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_read, :tenantId, :role_viewer_id, :permission_schedule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_create, :tenantId, :role_viewer_id, :permission_schedule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_update, :tenantId, :role_viewer_id, :permission_schedule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_soft_delete, :tenantId, :role_viewer_id, :permission_schedule_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_restore, :tenantId, :role_viewer_id, :permission_schedule_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_hard_delete, :tenantId, :role_viewer_id, :permission_schedule_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_schedule_publish, :tenantId, :role_viewer_id, :permission_schedule_publish_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_scheduleexception_read, :tenantId, :role_viewer_id, :permission_scheduleexception_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_scheduleexception_create, :tenantId, :role_viewer_id, :permission_scheduleexception_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_scheduleexception_update, :tenantId, :role_viewer_id, :permission_scheduleexception_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_scheduleexception_approve, :tenantId, :role_viewer_id, :permission_scheduleexception_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_scheduleexception_reject, :tenantId, :role_viewer_id, :permission_scheduleexception_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leave_read, :tenantId, :role_viewer_id, :permission_leave_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leave_create, :tenantId, :role_viewer_id, :permission_leave_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leave_update, :tenantId, :role_viewer_id, :permission_leave_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leave_approve, :tenantId, :role_viewer_id, :permission_leave_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_leave_reject, :tenantId, :role_viewer_id, :permission_leave_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheet_read, :tenantId, :role_viewer_id, :permission_timesheet_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheet_create, :tenantId, :role_viewer_id, :permission_timesheet_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheet_update, :tenantId, :role_viewer_id, :permission_timesheet_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheet_approve, :tenantId, :role_viewer_id, :permission_timesheet_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheet_reject, :tenantId, :role_viewer_id, :permission_timesheet_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheetentry_read, :tenantId, :role_viewer_id, :permission_timesheetentry_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheetentry_create, :tenantId, :role_viewer_id, :permission_timesheetentry_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_timesheetentry_update, :tenantId, :role_viewer_id, :permission_timesheetentry_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_read, :tenantId, :role_viewer_id, :permission_inventoryitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_create, :tenantId, :role_viewer_id, :permission_inventoryitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_update, :tenantId, :role_viewer_id, :permission_inventoryitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_soft_delete, :tenantId, :role_viewer_id, :permission_inventoryitem_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_restore, :tenantId, :role_viewer_id, :permission_inventoryitem_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_hard_delete, :tenantId, :role_viewer_id, :permission_inventoryitem_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_assign, :tenantId, :role_viewer_id, :permission_inventoryitem_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_unassign, :tenantId, :role_viewer_id, :permission_inventoryitem_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryitem_transfer, :tenantId, :role_viewer_id, :permission_inventoryitem_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventorytransaction_read, :tenantId, :role_viewer_id, :permission_inventorytransaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventorytransaction_create, :tenantId, :role_viewer_id, :permission_inventorytransaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventorytransaction_update, :tenantId, :role_viewer_id, :permission_inventorytransaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventorytransaction_soft_delete, :tenantId, :role_viewer_id, :permission_inventorytransaction_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventorytransaction_restore, :tenantId, :role_viewer_id, :permission_inventorytransaction_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryadjustment_read, :tenantId, :role_viewer_id, :permission_inventoryadjustment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryadjustment_create, :tenantId, :role_viewer_id, :permission_inventoryadjustment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryadjustment_update, :tenantId, :role_viewer_id, :permission_inventoryadjustment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryadjustment_approve, :tenantId, :role_viewer_id, :permission_inventoryadjustment_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_inventoryadjustment_reject, :tenantId, :role_viewer_id, :permission_inventoryadjustment_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_read, :tenantId, :role_viewer_id, :permission_asset_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_create, :tenantId, :role_viewer_id, :permission_asset_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_update, :tenantId, :role_viewer_id, :permission_asset_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_soft_delete, :tenantId, :role_viewer_id, :permission_asset_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_restore, :tenantId, :role_viewer_id, :permission_asset_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_hard_delete, :tenantId, :role_viewer_id, :permission_asset_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_assign, :tenantId, :role_viewer_id, :permission_asset_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_unassign, :tenantId, :role_viewer_id, :permission_asset_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_asset_transfer, :tenantId, :role_viewer_id, :permission_asset_transfer_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_assetassignment_read, :tenantId, :role_viewer_id, :permission_assetassignment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_assetassignment_create, :tenantId, :role_viewer_id, :permission_assetassignment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_assetassignment_update, :tenantId, :role_viewer_id, :permission_assetassignment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_assetassignment_assign, :tenantId, :role_viewer_id, :permission_assetassignment_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_assetassignment_unassign, :tenantId, :role_viewer_id, :permission_assetassignment_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_read, :tenantId, :role_viewer_id, :permission_channel_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_create, :tenantId, :role_viewer_id, :permission_channel_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_update, :tenantId, :role_viewer_id, :permission_channel_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_soft_delete, :tenantId, :role_viewer_id, :permission_channel_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_restore, :tenantId, :role_viewer_id, :permission_channel_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_hard_delete, :tenantId, :role_viewer_id, :permission_channel_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channel_archive, :tenantId, :role_viewer_id, :permission_channel_archive_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channelmember_read, :tenantId, :role_viewer_id, :permission_channelmember_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channelmember_create, :tenantId, :role_viewer_id, :permission_channelmember_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channelmember_assign, :tenantId, :role_viewer_id, :permission_channelmember_assign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_channelmember_unassign, :tenantId, :role_viewer_id, :permission_channelmember_unassign_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_read, :tenantId, :role_viewer_id, :permission_directchat_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_create, :tenantId, :role_viewer_id, :permission_directchat_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_update, :tenantId, :role_viewer_id, :permission_directchat_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_soft_delete, :tenantId, :role_viewer_id, :permission_directchat_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_restore, :tenantId, :role_viewer_id, :permission_directchat_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directchat_hard_delete, :tenantId, :role_viewer_id, :permission_directchat_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directmessage_read, :tenantId, :role_viewer_id, :permission_directmessage_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directmessage_create, :tenantId, :role_viewer_id, :permission_directmessage_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directmessage_update, :tenantId, :role_viewer_id, :permission_directmessage_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directmessage_soft_delete, :tenantId, :role_viewer_id, :permission_directmessage_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_directmessage_restore, :tenantId, :role_viewer_id, :permission_directmessage_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notification_read, :tenantId, :role_viewer_id, :permission_notification_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notificationpreference_read, :tenantId, :role_viewer_id, :permission_notificationpreference_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notificationpreference_update, :tenantId, :role_viewer_id, :permission_notificationpreference_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notificationtemplate_read, :tenantId, :role_viewer_id, :permission_notificationtemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notificationtemplate_create, :tenantId, :role_viewer_id, :permission_notificationtemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_notificationtemplate_update, :tenantId, :role_viewer_id, :permission_notificationtemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_read, :tenantId, :role_viewer_id, :permission_fileobject_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_create, :tenantId, :role_viewer_id, :permission_fileobject_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_update, :tenantId, :role_viewer_id, :permission_fileobject_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_soft_delete, :tenantId, :role_viewer_id, :permission_fileobject_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_restore, :tenantId, :role_viewer_id, :permission_fileobject_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_fileobject_hard_delete, :tenantId, :role_viewer_id, :permission_fileobject_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_read, :tenantId, :role_viewer_id, :permission_attachment_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_create, :tenantId, :role_viewer_id, :permission_attachment_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_update, :tenantId, :role_viewer_id, :permission_attachment_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_soft_delete, :tenantId, :role_viewer_id, :permission_attachment_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_restore, :tenantId, :role_viewer_id, :permission_attachment_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_attachment_hard_delete, :tenantId, :role_viewer_id, :permission_attachment_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_read, :tenantId, :role_viewer_id, :permission_contracttemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_create, :tenantId, :role_viewer_id, :permission_contracttemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_update, :tenantId, :role_viewer_id, :permission_contracttemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_soft_delete, :tenantId, :role_viewer_id, :permission_contracttemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_restore, :tenantId, :role_viewer_id, :permission_contracttemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contracttemplate_hard_delete, :tenantId, :role_viewer_id, :permission_contracttemplate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_read, :tenantId, :role_viewer_id, :permission_termstemplate_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_create, :tenantId, :role_viewer_id, :permission_termstemplate_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_update, :tenantId, :role_viewer_id, :permission_termstemplate_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_soft_delete, :tenantId, :role_viewer_id, :permission_termstemplate_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_restore, :tenantId, :role_viewer_id, :permission_termstemplate_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_termstemplate_hard_delete, :tenantId, :role_viewer_id, :permission_termstemplate_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_read, :tenantId, :role_viewer_id, :permission_vendor_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_create, :tenantId, :role_viewer_id, :permission_vendor_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_update, :tenantId, :role_viewer_id, :permission_vendor_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_soft_delete, :tenantId, :role_viewer_id, :permission_vendor_soft_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_restore, :tenantId, :role_viewer_id, :permission_vendor_restore_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendor_hard_delete, :tenantId, :role_viewer_id, :permission_vendor_hard_delete_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendorcontact_read, :tenantId, :role_viewer_id, :permission_vendorcontact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendorcontact_create, :tenantId, :role_viewer_id, :permission_vendorcontact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_vendorcontact_update, :tenantId, :role_viewer_id, :permission_vendorcontact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_read, :tenantId, :role_viewer_id, :permission_contract_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_create, :tenantId, :role_viewer_id, :permission_contract_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_update, :tenantId, :role_viewer_id, :permission_contract_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_send, :tenantId, :role_viewer_id, :permission_contract_send_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_approve, :tenantId, :role_viewer_id, :permission_contract_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_contract_reject, :tenantId, :role_viewer_id, :permission_contract_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiaction_read, :tenantId, :role_viewer_id, :permission_aiaction_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiaction_create, :tenantId, :role_viewer_id, :permission_aiaction_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiaction_update, :tenantId, :role_viewer_id, :permission_aiaction_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiaction_activate, :tenantId, :role_viewer_id, :permission_aiaction_activate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiaction_deactivate, :tenantId, :role_viewer_id, :permission_aiaction_deactivate_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiactionrun_read, :tenantId, :role_viewer_id, :permission_aiactionrun_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiactionrun_create, :tenantId, :role_viewer_id, :permission_aiactionrun_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiactionrun_update, :tenantId, :role_viewer_id, :permission_aiactionrun_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijob_read, :tenantId, :role_viewer_id, :permission_aijob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijob_create, :tenantId, :role_viewer_id, :permission_aijob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijob_update, :tenantId, :role_viewer_id, :permission_aijob_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijobartifact_read, :tenantId, :role_viewer_id, :permission_aijobartifact_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijobartifact_create, :tenantId, :role_viewer_id, :permission_aijobartifact_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aijobartifact_update, :tenantId, :role_viewer_id, :permission_aijobartifact_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsight_read, :tenantId, :role_viewer_id, :permission_aiinsight_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsight_create, :tenantId, :role_viewer_id, :permission_aiinsight_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsight_update, :tenantId, :role_viewer_id, :permission_aiinsight_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsightfeedback_read, :tenantId, :role_viewer_id, :permission_aiinsightfeedback_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsightfeedback_create, :tenantId, :role_viewer_id, :permission_aiinsightfeedback_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_aiinsightfeedback_update, :tenantId, :role_viewer_id, :permission_aiinsightfeedback_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_read, :tenantId, :role_viewer_id, :permission_approvalrequest_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_create, :tenantId, :role_viewer_id, :permission_approvalrequest_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_update, :tenantId, :role_viewer_id, :permission_approvalrequest_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_submit, :tenantId, :role_viewer_id, :permission_approvalrequest_submit_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_approve, :tenantId, :role_viewer_id, :permission_approvalrequest_approve_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrequest_reject, :tenantId, :role_viewer_id, :permission_approvalrequest_reject_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvaldecision_read, :tenantId, :role_viewer_id, :permission_approvaldecision_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvaldecision_create, :tenantId, :role_viewer_id, :permission_approvaldecision_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrule_read, :tenantId, :role_viewer_id, :permission_approvalrule_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrule_create, :tenantId, :role_viewer_id, :permission_approvalrule_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_approvalrule_update, :tenantId, :role_viewer_id, :permission_approvalrule_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_location_read, :tenantId, :role_viewer_id, :permission_location_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_location_create, :tenantId, :role_viewer_id, :permission_location_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_location_update, :tenantId, :role_viewer_id, :permission_location_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelist_read, :tenantId, :role_viewer_id, :permission_pricelist_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelist_create, :tenantId, :role_viewer_id, :permission_pricelist_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelist_update, :tenantId, :role_viewer_id, :permission_pricelist_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelistitem_read, :tenantId, :role_viewer_id, :permission_pricelistitem_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelistitem_create, :tenantId, :role_viewer_id, :permission_pricelistitem_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_pricelistitem_update, :tenantId, :role_viewer_id, :permission_pricelistitem_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcenter_read, :tenantId, :role_viewer_id, :permission_costcenter_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcenter_create, :tenantId, :role_viewer_id, :permission_costcenter_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcenter_update, :tenantId, :role_viewer_id, :permission_costcenter_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcategory_read, :tenantId, :role_viewer_id, :permission_costcategory_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcategory_create, :tenantId, :role_viewer_id, :permission_costcategory_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_costcategory_update, :tenantId, :role_viewer_id, :permission_costcategory_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_tenantauditlog_read, :tenantId, :role_viewer_id, :permission_tenantauditlog_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_exportjob_read, :tenantId, :role_viewer_id, :permission_exportjob_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_exportjob_create, :tenantId, :role_viewer_id, :permission_exportjob_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_reportdefinition_read, :tenantId, :role_viewer_id, :permission_reportdefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_reportdefinition_create, :tenantId, :role_viewer_id, :permission_reportdefinition_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_reportdefinition_update, :tenantId, :role_viewer_id, :permission_reportdefinition_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_dashboarddefinition_read, :tenantId, :role_viewer_id, :permission_dashboarddefinition_read_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_dashboarddefinition_create, :tenantId, :role_viewer_id, :permission_dashboarddefinition_create_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;
INSERT INTO "RolePermission" (
  "id", "tenantId", "roleId", "permissionId", "memberId", "status", "version", "createdAt", "updatedAt"
) VALUES (
  :rp_viewer_dashboarddefinition_update, :tenantId, :role_viewer_id, :permission_dashboarddefinition_update_id, NULL,
  'ACTIVE', 1, NOW(), NOW()
) ON CONFLICT ("tenantId", "roleId", "permissionId", "memberId") DO NOTHING;

