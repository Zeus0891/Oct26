-- CreateEnum
CREATE TYPE "NumberSequenceResetMode" AS ENUM ('NEVER', 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY');

-- CreateEnum
CREATE TYPE "AIJobPriority" AS ENUM ('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL');

-- CreateEnum
CREATE TYPE "AIJobStatus" AS ENUM ('QUEUED', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', 'TIMEOUT', 'PAUSED', 'RETRYING');

-- CreateEnum
CREATE TYPE "AIJobType" AS ENUM ('PROMPT_EXECUTION', 'DOCUMENT_ANALYSIS', 'EMBEDDING_GENERATION', 'INSIGHT_GENERATION', 'PLAYBOOK_RUN', 'CUSTOM_ACTION', 'BATCH_PROCESSING', 'REAL_TIME_ANALYSIS');

-- CreateEnum
CREATE TYPE "AIModelProvider" AS ENUM ('OPENAI', 'ANTHROPIC', 'AZURE_AI', 'AWS_BEDROCK', 'GOOGLE_AI', 'HUGGING_FACE', 'CUSTOM', 'LOCAL');

-- CreateEnum
CREATE TYPE "APBillStatus" AS ENUM ('DRAFT', 'PENDING', 'APPROVED', 'SCHEDULED', 'PARTIALLY_PAID', 'PAID', 'DISPUTED', 'CANCELLED', 'VOID', 'OVERDUE');

-- CreateEnum
CREATE TYPE "AccessMethod" AS ENUM ('DIRECT_LINK', 'EMAIL_ATTACHMENT', 'SHARED_FOLDER', 'API_ENDPOINT', 'INTEGRATION', 'MOBILE_APP', 'WEB_PORTAL', 'DOWNLOAD_LINK');

-- CreateEnum
CREATE TYPE "AccountStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'PROSPECT', 'CUSTOMER', 'FORMER', 'SUSPENDED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "AckStatus" AS ENUM ('NONE', 'PENDING', 'ACKED', 'DECLINED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "ActionType" AS ENUM ('CREATE_RECORD', 'UPDATE_RECORD', 'DELETE_RECORD', 'SEND_EMAIL', 'SEND_MESSAGE', 'CREATE_APPROVAL', 'UPDATE_STATUS', 'GENERATE_DOCUMENT', 'CALL_API', 'TRIGGER_WORKFLOW', 'CUSTOM_SCRIPT');

-- CreateEnum
CREATE TYPE "ActivityStatus" AS ENUM ('SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'OVERDUE');

-- CreateEnum
CREATE TYPE "AddressType" AS ENUM ('HOME', 'WORK', 'MAILING', 'EMERGENCY', 'TEMPORARY', 'BILLING', 'SHIPPING', 'JOB_SITE', 'CORPORATE', 'BRANCH', 'WAREHOUSE', 'EQUIPMENT_YARD');

-- CreateEnum
CREATE TYPE "AdjustmentType" AS ENUM ('CORRECTION', 'RETROACTIVE_PAY', 'BONUS_ADJUSTMENT', 'TAX_ADJUSTMENT', 'DEDUCTION_ADJUSTMENT', 'MANUAL_ENTRY');

-- CreateEnum
CREATE TYPE "AllocationStatus" AS ENUM ('PLANNED', 'ACTIVE', 'COMPLETED', 'CANCELLED', 'ON_HOLD', 'OVERALLOCATED');

-- CreateEnum
CREATE TYPE "AllocationType" AS ENUM ('FULL_TIME', 'PART_TIME', 'SHARED', 'ON_DEMAND', 'TEMPORARY', 'CONTRACT');

-- CreateEnum
CREATE TYPE "AllowanceType" AS ENUM ('CAR_ALLOWANCE', 'PHONE_ALLOWANCE', 'TOOL_ALLOWANCE', 'MEAL_ALLOWANCE', 'LODGING_ALLOWANCE', 'SAFETY_EQUIPMENT', 'UNIFORM_ALLOWANCE', 'EDUCATION_ALLOWANCE', 'TRAVEL_ALLOWANCE');

-- CreateEnum
CREATE TYPE "ApiKeyScope" AS ENUM ('READ_ONLY', 'READ_WRITE', 'ADMIN', 'BILLING', 'REPORTING', 'INTEGRATION');

-- CreateEnum
CREATE TYPE "ApiKeyStatus" AS ENUM ('ACTIVE', 'SUSPENDED', 'REVOKED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "ApprovalDecisionStatus" AS ENUM ('PENDING', 'APPROVED', 'REJECTED', 'DELEGATED', 'ESCALATED', 'EXPIRED', 'WITHDRAWN', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ApprovalDecisionType" AS ENUM ('INDIVIDUAL', 'BULK', 'AUTOMATIC', 'DELEGATED', 'ESCALATED', 'CONDITIONAL');

-- CreateEnum
CREATE TYPE "ApprovalEntityType" AS ENUM ('PURCHASE_ORDER', 'AP_BILL', 'BILL_PAYMENT', 'INVOICE', 'JOURNAL_ENTRY', 'PROJECT_CHANGE_ORDER', 'ESTIMATE', 'EXPENSE_REPORT', 'TIMESHEET', 'LEAVE_REQUEST', 'PAYROLL_ADJUSTMENT', 'CONTRACT', 'BUDGET_CHANGE');

-- CreateEnum
CREATE TYPE "ApprovalRequestPriority" AS ENUM ('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL');

-- CreateEnum
CREATE TYPE "ApprovalRequestSource" AS ENUM ('AUTOMATIC', 'MANUAL', 'ESCALATED', 'DELEGATED', 'BULK_OPERATION');

-- CreateEnum
CREATE TYPE "ApprovalRequestStatus" AS ENUM ('DRAFT', 'PENDING', 'IN_PROGRESS', 'APPROVED', 'PARTIALLY_APPROVED', 'REJECTED', 'CANCELLED', 'ESCALATED', 'EXPIRED', 'WITHDRAWN');

-- CreateEnum
CREATE TYPE "ApprovalRuleScope" AS ENUM ('GLOBAL', 'DEPARTMENT', 'PROJECT', 'VENDOR', 'CUSTOMER', 'MODULE');

-- CreateEnum
CREATE TYPE "ApprovalRuleStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'DRAFT', 'ARCHIVED', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "ApprovalRuleType" AS ENUM ('AMOUNT_BASED', 'ENTITY_BASED', 'ATTRIBUTE_BASED', 'CUSTOM', 'SEQUENTIAL', 'PARALLEL', 'CONDITIONAL');

-- CreateEnum
CREATE TYPE "ArtifactStatus" AS ENUM ('ACTIVE', 'PROCESSING', 'COMPLETED', 'ARCHIVED', 'DELETED', 'CORRUPTED');

-- CreateEnum
CREATE TYPE "ArtifactType" AS ENUM ('SIGNED_DOCUMENT', 'CERTIFICATE', 'AUDIT_TRAIL', 'SUMMARY', 'COMPLETION_CERTIFICATE', 'EVIDENCE_PACKAGE');

-- CreateEnum
CREATE TYPE "AssetCondition" AS ENUM ('EXCELLENT', 'GOOD', 'FAIR', 'POOR', 'NEEDS_REPAIR', 'OUT_OF_SERVICE');

-- CreateEnum
CREATE TYPE "AssetStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'IN_MAINTENANCE', 'RETIRED', 'DISPOSED', 'LOST', 'STOLEN');

-- CreateEnum
CREATE TYPE "AssignmentRole" AS ENUM ('OWNER', 'ASSIGNEE', 'REVIEWER', 'OBSERVER', 'CONTRIBUTOR', 'APPROVER');

-- CreateEnum
CREATE TYPE "AssignmentScope" AS ENUM ('GLOBAL', 'TENANT', 'PROJECT', 'DEPARTMENT', 'TEAM', 'RESOURCE');

-- CreateEnum
CREATE TYPE "AssignmentType" AS ENUM ('PRIMARY', 'SECONDARY', 'TEMPORARY', 'ACTING', 'INTERIM');

-- CreateEnum
CREATE TYPE "AttachmentLinkStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'DELETED');

-- CreateEnum
CREATE TYPE "AttachmentLinkType" AS ENUM ('PROJECT_DOCUMENT', 'TASK_ATTACHMENT', 'ESTIMATE_ATTACHMENT', 'INVOICE_ATTACHMENT', 'CONTRACT_ATTACHMENT', 'VENDOR_DOCUMENT', 'EMPLOYEE_DOCUMENT', 'GENERAL');

-- CreateEnum
CREATE TYPE "AttachmentStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'DELETED');

-- CreateEnum
CREATE TYPE "AttachmentType" AS ENUM ('DOCUMENT', 'IMAGE', 'VIDEO', 'AUDIO', 'SPREADSHEET', 'PRESENTATION', 'PDF', 'ARCHIVE', 'OTHER');

-- CreateEnum
CREATE TYPE "AuditAction" AS ENUM ('CREATE', 'READ', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'APPROVE', 'REJECT', 'ASSIGN', 'TRANSFER', 'EXPORT', 'IMPORT', 'BACKUP', 'RESTORE');

-- CreateEnum
CREATE TYPE "AuthFactorStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'PENDING_VERIFICATION', 'COMPROMISED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "AuthFactorType" AS ENUM ('TOTP', 'SMS', 'EMAIL', 'WEBAUTHN', 'BACKUP_CODE', 'HARDWARE_TOKEN');

-- CreateEnum
CREATE TYPE "AuthenticationMethod" AS ENUM ('EMAIL', 'SMS', 'PHONE_CALL', 'KNOWLEDGE_BASED', 'ID_VERIFICATION', 'SOCIAL_LOGIN', 'ACCESS_CODE');

-- CreateEnum
CREATE TYPE "AuthenticationType" AS ENUM ('OAUTH2', 'API_KEY', 'BASIC_AUTH', 'CERTIFICATE', 'JWT', 'SAML', 'WEBHOOK', 'CUSTOM');

-- CreateEnum
CREATE TYPE "BankAccountStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'VERIFICATION_REQUIRED', 'VERIFICATION_FAILED', 'SUSPENDED', 'CLOSED');

-- CreateEnum
CREATE TYPE "BankAccountType" AS ENUM ('CHECKING', 'SAVINGS', 'LOAN', 'CREDIT_CARD', 'WALLET');

-- CreateEnum
CREATE TYPE "BenefitType" AS ENUM ('HEALTH_INSURANCE', 'DENTAL_INSURANCE', 'VISION_INSURANCE', 'LIFE_INSURANCE', 'DISABILITY_INSURANCE', 'RETIREMENT_401K', 'PENSION', 'FLEXIBLE_SPENDING', 'HEALTH_SAVINGS', 'PAID_TIME_OFF', 'STOCK_OPTIONS', 'TUITION_REIMBURSEMENT');

-- CreateEnum
CREATE TYPE "BidInvitationStatus" AS ENUM ('SENT', 'VIEWED', 'RESPONDED', 'EXPIRED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "BidStatus" AS ENUM ('DRAFT', 'OPEN', 'CLOSED', 'AWARDED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "BidSubmissionStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'UNDER_REVIEW', 'ACCEPTED', 'REJECTED', 'WITHDRAWN', 'EXPIRED');

-- CreateEnum
CREATE TYPE "BillApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "BillingAccountStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_VERIFICATION', 'VERIFICATION_FAILED', 'CLOSED');

-- CreateEnum
CREATE TYPE "BudgetPeriod" AS ENUM ('ANNUAL', 'QUARTERLY', 'MONTHLY');

-- CreateEnum
CREATE TYPE "BudgetStatus" AS ENUM ('DRAFT', 'APPROVED', 'ACTIVE', 'FROZEN', 'EXCEEDED');

-- CreateEnum
CREATE TYPE "CRMChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "CatalogStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'DEPRECATED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ChangeOrderApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ChangeOrderChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ChangeOrderDocumentType" AS ENUM ('ATTACHMENT', 'CONTRACT', 'SIGNATURE', 'OTHER');

-- CreateEnum
CREATE TYPE "ChangeOrderLineStatus" AS ENUM ('ACTIVE', 'REMOVED');

-- CreateEnum
CREATE TYPE "ChangeOrderStatus" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'CANCELLED', 'IMPLEMENTED');

-- CreateEnum
CREATE TYPE "ChannelMemberRole" AS ENUM ('OWNER', 'ADMIN', 'MODERATOR', 'MEMBER', 'GUEST', 'READ_ONLY', 'BOT');

-- CreateEnum
CREATE TYPE "ChannelMemberStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'INVITED', 'MUTED', 'BANNED', 'LEFT', 'KICKED');

-- CreateEnum
CREATE TYPE "ChannelStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'SUSPENDED', 'LOCKED', 'DELETED');

-- CreateEnum
CREATE TYPE "ChannelType" AS ENUM ('PUBLIC', 'PRIVATE', 'PROJECT', 'DEPARTMENT', 'TEAM', 'ANNOUNCEMENT', 'INTEGRATION', 'TEMPORARY');

-- CreateEnum
CREATE TYPE "ChannelVisibility" AS ENUM ('TENANT_WIDE', 'DEPARTMENT_ONLY', 'PROJECT_TEAM', 'INVITED_ONLY', 'MANAGERS_ONLY');

-- CreateEnum
CREATE TYPE "ChargebackStatus" AS ENUM ('RECEIVED', 'EVIDENCE_REQUIRED', 'UNDER_REVIEW', 'WON', 'LOST', 'ACCEPTED', 'DISPUTED', 'ARBITRATION');

-- CreateEnum
CREATE TYPE "ChunkType" AS ENUM ('PARAGRAPH', 'PAGE', 'SECTION', 'TABLE', 'IMAGE_CAPTION', 'HEADER', 'FOOTER', 'METADATA');

-- CreateEnum
CREATE TYPE "ClockStatus" AS ENUM ('CLOCKED_IN', 'CLOCKED_OUT', 'BREAK', 'LUNCH', 'OFFLINE');

-- CreateEnum
CREATE TYPE "CommunicationAttachmentStatus" AS ENUM ('UPLOADING', 'UPLOADED', 'PROCESSING', 'READY', 'FAILED', 'QUARANTINED', 'DELETED');

-- CreateEnum
CREATE TYPE "CommunicationAttachmentType" AS ENUM ('IMAGE', 'DOCUMENT', 'VIDEO', 'AUDIO', 'ARCHIVE', 'SPREADSHEET', 'PRESENTATION', 'CODE', 'TEXT', 'OTHER');

-- CreateEnum
CREATE TYPE "CommunicationMessagePriority" AS ENUM ('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL');

-- CreateEnum
CREATE TYPE "CommunicationMessageStatus" AS ENUM ('SENT', 'DELIVERED', 'READ', 'EDITED', 'DELETED', 'HIDDEN', 'FLAGGED', 'MODERATED');

-- CreateEnum
CREATE TYPE "CommunicationMessageType" AS ENUM ('TEXT', 'SYSTEM', 'ANNOUNCEMENT', 'THREAD_REPLY', 'MENTION', 'FILE_SHARE', 'INTEGRATION', 'POLL', 'REMINDER');

-- CreateEnum
CREATE TYPE "CompensationType" AS ENUM ('SALARY', 'HOURLY', 'COMMISSION', 'PIECE_RATE', 'BONUS', 'OVERTIME', 'ALLOWANCE', 'STIPEND');

-- CreateEnum
CREATE TYPE "ComplianceLevel" AS ENUM ('BASIC', 'STANDARD', 'ENTERPRISE', 'SOC2');

-- CreateEnum
CREATE TYPE "ConnectionHealthStatus" AS ENUM ('HEALTHY', 'WARNING', 'CRITICAL', 'UNKNOWN');

-- CreateEnum
CREATE TYPE "ContactStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'PRIMARY', 'SECONDARY', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ContactType" AS ENUM ('PHONE', 'EMAIL', 'SMS', 'EMERGENCY', 'WORK_PHONE', 'MOBILE');

-- CreateEnum
CREATE TYPE "CostCenterStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'BUDGET_FROZEN', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "CostCenterType" AS ENUM ('DEPARTMENT', 'PROJECT', 'LOCATION', 'FUNCTION', 'PRODUCT');

-- CreateEnum
CREATE TYPE "CoverageLevel" AS ENUM ('EMPLOYEE_ONLY', 'EMPLOYEE_SPOUSE', 'EMPLOYEE_CHILDREN', 'FAMILY');

-- CreateEnum
CREATE TYPE "CreditMemoStatus" AS ENUM ('DRAFT', 'PENDING_APPROVAL', 'APPROVED', 'ISSUED', 'APPLIED', 'CANCELLED', 'VOID');

-- CreateEnum
CREATE TYPE "CurrencyCode" AS ENUM ('USD', 'EUR', 'GBP', 'CAD', 'AUD', 'JPY', 'CHF', 'CNY', 'INR', 'BRL', 'MXN', 'KRW', 'SGD', 'HKD', 'NOK', 'SEK', 'DKK', 'PLN', 'CZK', 'HUF', 'RUB', 'ZAR', 'NZD', 'THB', 'MYR', 'IDR', 'PHP', 'VND', 'TWD', 'ILS', 'AED', 'SAR', 'EGP', 'TRY', 'CLP', 'COP', 'PEN', 'ARS', 'UYU');

-- CreateEnum
CREATE TYPE "CurrencyRateSource" AS ENUM ('MANUAL', 'AUTOMATED', 'BANK_FEED', 'API_SERVICE', 'GOVERNMENT', 'CENTRAL_BANK');

-- CreateEnum
CREATE TYPE "CurrencyRateStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'HISTORICAL', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "CurrencyRateType" AS ENUM ('SPOT', 'AVERAGE', 'CLOSING', 'BUDGET', 'FIXED', 'HISTORICAL');

-- CreateEnum
CREATE TYPE "DataIsolationLevel" AS ENUM ('SHARED_DATABASE', 'DEDICATED_SCHEMA', 'DEDICATED_DATABASE', 'DEDICATED_INSTANCE');

-- CreateEnum
CREATE TYPE "DataRestrictionLevel" AS ENUM ('ALLOW', 'REVIEW_REQUIRED', 'AUTO_REDACT', 'WATERMARK_ONLY', 'BLOCK', 'RESTRICTED');

-- CreateEnum
CREATE TYPE "DataSyncDirection" AS ENUM ('IMPORT_ONLY', 'EXPORT_ONLY', 'BIDIRECTIONAL', 'DISABLED');

-- CreateEnum
CREATE TYPE "DataType" AS ENUM ('STRING', 'INTEGER', 'DECIMAL', 'BOOLEAN', 'DATE', 'DATETIME', 'JSON', 'ARRAY', 'BINARY', 'UUID', 'EMAIL', 'URL', 'PHONE', 'CUSTOM');

-- CreateEnum
CREATE TYPE "DebitCreditIndicator" AS ENUM ('DEBIT', 'CREDIT');

-- CreateEnum
CREATE TYPE "DeductionType" AS ENUM ('HEALTH_INSURANCE', 'DENTAL_INSURANCE', 'VISION_INSURANCE', 'LIFE_INSURANCE', 'RETIREMENT_401K', 'RETIREMENT_403B', 'FLEXIBLE_SPENDING', 'HEALTH_SAVINGS', 'PARKING', 'UNION_DUES', 'GARNISHMENT', 'CHILD_SUPPORT', 'LOAN_REPAYMENT');

-- CreateEnum
CREATE TYPE "DeliveryChannel" AS ENUM ('PUSH', 'EMAIL', 'SMS', 'CHANNEL', 'DIRECT_MESSAGE', 'WEBHOOK', 'API', 'DASHBOARD');

-- CreateEnum
CREATE TYPE "DeliveryStatus" AS ENUM ('PENDING', 'SENT', 'DELIVERED', 'READ', 'ACKNOWLEDGED', 'FAILED', 'CANCELLED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "DeliveryTargetType" AS ENUM ('MEMBER', 'CHANNEL', 'DIRECT_CHAT', 'EMAIL_ADDRESS', 'PHONE_NUMBER', 'WEBHOOK_URL', 'API_ENDPOINT');

-- CreateEnum
CREATE TYPE "DepartmentStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'RESTRUCTURING', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "DepartmentType" AS ENUM ('EXECUTIVE', 'HUMAN_RESOURCES', 'FINANCE_ACCOUNTING', 'OPERATIONS', 'SALES_MARKETING', 'ENGINEERING', 'CONSTRUCTION', 'SAFETY_QUALITY', 'INFORMATION_TECHNOLOGY', 'LEGAL_COMPLIANCE');

-- CreateEnum
CREATE TYPE "DependencyType" AS ENUM ('FINISH_TO_START', 'START_TO_START', 'FINISH_TO_FINISH', 'START_TO_FINISH');

-- CreateEnum
CREATE TYPE "DeviceStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'COMPROMISED', 'REVOKED', 'PENDING_VERIFICATION');

-- CreateEnum
CREATE TYPE "DeviceType" AS ENUM ('MOBILE', 'DESKTOP', 'TABLET', 'BROWSER', 'API_CLIENT', 'OTHER');

-- CreateEnum
CREATE TYPE "DirectChatStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'BLOCKED', 'RESTRICTED', 'DELETED');

-- CreateEnum
CREATE TYPE "DirectChatType" AS ENUM ('PERSONAL', 'BUSINESS', 'SUPPORT', 'ESCALATED', 'TEMPORARY');

-- CreateEnum
CREATE TYPE "DocumentIndexStatus" AS ENUM ('PENDING', 'INDEXING', 'INDEXED', 'FAILED', 'OUTDATED', 'DELETED');

-- CreateEnum
CREATE TYPE "DocumentType" AS ENUM ('DRIVERS_LICENSE', 'PASSPORT', 'I9', 'VISA', 'SOCIAL_SECURITY_CARD', 'BIRTH_CERTIFICATE', 'GREEN_CARD', 'WORK_PERMIT');

-- CreateEnum
CREATE TYPE "DocumentVerificationStatus" AS ENUM ('PENDING', 'VERIFIED', 'REJECTED', 'EXPIRED', 'UNDER_REVIEW');

-- CreateEnum
CREATE TYPE "DunningLevel" AS ENUM ('FIRST_NOTICE', 'SECOND_NOTICE', 'FINAL_NOTICE', 'COLLECTION_AGENCY', 'LEGAL_ACTION');

-- CreateEnum
CREATE TYPE "DunningNoticeStatus" AS ENUM ('DRAFT', 'SENT', 'ACKNOWLEDGED', 'DISPUTED', 'RESOLVED', 'ESCALATED');

-- CreateEnum
CREATE TYPE "ESignatureStatus" AS ENUM ('DRAFT', 'SENT', 'DELIVERED', 'PARTIALLY_SIGNED', 'SIGNED', 'COMPLETED', 'DECLINED', 'VOIDED', 'EXPIRED', 'AUTHENTICATION_FAILED');

-- CreateEnum
CREATE TYPE "EmbeddingModel" AS ENUM ('TEXT_EMBEDDING_ADA_002', 'TEXT_EMBEDDING_3_SMALL', 'TEXT_EMBEDDING_3_LARGE', 'SENTENCE_TRANSFORMERS', 'COHERE_EMBED', 'AZURE_TEXT_EMBEDDING', 'CUSTOM_MODEL');

-- CreateEnum
CREATE TYPE "EmploymentStatus" AS ENUM ('ACTIVE', 'TERMINATED', 'LEAVE_OF_ABSENCE', 'SUSPENDED', 'RETIRED', 'DECEASED');

-- CreateEnum
CREATE TYPE "EmploymentType" AS ENUM ('FULL_TIME', 'PART_TIME', 'CONTRACT', 'TEMPORARY', 'INTERN', 'CONSULTANT');

-- CreateEnum
CREATE TYPE "EncryptionMethod" AS ENUM ('AES_256_GCM', 'RSA_4096', 'KMS_MANAGED', 'HASHICORP_VAULT', 'AZURE_KEY_VAULT', 'AWS_SECRETS_MANAGER', 'GCP_SECRET_MANAGER');

-- CreateEnum
CREATE TYPE "EnrollmentStatus" AS ENUM ('ACTIVE', 'TERMINATED', 'SUSPENDED', 'PENDING', 'DECLINED');

-- CreateEnum
CREATE TYPE "EscalationLevel" AS ENUM ('NONE', 'MANAGER', 'DIRECTOR', 'EXECUTIVE', 'BOARD');

-- CreateEnum
CREATE TYPE "EstimateApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'CANCELLED', 'ESCALATED');

-- CreateEnum
CREATE TYPE "EstimateChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "EstimateDiscountType" AS ENUM ('NONE', 'PERCENTAGE', 'FIXED_AMOUNT', 'VOLUME', 'EARLY_PAYMENT', 'PROMOTIONAL');

-- CreateEnum
CREATE TYPE "EstimateStatus" AS ENUM ('DRAFT', 'SENT', 'VIEWED', 'CLIENT_APPROVED', 'CLIENT_DECLINED', 'APPROVED', 'DECLINED', 'CONVERTED', 'EXPIRED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "EstimateTaxType" AS ENUM ('NONE', 'SALES_TAX', 'VAT', 'GST', 'CUSTOM');

-- CreateEnum
CREATE TYPE "EstimateTermType" AS ENUM ('PAYMENT', 'DELIVERY', 'WARRANTY', 'CANCELLATION', 'SCOPE', 'LIABILITY', 'COMPLIANCE');

-- CreateEnum
CREATE TYPE "EventType" AS ENUM ('TENANT_PROVISIONED', 'TENANT_SUSPENDED', 'TENANT_ACTIVATED', 'SUBSCRIPTION_CREATED', 'SUBSCRIPTION_UPDATED', 'SUBSCRIPTION_CANCELED', 'USAGE_RECORDED', 'FEATURE_FLAG_TOGGLED', 'BILLING_CYCLE_COMPLETED', 'AUDIT_LOG_CREATED', 'USER_INVITED', 'USER_ACTIVATED', 'PROJECT_CREATED', 'PROJECT_COMPLETED', 'ESTIMATE_APPROVED', 'INVOICE_GENERATED');

-- CreateEnum
CREATE TYPE "ExpenseChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ExpenseReportStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'UNDER_REVIEW', 'APPROVED', 'REJECTED', 'PAID', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ExpenseStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED', 'PAID', 'DISPUTED');

-- CreateEnum
CREATE TYPE "ExternalAccessLevel" AS ENUM ('VIEW_ONLY', 'DOWNLOAD', 'COMMENT', 'LIMITED_EDIT', 'FULL_COLLABORATE');

-- CreateEnum
CREATE TYPE "ExternalDataPolicyStatus" AS ENUM ('DRAFT', 'ACTIVE', 'SUSPENDED', 'UNDER_REVIEW', 'DEPRECATED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ExternalDataPolicyType" AS ENUM ('ENTITY_BASED', 'CONTENT_BASED', 'USER_BASED', 'INTEGRATION_BASED', 'GLOBAL', 'CONDITIONAL');

-- CreateEnum
CREATE TYPE "ExternalShareAuditStatus" AS ENUM ('LOGGED', 'PENDING_REVIEW', 'REVIEWED', 'FLAGGED', 'RESOLVED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ExternalShareEventType" AS ENUM ('DOCUMENT_ACCESS', 'DOCUMENT_DOWNLOAD', 'DOCUMENT_SHARE', 'MESSAGE_SHARE', 'LINK_ACCESS', 'API_ACCESS', 'EXPORT_DATA', 'INTEGRATION_SYNC');

-- CreateEnum
CREATE TYPE "ExternalShareStatus" AS ENUM ('ACTIVE', 'EXPIRED', 'REVOKED', 'SUSPENDED', 'USED', 'DISABLED');

-- CreateEnum
CREATE TYPE "ExternalShareType" AS ENUM ('CHANNEL_ACCESS', 'MESSAGE_VIEW', 'FILE_DOWNLOAD', 'DOCUMENT_VIEW', 'THREAD_VIEW', 'TEMPORARY_ACCESS', 'COLLABORATION');

-- CreateEnum
CREATE TYPE "FLSAClassification" AS ENUM ('EXEMPT', 'NON_EXEMPT');

-- CreateEnum
CREATE TYPE "FeatureFlagScope" AS ENUM ('GLOBAL', 'TENANT', 'USER', 'ROLE');

-- CreateEnum
CREATE TYPE "FeeType" AS ENUM ('PROCESSING_FEE', 'TRANSACTION_FEE', 'CURRENCY_CONVERSION', 'CHARGEBACK_FEE', 'REFUND_FEE', 'MONTHLY_FEE', 'OTHER');

-- CreateEnum
CREATE TYPE "FileCategory" AS ENUM ('CONTRACT', 'INVOICE', 'PLAN', 'PHOTO', 'DOCUMENT', 'DRAWING', 'SPECIFICATION', 'REPORT', 'CERTIFICATE', 'OTHER');

-- CreateEnum
CREATE TYPE "FileObjectStatus" AS ENUM ('ACTIVE', 'ARCHIVED', 'QUARANTINED', 'DELETED', 'CORRUPTED');

-- CreateEnum
CREATE TYPE "GLAccountCategory" AS ENUM ('CURRENT_ASSET', 'FIXED_ASSET', 'INTANGIBLE_ASSET', 'CURRENT_LIABILITY', 'LONG_TERM_LIABILITY', 'EQUITY', 'OPERATING_REVENUE', 'NON_OPERATING_REVENUE', 'OPERATING_EXPENSE', 'NON_OPERATING_EXPENSE', 'COST_OF_SALES', 'ADMINISTRATIVE', 'SELLING');

-- CreateEnum
CREATE TYPE "GLAccountStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'ARCHIVED', 'DEPRECATED');

-- CreateEnum
CREATE TYPE "GLAccountType" AS ENUM ('ASSET', 'LIABILITY', 'EQUITY', 'REVENUE', 'EXPENSE', 'COST_OF_GOODS_SOLD', 'OTHER_INCOME', 'OTHER_EXPENSE');

-- CreateEnum
CREATE TYPE "GenderType" AS ENUM ('MALE', 'FEMALE', 'NON_BINARY', 'PREFER_NOT_TO_SAY');

-- CreateEnum
CREATE TYPE "GoalStatus" AS ENUM ('ACTIVE', 'COMPLETED', 'CANCELLED', 'ON_HOLD');

-- CreateEnum
CREATE TYPE "GoalType" AS ENUM ('PERFORMANCE', 'DEVELOPMENT', 'BEHAVIORAL', 'STRATEGIC', 'PERSONAL');

-- CreateEnum
CREATE TYPE "GoodsInspectionStatus" AS ENUM ('NOT_REQUIRED', 'PENDING', 'IN_PROGRESS', 'PASSED', 'FAILED', 'CONDITIONAL');

-- CreateEnum
CREATE TYPE "GoodsReceiptStatus" AS ENUM ('DRAFT', 'PENDING', 'PARTIALLY_RECEIVED', 'RECEIVED', 'DISCREPANCY', 'RETURNED', 'CLOSED');

-- CreateEnum
CREATE TYPE "HRWorkforceChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "HolidayType" AS ENUM ('FEDERAL', 'STATE', 'COMPANY', 'RELIGIOUS', 'CULTURAL', 'FLOATING', 'PERSONAL');

-- CreateEnum
CREATE TYPE "ImpactLevel" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "IncidentPriority" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'URGENT', 'EMERGENCY');

-- CreateEnum
CREATE TYPE "IncidentSeverity" AS ENUM ('MINOR', 'MODERATE', 'MAJOR', 'CRITICAL', 'CATASTROPHIC');

-- CreateEnum
CREATE TYPE "IncidentStatus" AS ENUM ('REPORTED', 'INVESTIGATING', 'CONFIRMED', 'RESOLVED', 'CLOSED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "InsightSeverity" AS ENUM ('INFO', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'BLOCKING');

-- CreateEnum
CREATE TYPE "InsightStatus" AS ENUM ('PENDING', 'REVIEWED', 'ACCEPTED', 'REJECTED', 'IMPLEMENTED', 'IGNORED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "InsightType" AS ENUM ('RISK_ASSESSMENT', 'COMPLIANCE_CHECK', 'ANOMALY_DETECTION', 'PREDICTION', 'RECOMMENDATION', 'CLASSIFICATION', 'SENTIMENT_ANALYSIS', 'QUALITY_SCORE');

-- CreateEnum
CREATE TYPE "InspectionApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "InspectionStatus" AS ENUM ('SCHEDULED', 'IN_PROGRESS', 'PASSED', 'FAILED', 'RESCHEDULED');

-- CreateEnum
CREATE TYPE "IntegrationCapability" AS ENUM ('READ_ONLY', 'WRITE_ONLY', 'BIDIRECTIONAL', 'REAL_TIME', 'BULK_IMPORT', 'BULK_EXPORT', 'WEBHOOK_SUPPORT', 'FILE_UPLOAD', 'FILE_DOWNLOAD', 'STREAMING');

-- CreateEnum
CREATE TYPE "IntegrationCategory" AS ENUM ('FINANCIAL', 'COMMUNICATION', 'DOCUMENT_STORAGE', 'CRM', 'PROJECT_MANAGEMENT', 'ERP', 'ESIGNATURE', 'PAYMENT', 'ANALYTICS', 'AUTOMATION', 'HR_PAYROLL', 'COMPLIANCE', 'OTHER');

-- CreateEnum
CREATE TYPE "IntegrationConnectionStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'CONNECTING', 'AUTHENTICATING', 'ERROR', 'EXPIRED', 'REVOKED', 'SUSPENDED', 'RECONNECTING');

-- CreateEnum
CREATE TYPE "IntegrationConnectorStatus" AS ENUM ('ENABLED', 'DISABLED', 'CONFIGURING', 'ERROR', 'PENDING_APPROVAL', 'SUSPENDED', 'MIGRATING');

-- CreateEnum
CREATE TYPE "IntegrationEnvironment" AS ENUM ('PRODUCTION', 'SANDBOX', 'STAGING', 'DEVELOPMENT');

-- CreateEnum
CREATE TYPE "IntegrationProviderStatus" AS ENUM ('ACTIVE', 'MAINTENANCE', 'DEPRECATED', 'BETA', 'DISCONTINUED', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "InventoryChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "InventoryItemStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'DISCONTINUED', 'OUT_OF_STOCK', 'LOW_STOCK', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "InventoryTransactionStatus" AS ENUM ('PENDING', 'COMPLETED', 'CANCELLED', 'REVERSED');

-- CreateEnum
CREATE TYPE "InventoryTransactionType" AS ENUM ('RECEIPT', 'ISSUE', 'TRANSFER', 'ADJUSTMENT', 'COUNT', 'RETURN', 'CONSUMPTION', 'PRODUCTION');

-- CreateEnum
CREATE TYPE "InvoiceChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "InvoiceLineItemType" AS ENUM ('SERVICE', 'PRODUCT', 'LABOR', 'MATERIAL', 'EXPENSE', 'EQUIPMENT');

-- CreateEnum
CREATE TYPE "InvoiceStatus" AS ENUM ('DRAFT', 'PENDING', 'SENT', 'PAID', 'OVERDUE', 'CANCELLED', 'REFUNDED');

-- CreateEnum
CREATE TYPE "InvoiceTaxType" AS ENUM ('SALES', 'VAT', 'GST', 'EXCISE', 'CUSTOM', 'NONE');

-- CreateEnum
CREATE TYPE "JobLevel" AS ENUM ('ENTRY', 'JUNIOR', 'SENIOR', 'PRINCIPAL', 'EXECUTIVE');

-- CreateEnum
CREATE TYPE "JobPriority" AS ENUM ('LOW', 'NORMAL', 'HIGH', 'CRITICAL', 'EMERGENCY');

-- CreateEnum
CREATE TYPE "JobProfileStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'UNDER_REVIEW', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "JournalEntrySource" AS ENUM ('MANUAL', 'INVOICE', 'BILL', 'PAYMENT', 'PAYROLL', 'DEPRECIATION', 'ADJUSTMENT', 'SYSTEM', 'INTEGRATION');

-- CreateEnum
CREATE TYPE "JournalEntryStatus" AS ENUM ('DRAFT', 'PENDING_APPROVAL', 'APPROVED', 'POSTED', 'REVERSED', 'CANCELLED', 'LOCKED');

-- CreateEnum
CREATE TYPE "JournalEntryType" AS ENUM ('STANDARD', 'ADJUSTING', 'CLOSING', 'REVERSING', 'RECURRING', 'SYSTEM_GENERATED');

-- CreateEnum
CREATE TYPE "JournalLineStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'CORRECTED', 'REVERSED');

-- CreateEnum
CREATE TYPE "LeadStatus" AS ENUM ('NEW', 'CONTACTED', 'QUALIFIED', 'PROPOSAL', 'NEGOTIATION', 'WON', 'LOST', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "LeaveStatus" AS ENUM ('REQUESTED', 'APPROVED', 'ACTIVE', 'COMPLETED', 'CANCELLED', 'DENIED');

-- CreateEnum
CREATE TYPE "LeaveType" AS ENUM ('VACATION', 'SICK', 'PERSONAL', 'MATERNITY', 'PATERNITY', 'FAMILY_MEDICAL', 'BEREAVEMENT', 'JURY_DUTY', 'MILITARY', 'SABBATICAL', 'UNPAID');

-- CreateEnum
CREATE TYPE "LocationStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'TEMPORARY_CLOSURE', 'PERMANENTLY_CLOSED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "LocationType" AS ENUM ('SITE', 'OFFICE', 'WAREHOUSE', 'STAGING_AREA');

-- CreateEnum
CREATE TYPE "LogCategory" AS ENUM ('SYSTEM', 'BUSINESS', 'INTEGRATION', 'SECURITY', 'PERFORMANCE', 'ERROR', 'AUDIT');

-- CreateEnum
CREATE TYPE "LogLevel" AS ENUM ('TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL');

-- CreateEnum
CREATE TYPE "LogType" AS ENUM ('EXECUTION', 'API_REQUEST', 'API_RESPONSE', 'DATA_TRANSFORMATION', 'VALIDATION', 'ERROR_HANDLING', 'PERFORMANCE', 'SECURITY', 'AUDIT', 'CUSTOM');

-- CreateEnum
CREATE TYPE "JobRunStatus" AS ENUM ('QUEUED', 'RUNNING', 'SUCCEEDED', 'FAILED', 'CANCELLED', 'TIMEOUT', 'RETRIED', 'SKIPPED');

-- CreateEnum
CREATE TYPE "JobScheduleStatus" AS ENUM ('ACTIVE', 'PAUSED', 'DISABLED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "DeploymentEnvironment" AS ENUM ('PRODUCTION', 'STAGING', 'TEST', 'DEVELOPMENT');

-- CreateEnum
CREATE TYPE "MappingDirection" AS ENUM ('IMPORT', 'EXPORT', 'BIDIRECTIONAL');

-- CreateEnum
CREATE TYPE "MappingStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'DEPRECATED', 'TESTING', 'ERROR');

-- CreateEnum
CREATE TYPE "MappingType" AS ENUM ('FIELD_MAPPING', 'VALUE_TRANSFORMATION', 'LOOKUP_TABLE', 'CALCULATED_FIELD', 'CONDITIONAL_MAPPING', 'AGGREGATION', 'CUSTOM_SCRIPT');

-- CreateEnum
CREATE TYPE "MaritalStatus" AS ENUM ('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED', 'SEPARATED', 'DOMESTIC_PARTNERSHIP');

-- CreateEnum
CREATE TYPE "MemberStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'PENDING', 'SUSPENDED', 'TERMINATED', 'INVITED');

-- CreateEnum
CREATE TYPE "MessageFormat" AS ENUM ('TEXT', 'MARKDOWN', 'HTML', 'RICH_TEXT');

-- CreateEnum
CREATE TYPE "MigrationStatus" AS ENUM ('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'ROLLBACK_IN_PROGRESS', 'ROLLBACK_COMPLETED');

-- CreateEnum
CREATE TYPE "MilestoneStatus" AS ENUM ('PLANNED', 'IN_PROGRESS', 'COMPLETED', 'DELAYED', 'CANCELLED', 'AT_RISK', 'BLOCKED');

-- CreateEnum
CREATE TYPE "MilestoneType" AS ENUM ('PROJECT_START', 'PROJECT_END', 'PHASE_COMPLETE', 'DELIVERY', 'PAYMENT', 'APPROVAL', 'REVIEW', 'TESTING', 'DEPLOYMENT', 'CUSTOM');

-- CreateEnum
CREATE TYPE "NameType" AS ENUM ('LEGAL', 'PREFERRED', 'MAIDEN', 'ALIAS', 'PROFESSIONAL');

-- CreateEnum
CREATE TYPE "NotificationChannel" AS ENUM ('EMAIL', 'PUSH', 'SMS', 'IN_APP', 'WEBHOOK');

-- CreateEnum
CREATE TYPE "NotificationLevel" AS ENUM ('ALL', 'MENTIONS_ONLY', 'DIRECT_MESSAGES', 'IMPORTANT_ONLY', 'MUTED');

-- CreateEnum
CREATE TYPE "OpportunityStatus" AS ENUM ('PROSPECTING', 'QUALIFICATION', 'NEEDS_ANALYSIS', 'PROPOSAL', 'NEGOTIATION', 'CLOSED_WON', 'CLOSED_LOST', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "OrgUnitStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'RESTRUCTURING', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "OrgUnitType" AS ENUM ('COMPANY', 'DIVISION', 'DEPARTMENT', 'TEAM', 'PROJECT_GROUP', 'COST_CENTER');

-- CreateEnum
CREATE TYPE "OvertimeRuleType" AS ENUM ('DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM');

-- CreateEnum
CREATE TYPE "OvertimeType" AS ENUM ('DAILY', 'WEEKLY', 'SEVENTH_DAY', 'HOLIDAY', 'DOUBLE_TIME');

-- CreateEnum
CREATE TYPE "PayFrequency" AS ENUM ('WEEKLY', 'BIWEEKLY', 'SEMI_MONTHLY', 'MONTHLY', 'QUARTERLY', 'ANNUALLY');

-- CreateEnum
CREATE TYPE "PayGroupStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PayStatementDeliveryMethod" AS ENUM ('EMAIL', 'PAPER', 'PORTAL', 'MOBILE_APP');

-- CreateEnum
CREATE TYPE "PayStatementStatus" AS ENUM ('DRAFT', 'GENERATED', 'DELIVERED', 'VIEWED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PayType" AS ENUM ('REGULAR', 'OVERTIME', 'DOUBLE_TIME', 'HOLIDAY', 'VACATION', 'SICK', 'BONUS', 'COMMISSION', 'ALLOWANCE', 'REIMBURSEMENT');

-- CreateEnum
CREATE TYPE "PaymentChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PaymentDirection" AS ENUM ('INBOUND', 'OUTBOUND');

-- CreateEnum
CREATE TYPE "PaymentMethodTokenStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'EXPIRED', 'REVOKED', 'COMPROMISED');

-- CreateEnum
CREATE TYPE "PaymentMethodType" AS ENUM ('CASH', 'CHECK', 'CREDIT_CARD', 'DEBIT_CARD', 'BANK_TRANSFER', 'ACH', 'WIRE', 'PAYPAL', 'STRIPE', 'OTHER');

-- CreateEnum
CREATE TYPE "PaymentProvider" AS ENUM ('STRIPE', 'PAYPAL', 'SQUARE', 'BRAINTREE', 'AUTHORIZE_NET', 'ADYEN', 'RAZORPAY', 'INTERNAL');

-- CreateEnum
CREATE TYPE "PaymentScheduleStatus" AS ENUM ('PENDING', 'DUE', 'OVERDUE', 'PAID', 'PARTIALLY_PAID', 'CANCELLED');

-- CreateEnum
CREATE TYPE "PaymentStatus" AS ENUM ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', 'PARTIALLY_REFUNDED');

-- CreateEnum
CREATE TYPE "PaymentTermStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PaymentTerms" AS ENUM ('DUE_ON_RECEIPT', 'NET_15', 'NET_30', 'NET_45', 'NET_60', 'EOM_30', 'CUSTOM');

-- CreateEnum
CREATE TYPE "PayoutStatus" AS ENUM ('DRAFT', 'PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REVERSED');

-- CreateEnum
CREATE TYPE "PayrollAdjustmentType" AS ENUM ('CORRECTION', 'BONUS', 'DEDUCTION', 'OVERTIME', 'VACATION', 'SICK_LEAVE', 'HOLIDAY', 'CUSTOM');

-- CreateEnum
CREATE TYPE "PayrollItemStatus" AS ENUM ('DRAFT', 'CALCULATED', 'APPROVED', 'PAID', 'CANCELLED', 'REVERSED');

-- CreateEnum
CREATE TYPE "PayrollItemType" AS ENUM ('SALARY', 'HOURLY', 'OVERTIME', 'BONUS', 'COMMISSION', 'ALLOWANCE', 'DEDUCTION', 'REIMBURSEMENT', 'TAX', 'BENEFIT');

-- CreateEnum
CREATE TYPE "PayrollPaymentMethod" AS ENUM ('BANK_ACCOUNT', 'CHECK_PRINTING', 'CASH_DISBURSEMENT', 'WIRE_SERVICE', 'ACH_NETWORK', 'CARD_LOADING', 'CRYPTO_WALLET', 'THIRD_PARTY');

-- CreateEnum
CREATE TYPE "PayrollPaymentMethodType" AS ENUM ('DIRECT_DEPOSIT', 'CHECK', 'CASH', 'WIRE_TRANSFER', 'PREPAID_CARD');

-- CreateEnum
CREATE TYPE "PayrollPaymentType" AS ENUM ('DIRECT_DEPOSIT', 'CHECK', 'CASH', 'WIRE_TRANSFER', 'ACH', 'PREPAID_CARD', 'CRYPTO', 'CUSTOM');

-- CreateEnum
CREATE TYPE "PayrollRunStatus" AS ENUM ('DRAFT', 'CALCULATING', 'CALCULATED', 'REVIEWING', 'APPROVED', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'ERROR');

-- CreateEnum
CREATE TYPE "PayrollRunType" AS ENUM ('REGULAR', 'SUPPLEMENTAL', 'BONUS', 'CORRECTION', 'YEAR_END', 'FINAL');

-- CreateEnum
CREATE TYPE "PayrollTaxType" AS ENUM ('FEDERAL', 'STATE', 'LOCAL', 'FICA', 'MEDICARE', 'UNEMPLOYMENT', 'DISABILITY', 'CUSTOM');

-- CreateEnum
CREATE TYPE "PerformanceRating" AS ENUM ('EXCEEDS_EXPECTATIONS', 'MEETS_EXPECTATIONS', 'BELOW_EXPECTATIONS', 'UNSATISFACTORY', 'NOT_RATED');

-- CreateEnum
CREATE TYPE "PermissionScope" AS ENUM ('GLOBAL', 'TENANT', 'PROJECT', 'ESTIMATE', 'INVOICE', 'TASK', 'INVENTORY');

-- CreateEnum
CREATE TYPE "PersonStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'DECEASED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PlatformTenantChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PlaybookStatus" AS ENUM ('DRAFT', 'ACTIVE', 'PAUSED', 'ARCHIVED', 'DEPRECATED');

-- CreateEnum
CREATE TYPE "PlaybookTrigger" AS ENUM ('MANUAL', 'SCHEDULED', 'EVENT_DRIVEN', 'API_CALL', 'WEBHOOK', 'FILE_UPLOAD', 'ENTITY_CHANGE');

-- CreateEnum
CREATE TYPE "PolicyRiskLevel" AS ENUM ('VERY_LOW', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "PositionBudgetStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED');

-- CreateEnum
CREATE TYPE "PositionStatus" AS ENUM ('ACTIVE', 'VACANT', 'ON_HOLD', 'ELIMINATED', 'FROZEN');

-- CreateEnum
CREATE TYPE "PositionType" AS ENUM ('PERMANENT', 'TEMPORARY', 'CONTRACT', 'INTERN', 'CONSULTANT', 'SEASONAL');

-- CreateEnum
CREATE TYPE "PreferredContactMethod" AS ENUM ('EMAIL', 'PHONE', 'SMS', 'PORTAL', 'MAIL');

-- CreateEnum
CREATE TYPE "ProcurementApprovalStatus" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED', 'DELEGATED');

-- CreateEnum
CREATE TYPE "ProcurementChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ProcurementUnitOfMeasure" AS ENUM ('EA', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'YEAR', 'KG', 'LB', 'TON', 'M', 'FT', 'IN', 'M2', 'M3', 'L', 'GAL', 'BOX', 'CASE', 'PALLET', 'LOT', 'SET');

-- CreateEnum
CREATE TYPE "ProficiencyLevel" AS ENUM ('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', 'MASTER');

-- CreateEnum
CREATE TYPE "ProjectChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ProjectStatus" AS ENUM ('PLANNING', 'ACTIVE', 'IN_PROGRESS', 'COMPLETED', 'ON_HOLD', 'CANCELLED', 'CLOSED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "PromptParameterType" AS ENUM ('TEXT', 'NUMBER', 'BOOLEAN', 'DATE', 'JSON', 'FILE_REFERENCE', 'ENTITY_REFERENCE');

-- CreateEnum
CREATE TYPE "PromptTemplateType" AS ENUM ('COMPLETION', 'CHAT', 'CLASSIFICATION', 'SUMMARIZATION', 'EXTRACTION', 'TRANSLATION', 'CODE_GENERATION', 'ANALYSIS');

-- CreateEnum
CREATE TYPE "PurchaseOrderStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'SENT', 'ACKNOWLEDGED', 'PARTIALLY_RECEIVED', 'RECEIVED', 'CANCELLED', 'CLOSED');

-- CreateEnum
CREATE TYPE "QualityGrade" AS ENUM ('A', 'B', 'C', 'D', 'REJECT');

-- CreateEnum
CREATE TYPE "QuoteStatus" AS ENUM ('DRAFT', 'PENDING', 'SENT', 'VIEWED', 'ACCEPTED', 'REJECTED', 'EXPIRED', 'CONVERTED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "InsuranceType" AS ENUM ('GENERAL_LIABILITY', 'WORKERS_COMPENSATION', 'PROFESSIONAL_LIABILITY', 'COMMERCIAL_AUTO', 'BUILDERS_RISK', 'COMMERCIAL_PROPERTY', 'CYBER_LIABILITY', 'EMPLOYMENT_PRACTICES', 'DIRECTORS_OFFICERS', 'SURETY_BOND', 'PERFORMANCE_BOND', 'PAYMENT_BOND', 'BID_BOND', 'MAINTENANCE_BOND');

-- CreateEnum
CREATE TYPE "InsuranceStatus" AS ENUM ('ACTIVE', 'EXPIRED', 'CANCELLED', 'PENDING_RENEWAL', 'SUSPENDED', 'DECLINED', 'UNDER_REVIEW');

-- CreateEnum
CREATE TYPE "ApprovalStatus" AS ENUM ('PENDING', 'APPROVED', 'REJECTED', 'REQUIRES_REVISION', 'ESCALATED', 'CANCELLED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "CustomerSegmentType" AS ENUM ('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', 'GOVERNMENT', 'MUNICIPAL', 'INSTITUTIONAL', 'NON_PROFIT', 'INFRASTRUCTURE', 'HEALTHCARE', 'EDUCATION', 'HOSPITALITY', 'RETAIL');

-- CreateEnum
CREATE TYPE "CommissionType" AS ENUM ('PERCENTAGE', 'FLAT_AMOUNT', 'TIERED_PERCENTAGE', 'SLIDING_SCALE', 'BONUS_BASED', 'MILESTONE_BASED');

-- CreateEnum
CREATE TYPE "RFIReplyType" AS ENUM ('RESPONSE', 'CLARIFICATION', 'FOLLOW_UP');

-- CreateEnum
CREATE TYPE "RFIStatus" AS ENUM ('SUBMITTED', 'UNDER_REVIEW', 'CLARIFICATION_REQUESTED', 'ANSWERED', 'CLOSED');

-- CreateEnum
CREATE TYPE "RFQResponseStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'REVISED', 'EVALUATED', 'AWARDED', 'UNDER_REVIEW', 'ACCEPTED', 'REJECTED', 'WITHDRAWN');

-- CreateEnum
CREATE TYPE "RFQStatus" AS ENUM ('DRAFT', 'PUBLISHED', 'RESPONSES_RECEIVED', 'EVALUATING', 'AWARDED', 'CANCELLED', 'CLOSED');

-- CreateEnum
CREATE TYPE "RFQType" AS ENUM ('STANDARD', 'EMERGENCY', 'BLANKET', 'SERVICES', 'CONSTRUCTION', 'IT_SERVICES', 'PROFESSIONAL');

-- CreateEnum
CREATE TYPE "ReadStatus" AS ENUM ('DELIVERED', 'READ', 'ACKNOWLEDGED', 'ARCHIVED', 'IGNORED');

-- CreateEnum
CREATE TYPE "ReasonCodeCategory" AS ENUM ('FINANCIAL', 'POLICY', 'TECHNICAL', 'LEGAL', 'RESOURCE', 'TIMELINE', 'QUALITY', 'COMPLIANCE', 'OTHER');

-- CreateEnum
CREATE TYPE "ReasonCodeStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED', 'DEPRECATED');

-- CreateEnum
CREATE TYPE "ReasonCodeType" AS ENUM ('APPROVAL', 'REJECTION', 'DELEGATION', 'ESCALATION', 'CANCELLATION', 'WITHDRAWAL', 'CONDITIONAL', 'GENERAL');

-- CreateEnum
CREATE TYPE "RecipientStatus" AS ENUM ('PENDING', 'SENT', 'DELIVERED', 'VIEWED', 'SIGNED', 'DECLINED', 'AUTHENTICATION_FAILED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "RecipientType" AS ENUM ('SIGNER', 'APPROVER', 'VIEWER', 'CARBON_COPY', 'WITNESS', 'NOTARY');

-- CreateEnum
CREATE TYPE "ReconciliationStatus" AS ENUM ('DRAFT', 'IN_PROGRESS', 'COMPLETED', 'ADJUSTED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "RedactionMethod" AS ENUM ('REPLACE_WITH_MASK', 'REPLACE_WITH_TEXT', 'REMOVE_COMPLETELY', 'BLUR_VISUAL', 'ENCRYPT_IN_PLACE');

-- CreateEnum
CREATE TYPE "RedactionRiskLevel" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "RedactionRuleStatus" AS ENUM ('DRAFT', 'TESTING', 'ACTIVE', 'SUSPENDED', 'DEPRECATED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "RedactionRuleType" AS ENUM ('PATTERN_BASED', 'KEYWORD_BASED', 'AI_ENHANCED', 'CONTEXT_AWARE', 'HYBRID');

-- CreateEnum
CREATE TYPE "RefundStatus" AS ENUM ('DRAFT', 'PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REVERSED');

-- CreateEnum
CREATE TYPE "ReimbursementStatus" AS ENUM ('SUBMITTED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'PAID', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ReimbursementType" AS ENUM ('MILEAGE', 'MEALS', 'LODGING', 'TRAVEL', 'SUPPLIES', 'EQUIPMENT', 'TRAINING', 'PHONE', 'INTERNET', 'OTHER');

-- CreateEnum
CREATE TYPE "RelationshipType" AS ENUM ('SPOUSE', 'CHILD', 'DOMESTIC_PARTNER', 'DEPENDENT', 'BENEFICIARY');

-- CreateEnum
CREATE TYPE "ResourceType" AS ENUM ('HUMAN', 'EQUIPMENT', 'MATERIAL', 'BUDGET', 'SOFTWARE', 'FACILITY');

-- CreateEnum
CREATE TYPE "RetentionPolicy" AS ENUM ('DAYS_30', 'DAYS_90', 'MONTHS_6', 'YEAR_1', 'YEARS_3', 'YEARS_7', 'YEARS_10', 'PERMANENT');

-- CreateEnum
CREATE TYPE "RetryStrategy" AS ENUM ('NONE', 'LINEAR', 'EXPONENTIAL', 'CUSTOM');

-- CreateEnum
CREATE TYPE "ReviewStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'COMPLETED', 'APPROVED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "ReviewType" AS ENUM ('ANNUAL', 'QUARTERLY', 'PROBATIONARY', 'MID_YEAR', 'PROJECT_BASED', 'EXIT');

-- CreateEnum
CREATE TYPE "RiskStatus" AS ENUM ('IDENTIFIED', 'ANALYZING', 'MITIGATING', 'MONITORING', 'CLOSED');

-- CreateEnum
CREATE TYPE "RoleType" AS ENUM ('SYSTEM', 'CUSTOM', 'INHERITED');

-- CreateEnum
CREATE TYPE "SafetyRating" AS ENUM ('A_EXCELLENT', 'B_GOOD', 'C_SATISFACTORY', 'D_NEEDS_IMPROVEMENT', 'F_UNSATISFACTORY', 'NOT_RATED', 'UNDER_REVIEW', 'EXEMPT');

-- CreateEnum
CREATE TYPE "ScheduleExceptionType" AS ENUM ('HOLIDAY', 'MAINTENANCE', 'WEATHER_DELAY', 'RESOURCE_UNAVAILABLE', 'EMERGENCY', 'CUSTOM');

-- CreateEnum
CREATE TYPE "ScheduleStatus" AS ENUM ('DRAFT', 'ACTIVE', 'BASELINED', 'ARCHIVED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "SecretStatus" AS ENUM ('ACTIVE', 'EXPIRED', 'REVOKED', 'PENDING_ROTATION', 'ROTATING', 'INACTIVE');

-- CreateEnum
CREATE TYPE "SecretType" AS ENUM ('API_KEY', 'OAUTH_ACCESS_TOKEN', 'OAUTH_REFRESH_TOKEN', 'CLIENT_SECRET', 'CERTIFICATE', 'PRIVATE_KEY', 'PUBLIC_KEY', 'PASSWORD', 'WEBHOOK_SECRET', 'ENCRYPTION_KEY', 'CUSTOM');

-- CreateEnum
CREATE TYPE "SecurityLevel" AS ENUM ('PUBLIC', 'STANDARD', 'ENHANCED', 'RESTRICTED', 'CONFIDENTIAL', 'TOP_SECRET');

-- CreateEnum
CREATE TYPE "SessionStatus" AS ENUM ('ACTIVE', 'EXPIRED', 'REVOKED', 'TERMINATED');

-- CreateEnum
CREATE TYPE "ServiceAccountStatus" AS ENUM ('ACTIVE', 'SUSPENDED', 'EXPIRED', 'REVOKED');

-- CreateEnum
CREATE TYPE "ServiceAccountType" AS ENUM ('API', 'INTEGRATION', 'AUTOMATION', 'MONITORING', 'WEBHOOK', 'SCHEDULED_JOB');

-- CreateEnum
CREATE TYPE "SignatureIntentStatus" AS ENUM ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "SignatureIntentType" AS ENUM ('SIGN', 'INITIAL', 'APPROVE', 'DECLINE', 'VIEW', 'DATE', 'TEXT', 'CHECKBOX', 'DROPDOWN');

-- CreateEnum
CREATE TYPE "SignatureSessionStatus" AS ENUM ('ACTIVE', 'COMPLETED', 'EXPIRED', 'TERMINATED', 'ERROR');

-- CreateEnum
CREATE TYPE "SignatureType" AS ENUM ('ELECTRONIC', 'DIGITAL', 'WET_INK', 'CLICK_TO_SIGN', 'BIOMETRIC');

-- CreateEnum
CREATE TYPE "StakeholderRole" AS ENUM ('OWNER', 'APPROVER', 'REVIEWER', 'OBSERVER', 'CONTRIBUTOR');

-- CreateEnum
CREATE TYPE "StatementLineStatus" AS ENUM ('PENDING', 'MATCHED', 'RECONCILED', 'DISPUTED', 'VOIDED');

-- CreateEnum
CREATE TYPE "StorageProvider" AS ENUM ('S3', 'GCP', 'AZURE', 'LOCAL', 'CLOUDFLARE');

-- CreateEnum
CREATE TYPE "SubmittalApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "SubmittalItemStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED');

-- CreateEnum
CREATE TYPE "SubmittalStatus" AS ENUM ('SUBMITTED', 'UNDER_REVIEW', 'APPROVED', 'REJECTED', 'RESUBMIT');

-- CreateEnum
CREATE TYPE "SubscriptionInterval" AS ENUM ('MONTHLY', 'QUARTERLY', 'YEARLY', 'WEEKLY', 'DAILY');

-- CreateEnum
CREATE TYPE "SubscriptionStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'TRIALING', 'PAST_DUE', 'CANCELED', 'UNPAID', 'PAUSED', 'PENDING_CANCELLATION');

-- CreateEnum
CREATE TYPE "SyncDirection" AS ENUM ('IMPORT', 'EXPORT', 'BIDIRECTIONAL');

-- CreateEnum
CREATE TYPE "SyncJobStatus" AS ENUM ('QUEUED', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', 'TIMEOUT', 'PARTIAL_SUCCESS', 'RETRYING', 'PAUSED', 'SCHEDULED');

-- CreateEnum
CREATE TYPE "SyncJobType" AS ENUM ('FULL_SYNC', 'INCREMENTAL_SYNC', 'MANUAL_SYNC', 'SCHEDULED_SYNC', 'WEBHOOK_TRIGGERED', 'DEPENDENCY_SYNC', 'RECOVERY_SYNC', 'TEST_SYNC');

-- CreateEnum
CREATE TYPE "TaskAttachmentType" AS ENUM ('DOCUMENT', 'IMAGE', 'VIDEO', 'AUDIO', 'SPREADSHEET', 'PRESENTATION', 'OTHER');

-- CreateEnum
CREATE TYPE "TaskChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "TaskPriority" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'URGENT');

-- CreateEnum
CREATE TYPE "TaskType" AS ENUM ('ADMINISTRATIVE', 'MAINTENANCE', 'OPERATIONAL', 'TRAINING', 'COMPLIANCE', 'QUALITY_CONTROL', 'CUSTOMER_SERVICE', 'RESEARCH', 'DOCUMENTATION', 'CUSTOM');

-- CreateEnum
CREATE TYPE "TaxCalculationMethod" AS ENUM ('PERCENTAGE', 'FIXED_AMOUNT', 'GRADUATED', 'COMPOUND');

-- CreateEnum
CREATE TYPE "TaxJurisdictionStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'MERGED', 'SPLIT');

-- CreateEnum
CREATE TYPE "TaxJurisdictionType" AS ENUM ('COUNTRY', 'STATE', 'PROVINCE', 'COUNTY', 'CITY', 'MUNICIPALITY', 'DISTRICT', 'ZONE', 'OTHER');

-- CreateEnum
CREATE TYPE "TaxRateStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SCHEDULED', 'EXPIRED', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "TaxRateType" AS ENUM ('SALES_TAX', 'VAT', 'GST', 'EXCISE', 'CUSTOMS', 'WITHHOLDING', 'PAYROLL', 'PROPERTY', 'MUNICIPAL', 'OTHER');

-- CreateEnum
CREATE TYPE "TaxType" AS ENUM ('FEDERAL_INCOME', 'STATE_INCOME', 'LOCAL_INCOME', 'SOCIAL_SECURITY', 'MEDICARE', 'STATE_UNEMPLOYMENT', 'STATE_DISABILITY', 'CITY_TAX', 'COUNTY_TAX');

-- CreateEnum
CREATE TYPE "TemplateStatus" AS ENUM ('DRAFT', 'TESTING', 'ACTIVE', 'DEPRECATED', 'ARCHIVED', 'RETIRED');

-- CreateEnum
CREATE TYPE "TenantDeploymentType" AS ENUM ('SHARED', 'DEDICATED', 'HYBRID', 'ON_PREMISE');

-- CreateEnum
CREATE TYPE "TenantRegion" AS ENUM ('US_EAST_1', 'US_WEST_1', 'US_WEST_2', 'EU_WEST_1', 'EU_CENTRAL_1', 'AP_SOUTHEAST_1', 'AP_NORTHEAST_1', 'CA_CENTRAL_1');

-- CreateEnum
CREATE TYPE "TenantStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_ACTIVATION', 'MIGRATING', 'ARCHIVED', 'DELETED');

-- CreateEnum
CREATE TYPE "TenantTier" AS ENUM ('STARTER', 'PROFESSIONAL', 'ENTERPRISE', 'CUSTOM');

-- CreateEnum
CREATE TYPE "TerminationReason" AS ENUM ('VOLUNTARY', 'INVOLUNTARY', 'REDUCTION_IN_FORCE', 'END_OF_CONTRACT', 'RETIREMENT', 'DECEASED', 'JOB_ABANDONMENT', 'PERFORMANCE', 'MISCONDUCT');

-- CreateEnum
CREATE TYPE "ThemePreference" AS ENUM ('LIGHT', 'DARK', 'SYSTEM', 'HIGH_CONTRAST');

-- CreateEnum
CREATE TYPE "ThresholdOperator" AS ENUM ('GREATER_THAN', 'GREATER_THAN_EQUAL', 'LESS_THAN', 'LESS_THAN_EQUAL', 'EQUAL', 'NOT_EQUAL', 'BETWEEN', 'OUTSIDE');

-- CreateEnum
CREATE TYPE "TimeClockStatus" AS ENUM ('CLOCKED_IN', 'CLOCKED_OUT', 'BREAK_IN', 'BREAK_OUT', 'LUNCH_IN', 'LUNCH_OUT');

-- CreateEnum
CREATE TYPE "TimePayrollChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "TimesheetApprovalDecision" AS ENUM ('PENDING', 'APPROVED', 'DECLINED', 'ESCALATED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "TimesheetApprovalType" AS ENUM ('STANDARD', 'EMERGENCY', 'DELEGATED');

-- CreateEnum
CREATE TYPE "TimesheetEntryStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED');

-- CreateEnum
CREATE TYPE "TimesheetEntryType" AS ENUM ('REGULAR', 'OVERTIME', 'BREAK', 'LUNCH');

-- CreateEnum
CREATE TYPE "TimesheetStatus" AS ENUM ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED');

-- CreateEnum
CREATE TYPE "TokenType" AS ENUM ('ACCESS_TOKEN', 'REFRESH_TOKEN', 'API_KEY', 'SESSION_TOKEN', 'BEARER_TOKEN', 'JWT_TOKEN', 'CERTIFICATE');

-- CreateEnum
CREATE TYPE "TrainingStatus" AS ENUM ('ENROLLED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'FAILED', 'EXPIRED');

-- CreateEnum
CREATE TYPE "UsageMetric" AS ENUM ('API_CALLS', 'STORAGE_GB', 'PROJECTS', 'USERS', 'DOCUMENTS', 'BANDWIDTH_GB', 'COMPUTE_HOURS', 'TRANSACTIONS', 'REPORTS_GENERATED', 'INTEGRATIONS');

-- CreateEnum
CREATE TYPE "UserStatus" AS ENUM ('ACTIVE', 'SUSPENDED', 'INVITED', 'PENDING_VERIFICATION', 'LOCKED', 'DELETED');

-- CreateEnum
CREATE TYPE "ValidationRule" AS ENUM ('REQUIRED', 'MIN_LENGTH', 'MAX_LENGTH', 'PATTERN', 'UNIQUE', 'RANGE', 'FORMAT', 'CUSTOM');

-- CreateEnum
CREATE TYPE "VendorChildStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "VendorComplianceStatus" AS ENUM ('PENDING', 'APPROVED', 'SUSPENDED', 'REJECTED');

-- CreateEnum
CREATE TYPE "VendorContactType" AS ENUM ('PRIMARY', 'BILLING', 'PURCHASING', 'TECHNICAL', 'SUPPORT', 'LEGAL', 'EXECUTIVE', 'ACCOUNTS_PAYABLE');

-- CreateEnum
CREATE TYPE "VendorDocumentType" AS ENUM ('CONTRACT', 'INSURANCE', 'LICENSE', 'CERTIFICATION', 'W9_FORM', 'BANK_INFO', 'SAFETY_CERT', 'QUALITY_CERT', 'ISO_CERT', 'SOC_REPORT', 'AUDIT_REPORT', 'FINANCIAL_STMT');

-- CreateEnum
CREATE TYPE "VendorRiskRating" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "VendorStatus" AS ENUM ('DRAFT', 'PENDING_APPROVAL', 'ACTIVE', 'INACTIVE', 'ON_HOLD', 'SUSPENDED', 'BLACKLISTED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "VendorType" AS ENUM ('SUPPLIER', 'SERVICE_PROVIDER', 'CONTRACTOR', 'CONSULTANT', 'DISTRIBUTOR', 'MANUFACTURER', 'RESELLER', 'GOVERNMENT', 'NONPROFIT');

-- CreateEnum
CREATE TYPE "VerificationStatus" AS ENUM ('PENDING', 'VERIFIED', 'REJECTED', 'EXPIRED', 'REQUIRES_UPDATE');

-- CreateEnum
CREATE TYPE "VirusScanStatus" AS ENUM ('PENDING', 'CLEAN', 'INFECTED', 'QUARANTINED', 'ERROR', 'SKIPPED');

-- CreateEnum
CREATE TYPE "WatermarkPolicyStatus" AS ENUM ('DRAFT', 'ACTIVE', 'SUSPENDED', 'DEPRECATED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "WatermarkPosition" AS ENUM ('CENTER', 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', 'HEADER', 'FOOTER', 'DIAGONAL', 'CUSTOM');

-- CreateEnum
CREATE TYPE "WatermarkType" AS ENUM ('VISIBLE_TEXT', 'VISIBLE_IMAGE', 'DIGITAL_SIGNATURE', 'STEGANOGRAPHIC', 'QR_CODE', 'BARCODE', 'HYBRID');

-- CreateEnum
CREATE TYPE "WeatherActionHint" AS ENUM ('MONITOR', 'PREPARE', 'MITIGATE', 'RESCHEDULE', 'PAUSE', 'EVACUATE', 'SHELTER', 'ESCALATE', 'DOCUMENT');

-- CreateEnum
CREATE TYPE "WeatherAlertStatus" AS ENUM ('ACTIVE', 'ACKNOWLEDGED', 'SNOOZED', 'ESCALATED', 'RESOLVED', 'CANCELLED', 'EXPIRED', 'SUPERSEDED');

-- CreateEnum
CREATE TYPE "WeatherAlertType" AS ENUM ('RAIN', 'STORM', 'THUNDERSTORM', 'WIND', 'HAIL', 'SNOW', 'LIGHTNING', 'TORNADO', 'HURRICANE', 'FLOOD', 'HEAT', 'COLD', 'FOG', 'ICE', 'DROUGHT', 'WILDFIRE', 'AIR_QUALITY', 'UV_INDEX', 'SEISMIC', 'TSUNAMI');

-- CreateEnum
CREATE TYPE "WeatherEntityType" AS ENUM ('PROJECT', 'PROJECT_TASK', 'TASK', 'RESOURCE', 'LOCATION');

-- CreateEnum
CREATE TYPE "WeatherIncidentType" AS ENUM ('DELAY', 'STOPPAGE', 'DAMAGE', 'SAFETY', 'QUALITY', 'COST', 'SCHEDULE', 'RESOURCE');

-- CreateEnum
CREATE TYPE "WeatherIndustry" AS ENUM ('CONSTRUCTION', 'ROOFING', 'LOGISTICS', 'AGRICULTURE', 'ENERGY', 'MANUFACTURING', 'TELECOMMUNICATIONS', 'MINING', 'AVIATION', 'MARITIME', 'EMERGENCY_SERVICES', 'EVENTS', 'OTHER');

-- CreateEnum
CREATE TYPE "WeatherMetric" AS ENUM ('TEMPERATURE', 'PRECIPITATION', 'WIND_SPEED', 'WIND_GUST', 'HUMIDITY', 'PRESSURE', 'VISIBILITY', 'UV_INDEX', 'HEAT_INDEX', 'WIND_CHILL', 'DEW_POINT', 'SNOW_DEPTH', 'HAIL_SIZE', 'LIGHTNING_STRIKES');

-- CreateEnum
CREATE TYPE "WeatherRiskLevel" AS ENUM ('VERY_LOW', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH', 'EXTREME');

-- CreateEnum
CREATE TYPE "WeatherSeverity" AS ENUM ('INFO', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'EXTREME');

-- CreateEnum
CREATE TYPE "WeatherSource" AS ENUM ('NOAA', 'OPENWEATHER', 'TOMORROW', 'ACCUWEATHER', 'WEATHERAPI', 'CLIMACELL', 'DARK_SKY', 'WEATHER_UNDERGROUND', 'CUSTOM', 'OTHER');

-- CreateEnum
CREATE TYPE "WorkItemStatus" AS ENUM ('DRAFT', 'OPEN', 'IN_PROGRESS', 'ON_HOLD', 'BLOCKED', 'RESOLVED', 'COMPLETED', 'CLOSED', 'CANCELLED');

-- CreateEnum
CREATE TYPE "WorkLocation" AS ENUM ('OFFICE', 'REMOTE', 'HYBRID', 'FIELD');

-- CreateEnum
CREATE TYPE "WorkScheduleType" AS ENUM ('FULL_TIME', 'PART_TIME', 'FLEX', 'CONTRACTOR');

-- CreateEnum
CREATE TYPE "WorkerStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'ON_LEAVE', 'TERMINATED', 'SUSPENDED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "FraudPolicyStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'TESTING', 'SUSPENDED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "FraudPolicyType" AS ENUM ('TRANSACTION_MONITORING', 'BEHAVIORAL_ANALYSIS', 'VELOCITY_CHECKING', 'PATTERN_DETECTION', 'ANOMALY_DETECTION', 'COMPLIANCE_MONITORING', 'RISK_SCORING');

-- CreateEnum
CREATE TYPE "FraudRuleStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'TESTING', 'SUSPENDED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "FraudRuleType" AS ENUM ('THRESHOLD', 'VELOCITY', 'PATTERN', 'BEHAVIORAL', 'ML_BASED', 'STATISTICAL', 'RULE_BASED', 'COMPOSITE');

-- CreateEnum
CREATE TYPE "RuleConditionType" AS ENUM ('SQL', 'JSON', 'EXPRESSION', 'SCRIPT');

-- CreateEnum
CREATE TYPE "RuleOperator" AS ENUM ('EQUALS', 'NOT_EQUALS', 'GREATER_THAN', 'LESS_THAN', 'GREATER_THAN_OR_EQUAL', 'LESS_THAN_OR_EQUAL', 'CONTAINS', 'NOT_CONTAINS', 'IN', 'NOT_IN', 'BETWEEN', 'REGEX_MATCH');

-- CreateEnum
CREATE TYPE "AggregationFunction" AS ENUM ('SUM', 'COUNT', 'AVG', 'MIN', 'MAX', 'STDDEV', 'VARIANCE', 'DISTINCT_COUNT');

-- CreateEnum
CREATE TYPE "RuleFrequency" AS ENUM ('REAL_TIME', 'BATCH_HOURLY', 'BATCH_DAILY', 'BATCH_WEEKLY', 'ON_DEMAND');

-- CreateEnum
CREATE TYPE "FraudAction" AS ENUM ('ALERT', 'BLOCK', 'REVIEW', 'ESCALATE', 'LOG_ONLY', 'QUARANTINE', 'SUSPEND_ACCOUNT', 'REQUIRE_VERIFICATION');

-- CreateEnum
CREATE TYPE "AuditFrequency" AS ENUM ('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'ANNUALLY', 'ON_DEMAND');

-- CreateEnum
CREATE TYPE "AnomalyStatus" AS ENUM ('DETECTED', 'INVESTIGATING', 'CONFIRMED', 'FALSE_POSITIVE', 'RESOLVED', 'ESCALATED', 'IGNORED');

-- CreateEnum
CREATE TYPE "AnomalyType" AS ENUM ('STATISTICAL', 'BEHAVIORAL', 'PATTERN', 'VELOCITY', 'VOLUME', 'TEMPORAL', 'CONTEXTUAL', 'COLLECTIVE');

-- CreateEnum
CREATE TYPE "AnomalySeverity" AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "CaseStatus" AS ENUM ('OPEN', 'INVESTIGATING', 'PENDING_REVIEW', 'RESOLVED', 'CLOSED', 'ESCALATED', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "CaseActionType" AS ENUM ('COMMENT', 'INVESTIGATION', 'ESCALATION', 'RESOLUTION', 'NOTIFICATION', 'REMEDIATION', 'DOCUMENTATION', 'APPROVAL', 'REJECTION', 'STATUS_CHANGE', 'ASSIGNMENT', 'ATTACHMENT');

-- CreateEnum
CREATE TYPE "DelegationStatus" AS ENUM ('ACTIVE', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'EXPIRED', 'REVOKED', 'SUSPENDED');

-- CreateEnum
CREATE TYPE "ScopeType" AS ENUM ('ENTITY', 'GEOGRAPHIC', 'ORGANIZATIONAL', 'USER_ROLE', 'TRANSACTION', 'TIME_BASED', 'CHANNEL', 'CUSTOM');

-- CreateEnum
CREATE TYPE "RiskLevel" AS ENUM ('VERY_LOW', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH', 'CRITICAL');

-- CreateEnum
CREATE TYPE "FeatureType" AS ENUM ('NUMERICAL', 'CATEGORICAL', 'TEMPORAL', 'TEXTUAL', 'BOOLEAN', 'COMPOSITE', 'DERIVED', 'AGGREGATED');

-- CreateEnum
CREATE TYPE "FeatureDataType" AS ENUM ('INTEGER', 'DECIMAL', 'STRING', 'BOOLEAN', 'DATE', 'DATETIME', 'JSON', 'ARRAY');

-- CreateEnum
CREATE TYPE "CasePriority" AS ENUM ('CRITICAL', 'HIGH', 'MEDIUM', 'LOW');

-- CreateEnum
CREATE TYPE "CaseCategory" AS ENUM ('ANOMALY_DETECTION', 'FRAUD_PREVENTION', 'COMPLIANCE_VIOLATION', 'SECURITY_INCIDENT', 'DATA_QUALITY', 'OPERATIONAL_RISK', 'FINANCIAL_RISK', 'REGULATORY_BREACH');

-- CreateEnum
CREATE TYPE "BusinessImpact" AS ENUM ('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', 'MINIMAL');

-- CreateEnum
CREATE TYPE "ResolutionCategory" AS ENUM ('TRUE_POSITIVE', 'FALSE_POSITIVE', 'INCONCLUSIVE', 'DUPLICATE', 'INVALID', 'ESCALATED', 'DEFERRED');

-- CreateEnum
CREATE TYPE "ActionResultStatus" AS ENUM ('SUCCESS', 'FAILED', 'PENDING', 'CANCELLED', 'PARTIAL');

-- CreateEnum
CREATE TYPE "DelegationType" AS ENUM ('PERMISSION', 'ROLE', 'RESOURCE_ACCESS', 'APPROVAL_AUTHORITY', 'ADMINISTRATIVE', 'EMERGENCY', 'TEMPORARY');

-- CreateEnum
CREATE TYPE "ConstraintViolationAction" AS ENUM ('BLOCK', 'WARN', 'LOG_ONLY', 'REQUIRE_APPROVAL', 'ESCALATE', 'TERMINATE_SESSION');

-- CreateEnum
CREATE TYPE "DelegationConstraintType" AS ENUM ('TIME_WINDOW', 'DATE_RANGE', 'IP_RESTRICTION', 'LOCATION_RESTRICTION', 'USAGE_LIMIT', 'AMOUNT_LIMIT', 'RESOURCE_RESTRICTION', 'APPROVAL_REQUIREMENT', 'DEVICE_RESTRICTION', 'SECURITY_LEVEL', 'CONTEXT_VALIDATION');

-- CreateEnum
CREATE TYPE "ActorStatus" AS ENUM ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'LOCKED', 'EXPIRED', 'ARCHIVED');

-- CreateEnum
CREATE TYPE "ActorType" AS ENUM ('USER', 'SERVICE_ACCOUNT', 'API_KEY', 'SYSTEM', 'INTEGRATION', 'WEBHOOK', 'AUTOMATION', 'MONITORING');

-- CreateEnum
CREATE TYPE "RoomScanStatus" AS ENUM ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED');

-- CreateEnum
CREATE TYPE "RoomFileType" AS ENUM ('USDZ', 'OBJ', 'GLTF', 'IMAGE', 'JSON');

-- CreateEnum
CREATE TYPE "RoomModelType" AS ENUM ('ROOM', 'FLOORPLAN', 'BUILDING');

-- CreateEnum
CREATE TYPE "MeasurementUnit" AS ENUM ('METER', 'FOOT', 'INCH', 'CM');

-- CreateEnum
CREATE TYPE "RoomObjectType" AS ENUM ('WALL', 'DOOR', 'WINDOW', 'TABLE', 'BED', 'SOFA', 'CHAIR', 'CUSTOM');

-- CreateEnum
CREATE TYPE "RoomSurfaceType" AS ENUM ('WALL', 'CEILING', 'FLOOR', 'OTHER');

-- CreateEnum
CREATE TYPE "RoomExportType" AS ENUM ('PDF', 'DXF', 'DWG', 'JSON', 'IMAGE');

-- CreateEnum
CREATE TYPE "RoomProcessingStatus" AS ENUM ('QUEUED', 'RUNNING', 'COMPLETED', 'FAILED');

-- CreateEnum
CREATE TYPE "RoomJobType" AS ENUM ('RECONSTRUCT_MODEL', 'GENERATE_BLUEPRINT', 'EXPORT_FILE');

-- CreateEnum
CREATE TYPE "RoomPresetType" AS ENUM ('SCAN', 'EXPORT');

-- CreateEnum
CREATE TYPE "Axis" AS ENUM ('X', 'Y', 'Z');

-- CreateTable
CREATE TABLE "AIAction" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" VARCHAR(200) NOT NULL,
    "actionType" "ActionType" NOT NULL,
    "description" TEXT,
    "category" VARCHAR(100),
    "actionConfig" TEXT,
    "inputSchema" TEXT,
    "outputSchema" TEXT,
    "validationRules" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "maxExecutionTime" INTEGER DEFAULT 300,
    "retryPolicy" TEXT,
    "businessEntityTypes" TEXT,
    "permissions" TEXT,
    "complianceLevel" VARCHAR(50),

    CONSTRAINT "AIAction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIActionRun" (
    "id" UUID NOT NULL,
    "status" "AIJobStatus" NOT NULL DEFAULT 'QUEUED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "actionId" UUID NOT NULL,
    "jobId" UUID,
    "runNumber" INTEGER NOT NULL DEFAULT 1,
    "name" VARCHAR(200),
    "inputData" TEXT,
    "outputData" TEXT,
    "errorMessage" TEXT,
    "errorCode" VARCHAR(100),
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "executionTime" INTEGER,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "triggeredBy" VARCHAR(100),

    CONSTRAINT "AIActionRun_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIAssistantProfile" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" VARCHAR(200) NOT NULL,
    "displayName" VARCHAR(300),
    "description" TEXT,
    "assistantType" VARCHAR(100) NOT NULL,
    "modelProvider" "AIModelProvider" NOT NULL DEFAULT 'OPENAI',
    "modelName" VARCHAR(100) NOT NULL,
    "systemPrompt" TEXT,
    "temperature" DOUBLE PRECISION NOT NULL DEFAULT 0.7,
    "maxTokens" INTEGER NOT NULL DEFAULT 2000,
    "personality" TEXT,
    "communicationStyle" VARCHAR(100),
    "expertise" TEXT,
    "capabilities" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "allowedModules" TEXT,
    "allowedRoles" TEXT,
    "dataAccessLevel" VARCHAR(50),
    "businessArea" VARCHAR(100),
    "departmentScope" TEXT,
    "workflowIntegration" TEXT,
    "totalInteractions" INTEGER NOT NULL DEFAULT 0,
    "totalTokensUsed" INTEGER NOT NULL DEFAULT 0,
    "lastUsedAt" TIMESTAMPTZ(6),
    "averageRating" DOUBLE PRECISION,

    CONSTRAINT "AIAssistantProfile_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIDocumentChunk" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "documentIndexId" UUID NOT NULL,
    "chunkType" "ChunkType" NOT NULL DEFAULT 'PARAGRAPH',
    "chunkIndex" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "title" VARCHAR(300),
    "startPosition" INTEGER,
    "endPosition" INTEGER,
    "pageNumber" INTEGER,
    "sectionNumber" VARCHAR(50),
    "tokenCount" INTEGER,
    "characterCount" INTEGER NOT NULL,
    "preprocessingApplied" TEXT,
    "language" VARCHAR(5),
    "qualityScore" DOUBLE PRECISION,
    "relevanceScore" DOUBLE PRECISION,

    CONSTRAINT "AIDocumentChunk_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIDocumentIndex" (
    "id" UUID NOT NULL,
    "status" "DocumentIndexStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "documentId" UUID NOT NULL,
    "documentType" VARCHAR(100) NOT NULL,
    "title" VARCHAR(500) NOT NULL,
    "summary" TEXT,
    "language" VARCHAR(5) NOT NULL DEFAULT 'en',
    "embeddingModel" "EmbeddingModel" NOT NULL DEFAULT 'TEXT_EMBEDDING_ADA_002',
    "indexingMethod" VARCHAR(100) NOT NULL,
    "chunkingStrategy" VARCHAR(100) NOT NULL,
    "chunkSize" INTEGER NOT NULL DEFAULT 1000,
    "chunkOverlap" INTEGER NOT NULL DEFAULT 200,
    "totalChunks" INTEGER NOT NULL DEFAULT 0,
    "processedChunks" INTEGER NOT NULL DEFAULT 0,
    "indexedAt" TIMESTAMPTZ(6),
    "processingTime" INTEGER,
    "indexSize" INTEGER,
    "indexQualityScore" DOUBLE PRECISION,
    "searchPerformance" TEXT,
    "optimizationApplied" TEXT,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "accessLevel" VARCHAR(50),
    "dataClassification" VARCHAR(50),

    CONSTRAINT "AIDocumentIndex_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIEmbedding" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "chunkId" UUID,
    "content" TEXT NOT NULL,
    "embeddingVector" TEXT NOT NULL,
    "embeddingModel" "EmbeddingModel" NOT NULL DEFAULT 'TEXT_EMBEDDING_ADA_002',
    "vectorDimensions" INTEGER NOT NULL DEFAULT 1536,
    "generatedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "processingTime" INTEGER,
    "modelVersion" VARCHAR(50),
    "tokenCount" INTEGER,
    "similarityThreshold" DOUBLE PRECISION DEFAULT 0.8,
    "indexingOptimized" BOOLEAN NOT NULL DEFAULT false,
    "compressionApplied" BOOLEAN NOT NULL DEFAULT false,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,

    CONSTRAINT "AIEmbedding_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIInsight" (
    "id" UUID NOT NULL,
    "status" "InsightStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "title" VARCHAR(300) NOT NULL,
    "summary" TEXT NOT NULL,
    "description" TEXT,
    "insightType" "InsightType" NOT NULL,
    "severity" "InsightSeverity" NOT NULL DEFAULT 'MEDIUM',
    "category" VARCHAR(100) NOT NULL,
    "jobId" UUID,
    "artifactId" UUID,
    "promptTemplateId" UUID,
    "modelProvider" "AIModelProvider",
    "modelName" VARCHAR(100),
    "generationMethod" VARCHAR(100),
    "findings" TEXT,
    "evidence" TEXT,
    "dataPoints" TEXT,
    "sourceReferences" TEXT,
    "rawData" TEXT,
    "confidenceScore" DOUBLE PRECISION,
    "accuracyScore" DOUBLE PRECISION,
    "reliabilityScore" DOUBLE PRECISION,
    "impactScore" DOUBLE PRECISION,
    "priorityScore" DOUBLE PRECISION,
    "qualityScore" DOUBLE PRECISION,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "businessArea" VARCHAR(100),
    "impactDescription" TEXT,
    "riskLevel" VARCHAR(50),
    "opportunityLevel" VARCHAR(50),
    "recommendations" TEXT,
    "suggestedActions" TEXT,
    "automatableActions" TEXT,
    "manualActions" TEXT,
    "urgencyLevel" VARCHAR(50),
    "estimatedEffort" VARCHAR(100),
    "validationStatus" VARCHAR(50),
    "validationNotes" TEXT,
    "reviewedAt" TIMESTAMPTZ(6),
    "reviewedById" UUID,
    "reviewNotes" TEXT,
    "humanVerified" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "acknowledgedAt" TIMESTAMPTZ(6),
    "acknowledgedById" UUID,
    "implementedAt" TIMESTAMPTZ(6),
    "implementedById" UUID,
    "resolvedAt" TIMESTAMPTZ(6),
    "resolvedById" UUID,
    "trendDirection" VARCHAR(50),
    "patternId" UUID,
    "seasonality" VARCHAR(100),
    "frequency" VARCHAR(50),
    "recurrence" TEXT,
    "complianceImplications" TEXT,
    "riskFactors" TEXT,
    "mitigationStrategies" TEXT,
    "regulatoryImpact" TEXT,
    "auditFlags" TEXT,
    "alertSent" BOOLEAN NOT NULL DEFAULT false,
    "alertRecipients" TEXT,
    "notificationSent" BOOLEAN NOT NULL DEFAULT false,
    "escalationLevel" INTEGER NOT NULL DEFAULT 0,
    "lastEscalatedAt" TIMESTAMPTZ(6),
    "externalInsightId" VARCHAR(200),
    "externalSystemId" VARCHAR(100),
    "syncStatus" VARCHAR(50),
    "lastSyncAt" TIMESTAMPTZ(6),
    "correlationData" TEXT,
    "statisticalData" TEXT,
    "benchmarkData" TEXT,
    "historicalContext" TEXT,
    "predictiveIndicators" TEXT,
    "customProperties" TEXT,
    "tags" TEXT,
    "metadata" TEXT,

    CONSTRAINT "AIInsight_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIInsightFeedback" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "insightId" UUID NOT NULL,
    "feedbackType" VARCHAR(100) NOT NULL,
    "rating" DOUBLE PRECISION,
    "isAccurate" BOOLEAN,
    "isRelevant" BOOLEAN,
    "isUseful" BOOLEAN,
    "comments" TEXT,
    "correctedData" TEXT,
    "suggestedImprovements" TEXT,
    "providedById" UUID NOT NULL,
    "businessValue" DOUBLE PRECISION,
    "implementationStatus" VARCHAR(50),
    "implementationNotes" TEXT,
    "outcomeDescription" TEXT,
    "improvementData" TEXT,
    "trainingWeight" DOUBLE PRECISION DEFAULT 1.0,
    "feedbackCategory" VARCHAR(100),

    CONSTRAINT "AIInsightFeedback_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIJob" (
    "id" UUID NOT NULL,
    "status" "AIJobStatus" NOT NULL DEFAULT 'QUEUED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "jobType" "AIJobType" NOT NULL,
    "priority" "AIJobPriority" NOT NULL DEFAULT 'NORMAL',
    "promptTemplateId" UUID,
    "promptText" TEXT,
    "systemPrompt" TEXT,
    "inputData" TEXT,
    "inputParameters" TEXT,
    "contextData" TEXT,
    "modelProvider" "AIModelProvider" NOT NULL DEFAULT 'OPENAI',
    "modelName" VARCHAR(100) NOT NULL,
    "modelVersion" VARCHAR(50),
    "temperature" DOUBLE PRECISION DEFAULT 0.7,
    "maxTokens" INTEGER DEFAULT 1000,
    "topP" DOUBLE PRECISION DEFAULT 1.0,
    "frequencyPenalty" DOUBLE PRECISION DEFAULT 0.0,
    "presencePenalty" DOUBLE PRECISION DEFAULT 0.0,
    "stopSequences" TEXT,
    "queuedAt" TIMESTAMPTZ(6),
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "timeoutAt" TIMESTAMPTZ(6),
    "estimatedDuration" INTEGER,
    "actualDuration" INTEGER,
    "resourcePool" VARCHAR(100),
    "maxMemoryMB" INTEGER DEFAULT 512,
    "maxCpuCores" DOUBLE PRECISION DEFAULT 1.0,
    "gpuRequired" BOOLEAN NOT NULL DEFAULT false,
    "maxRetries" INTEGER NOT NULL DEFAULT 3,
    "currentRetries" INTEGER NOT NULL DEFAULT 0,
    "retryDelay" INTEGER NOT NULL DEFAULT 5000,
    "lastError" TEXT,
    "errorCode" VARCHAR(100),
    "errorCategory" VARCHAR(100),
    "recoveryStrategy" VARCHAR(100),
    "tokenUsage" TEXT,
    "responseTime" INTEGER,
    "processingTime" INTEGER,
    "queueTime" INTEGER,
    "totalCost" DECIMAL(10,4),
    "costBreakdown" TEXT,
    "outputData" TEXT,
    "outputText" TEXT,
    "outputMetadata" TEXT,
    "outputFormat" VARCHAR(50),
    "outputSize" INTEGER,
    "outputHash" VARCHAR(128),
    "qualityScore" DOUBLE PRECISION,
    "confidenceScore" DOUBLE PRECISION,
    "relevanceScore" DOUBLE PRECISION,
    "accuracyScore" DOUBLE PRECISION,
    "validationStatus" VARCHAR(50),
    "validationErrors" TEXT,
    "humanReviewed" BOOLEAN NOT NULL DEFAULT false,
    "humanRating" DOUBLE PRECISION,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "businessContext" TEXT,
    "triggeredBy" VARCHAR(100),
    "triggerEventId" UUID,
    "parentJobId" UUID,
    "dependsOnJobs" TEXT,
    "childJobIds" TEXT,
    "workflowId" UUID,
    "workflowStepId" UUID,
    "batchId" UUID,
    "correlationId" UUID,
    "scheduledFor" TIMESTAMPTZ(6),
    "cronExpression" VARCHAR(100),
    "isRecurring" BOOLEAN NOT NULL DEFAULT false,
    "nextExecutionAt" TIMESTAMPTZ(6),
    "executionCount" INTEGER NOT NULL DEFAULT 0,
    "securityLevel" VARCHAR(50),
    "dataClassification" VARCHAR(50),
    "complianceFlags" TEXT,
    "auditRequired" BOOLEAN NOT NULL DEFAULT false,
    "piiDetected" BOOLEAN NOT NULL DEFAULT false,
    "externalJobId" VARCHAR(200),
    "externalSystemId" VARCHAR(100),
    "callbackUrl" TEXT,
    "webhookSecret" VARCHAR(256),
    "customSettings" TEXT,
    "environmentVariables" TEXT,
    "debugMode" BOOLEAN NOT NULL DEFAULT false,
    "verboseLogging" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "AIJob_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIJobArtifact" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "jobId" UUID NOT NULL,
    "artifactType" VARCHAR(100) NOT NULL,
    "name" VARCHAR(200) NOT NULL,
    "displayName" VARCHAR(300),
    "description" TEXT,
    "contentText" TEXT,
    "contentJson" TEXT,
    "contentBinary" BYTEA,
    "contentUrl" TEXT,
    "contentPath" VARCHAR(500),
    "contentMimeType" VARCHAR(100),
    "contentEncoding" VARCHAR(50),
    "contentSize" INTEGER,
    "contentHash" VARCHAR(128),
    "outputFormat" VARCHAR(50),
    "dataSchema" TEXT,
    "templateUsed" VARCHAR(200),
    "formatVersion" VARCHAR(20),
    "qualityScore" DOUBLE PRECISION,
    "confidenceScore" DOUBLE PRECISION,
    "accuracyScore" DOUBLE PRECISION,
    "completenessScore" DOUBLE PRECISION,
    "validationStatus" VARCHAR(50),
    "validationErrors" TEXT,
    "humanVerified" BOOLEAN NOT NULL DEFAULT false,
    "humanRating" DOUBLE PRECISION,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "businessCategory" VARCHAR(100),
    "targetAudience" VARCHAR(100),
    "usageContext" TEXT,
    "artifactVersion" INTEGER NOT NULL DEFAULT 1,
    "previousVersionId" UUID,
    "changeDescription" TEXT,
    "isLatestVersion" BOOLEAN NOT NULL DEFAULT true,
    "processingTime" INTEGER,
    "generationMethod" VARCHAR(100),
    "sourceDataSources" TEXT,
    "transformationRules" TEXT,
    "postProcessingSteps" TEXT,
    "externalArtifactId" VARCHAR(200),
    "externalSystemId" VARCHAR(100),
    "syncStatus" VARCHAR(50),
    "lastSyncAt" TIMESTAMPTZ(6),
    "securityLevel" VARCHAR(50),
    "dataClassification" VARCHAR(50),
    "encryptionStatus" VARCHAR(50),
    "accessRestrictions" TEXT,
    "retentionPolicy" VARCHAR(100),
    "piiDetected" BOOLEAN NOT NULL DEFAULT false,
    "complianceFlags" TEXT,
    "downloadCount" INTEGER NOT NULL DEFAULT 0,
    "viewCount" INTEGER NOT NULL DEFAULT 0,
    "shareCount" INTEGER NOT NULL DEFAULT 0,
    "lastAccessedAt" TIMESTAMPTZ(6),
    "lastDownloadedAt" TIMESTAMPTZ(6),
    "storageLocation" VARCHAR(200),
    "storageClass" VARCHAR(50),
    "compressionMethod" VARCHAR(50),
    "compressionRatio" DOUBLE PRECISION,
    "archivedAt" TIMESTAMPTZ(6),
    "customProperties" TEXT,
    "tags" TEXT,
    "metadata" TEXT,

    CONSTRAINT "AIJobArtifact_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIPlaybook" (
    "id" UUID NOT NULL,
    "status" "PlaybookStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" VARCHAR(200) NOT NULL,
    "displayName" VARCHAR(300),
    "description" TEXT,
    "category" VARCHAR(100) NOT NULL,
    "businessArea" VARCHAR(100),
    "triggerType" "PlaybookTrigger" NOT NULL DEFAULT 'MANUAL',
    "triggerConfig" TEXT,
    "cronExpression" VARCHAR(100),
    "eventFilters" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT false,
    "priority" "AIJobPriority" NOT NULL DEFAULT 'NORMAL',
    "maxConcurrentRuns" INTEGER NOT NULL DEFAULT 1,
    "timeoutMinutes" INTEGER NOT NULL DEFAULT 60,
    "retryPolicy" TEXT,
    "majorVersion" INTEGER NOT NULL DEFAULT 1,
    "minorVersion" INTEGER NOT NULL DEFAULT 0,
    "patchVersion" INTEGER NOT NULL DEFAULT 0,
    "publishedAt" TIMESTAMPTZ(6),
    "isLatestVersion" BOOLEAN NOT NULL DEFAULT true,
    "totalExecutions" INTEGER NOT NULL DEFAULT 0,
    "successfulExecutions" INTEGER NOT NULL DEFAULT 0,
    "failedExecutions" INTEGER NOT NULL DEFAULT 0,
    "averageExecutionTime" INTEGER,
    "lastExecutedAt" TIMESTAMPTZ(6),
    "businessEntityTypes" TEXT,
    "integrationContext" TEXT,
    "complianceLevel" VARCHAR(50),

    CONSTRAINT "AIPlaybook_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIPlaybookStep" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "playbookId" UUID NOT NULL,
    "stepNumber" INTEGER NOT NULL,
    "name" VARCHAR(200) NOT NULL,
    "stepType" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "promptTemplateId" UUID,
    "actionType" "ActionType",
    "actionConfig" TEXT,
    "conditionalLogic" TEXT,
    "timeoutSeconds" INTEGER DEFAULT 300,
    "retryAttempts" INTEGER NOT NULL DEFAULT 3,

    CONSTRAINT "AIPlaybookStep_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AIPromptTemplate" (
    "id" UUID NOT NULL,
    "status" "TemplateStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" VARCHAR(200) NOT NULL,
    "displayName" VARCHAR(300) NOT NULL,
    "description" TEXT,
    "category" VARCHAR(100) NOT NULL,
    "templateType" "PromptTemplateType" NOT NULL,
    "promptText" TEXT NOT NULL,
    "systemPrompt" TEXT,
    "temperature" DOUBLE PRECISION NOT NULL DEFAULT 0.7,
    "maxTokens" INTEGER NOT NULL DEFAULT 1000,
    "topP" DOUBLE PRECISION DEFAULT 1.0,
    "frequencyPenalty" DOUBLE PRECISION DEFAULT 0.0,
    "presencePenalty" DOUBLE PRECISION DEFAULT 0.0,
    "stopSequences" TEXT,
    "modelProvider" "AIModelProvider" NOT NULL DEFAULT 'OPENAI',
    "modelName" VARCHAR(100) NOT NULL,
    "modelVersion" VARCHAR(50),
    "fallbackModels" TEXT,
    "parametersSchema" TEXT,
    "requiredParameters" TEXT,
    "defaultParameters" TEXT,
    "parameterValidation" TEXT,
    "majorVersion" INTEGER NOT NULL DEFAULT 1,
    "minorVersion" INTEGER NOT NULL DEFAULT 0,
    "patchVersion" INTEGER NOT NULL DEFAULT 0,
    "previousVersionId" UUID,
    "parentTemplateId" UUID,
    "isLatestVersion" BOOLEAN NOT NULL DEFAULT true,
    "publishedAt" TIMESTAMPTZ(6),
    "deprecatedAt" TIMESTAMPTZ(6),
    "retiredAt" TIMESTAMPTZ(6),
    "experimentId" UUID,
    "experimentVariant" VARCHAR(50),
    "experimentWeight" DOUBLE PRECISION DEFAULT 1.0,
    "experimentStartDate" TIMESTAMPTZ(6),
    "experimentEndDate" TIMESTAMPTZ(6),
    "totalExecutions" INTEGER NOT NULL DEFAULT 0,
    "successfulExecutions" INTEGER NOT NULL DEFAULT 0,
    "failedExecutions" INTEGER NOT NULL DEFAULT 0,
    "averageResponseTime" INTEGER,
    "averageTokensUsed" INTEGER,
    "totalCost" DECIMAL(15,4),
    "averageCost" DECIMAL(10,4),
    "lastExecutedAt" TIMESTAMPTZ(6),
    "averageRating" DOUBLE PRECISION,
    "totalRatings" INTEGER NOT NULL DEFAULT 0,
    "accuracyScore" DOUBLE PRECISION,
    "relevanceScore" DOUBLE PRECISION,
    "consistencyScore" DOUBLE PRECISION,
    "isPublic" BOOLEAN NOT NULL DEFAULT false,
    "isShared" BOOLEAN NOT NULL DEFAULT false,
    "allowedRoles" TEXT,
    "allowedDepartments" TEXT,
    "restrictedModules" TEXT,
    "primaryLanguage" VARCHAR(5) NOT NULL DEFAULT 'en',
    "supportedLanguages" TEXT,
    "translationStatus" VARCHAR(50),
    "businessDomain" VARCHAR(100),
    "integrationContext" TEXT,
    "triggerEvents" TEXT,
    "outputFormat" VARCHAR(50),
    "validationRules" TEXT,
    "complianceLevel" VARCHAR(50),
    "dataClassification" VARCHAR(50),
    "retentionPolicy" VARCHAR(100),
    "auditRequired" BOOLEAN NOT NULL DEFAULT false,
    "piiHandling" VARCHAR(100),
    "baseTemplateId" UUID,
    "compositionRules" TEXT,
    "overrideRules" TEXT,
    "inheritanceChain" TEXT,
    "externalTemplateId" VARCHAR(200),
    "sourceSystem" VARCHAR(100),
    "syncStatus" VARCHAR(50),
    "lastSyncAt" TIMESTAMPTZ(6),
    "customSettings" TEXT,
    "environmentVariables" TEXT,
    "preprocessingSteps" TEXT,
    "postprocessingSteps" TEXT,

    CONSTRAINT "AIPromptTemplate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "APBill" (
    "id" UUID NOT NULL,
    "status" "APBillStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "billNumber" VARCHAR(50) NOT NULL,
    "invoiceDate" DATE NOT NULL,
    "dueDate" DATE NOT NULL,
    "totalAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "description" TEXT,
    "vendorId" UUID NOT NULL,
    "vendorName" VARCHAR(255) NOT NULL,
    "paidAmount" DECIMAL(12,2),
    "paidDate" DATE,

    CONSTRAINT "APBill_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "APBillLine" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "description" VARCHAR(500) NOT NULL,
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitOfMeasure" "ProcurementUnitOfMeasure" NOT NULL DEFAULT 'EA',
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "lineSubtotal" DECIMAL(15,2) NOT NULL,
    "discountAmount" DECIMAL(12,2) DEFAULT 0,
    "taxAmount" DECIMAL(12,2) DEFAULT 0,
    "lineTotal" DECIMAL(15,2) NOT NULL,
    "itemCode" VARCHAR(50),
    "itemDescription" TEXT,
    "itemCategory" VARCHAR(100),
    "taxCode" VARCHAR(20),
    "taxRate" DECIMAL(5,4),
    "isTaxExempt" BOOLEAN NOT NULL DEFAULT false,
    "projectId" UUID,
    "budgetLineId" UUID,
    "costCode" VARCHAR(50),
    "costCategory" VARCHAR(100),
    "glAccountCode" VARCHAR(20),
    "glAccountName" VARCHAR(100),
    "purchaseOrderLineId" UUID,
    "goodsReceiptLineId" UUID,
    "matchedQuantity" DECIMAL(12,3),
    "varianceAmount" DECIMAL(12,2),
    "internalNotes" TEXT,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "apBillId" UUID NOT NULL,

    CONSTRAINT "APBillLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AbsenceBalance" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "leaveType" "LeaveType" NOT NULL,
    "balanceYear" INTEGER NOT NULL,
    "entitledDays" DECIMAL(8,2) NOT NULL,
    "accrualRateDays" DECIMAL(8,4) NOT NULL,
    "usedDays" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "pendingDays" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "availableDays" DECIMAL(8,2) NOT NULL,
    "carryOverDays" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "maxCarryOver" DECIMAL(8,2),
    "maxAccrual" DECIMAL(8,2),

    CONSTRAINT "AbsenceBalance_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Account" (
    "id" UUID NOT NULL,
    "status" "AccountStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "accountNumber" VARCHAR(50),
    "accountType" VARCHAR(50) NOT NULL,
    "industry" VARCHAR(100),
    "website" VARCHAR(255),
    "description" TEXT,
    "annualRevenue" DECIMAL(15,2),
    "employeeCount" INTEGER,
    "creditLimit" DECIMAL(12,2),
    "clientNotes" TEXT,
    "internalNotes" TEXT,
    "specialRequirements" TEXT,
    "leadId" UUID,

    CONSTRAINT "Account_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AccountAddress" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "addressType" "AddressType" NOT NULL,
    "addressName" VARCHAR(100),
    "street1" VARCHAR(255) NOT NULL,
    "street2" VARCHAR(255),
    "city" VARCHAR(100) NOT NULL,
    "state" VARCHAR(50),
    "postalCode" VARCHAR(20),
    "country" VARCHAR(50) NOT NULL,
    "county" VARCHAR(100),
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "isBillingDefault" BOOLEAN NOT NULL DEFAULT false,
    "isShippingDefault" BOOLEAN NOT NULL DEFAULT false,
    "isJobSite" BOOLEAN NOT NULL DEFAULT false,
    "siteContactName" VARCHAR(200),
    "siteContactPhone" VARCHAR(20),
    "accessInstructions" TEXT,
    "deliveryInstructions" TEXT,
    "workingHours" VARCHAR(100),
    "permitRequired" BOOLEAN NOT NULL DEFAULT false,
    "latitude" DECIMAL(10,8),
    "longitude" DECIMAL(11,8),
    "timezone" VARCHAR(50),
    "isValidated" BOOLEAN NOT NULL DEFAULT false,
    "validatedAt" TIMESTAMPTZ(6),
    "validationSource" VARCHAR(50),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "deactivatedAt" TIMESTAMPTZ(6),
    "deactivationReason" VARCHAR(255),
    "accountId" UUID NOT NULL,

    CONSTRAINT "AccountAddress_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Activity" (
    "id" UUID NOT NULL,
    "status" "ActivityStatus" NOT NULL DEFAULT 'SCHEDULED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "activityType" VARCHAR(50) NOT NULL,
    "subject" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "priority" VARCHAR(20) NOT NULL,
    "scheduledAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "dueDate" DATE,
    "duration" INTEGER,
    "outcome" VARCHAR(100),
    "followUpDate" DATE,
    "notes" TEXT,
    "accountId" UUID,
    "contactId" UUID,
    "opportunityId" UUID,
    "quoteId" UUID,
    "leadId" UUID,

    CONSTRAINT "Activity_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ActivityAttachment" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" VARCHAR(255) NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "fileSize" INTEGER,
    "mimeType" VARCHAR(100),
    "activityId" UUID NOT NULL,

    CONSTRAINT "ActivityAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Allowance" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "allowanceCode" CITEXT NOT NULL,
    "allowanceName" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "allowanceType" VARCHAR(50) NOT NULL,
    "amount" DECIMAL(12,4),
    "percentage" DECIMAL(8,4),
    "hourlyRate" DECIMAL(12,4),
    "minimumAmount" DECIMAL(12,4),
    "maximumAmount" DECIMAL(12,4),
    "annualLimit" DECIMAL(12,4),
    "isTaxable" BOOLEAN NOT NULL DEFAULT true,
    "taxCategory" VARCHAR(50),
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "employeeGroup" VARCHAR(50),
    "department" VARCHAR(50),
    "jobTitle" VARCHAR(100),
    "glAccount" VARCHAR(50),
    "costCenter" VARCHAR(50),

    CONSTRAINT "Allowance_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AnomalyCase" (
    "id" UUID NOT NULL,
    "status" "CaseStatus" NOT NULL DEFAULT 'OPEN',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "caseNumber" VARCHAR(50) NOT NULL,
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "priority" "CasePriority" NOT NULL DEFAULT 'MEDIUM',
    "severity" "AnomalySeverity" NOT NULL DEFAULT 'MEDIUM',
    "category" "CaseCategory" NOT NULL DEFAULT 'ANOMALY_DETECTION',
    "fraudPolicyId" UUID,
    "anomalySignalId" UUID,
    "sourceSystem" VARCHAR(100),
    "sourceReference" VARCHAR(255),
    "assignedTo" UUID,
    "assignedTeam" VARCHAR(100),
    "assignedAt" TIMESTAMPTZ(6),
    "investigationStarted" TIMESTAMPTZ(6),
    "investigationNotes" TEXT,
    "evidenceCollected" JSONB,
    "riskScore" DECIMAL(3,2),
    "impactAssessment" TEXT,
    "businessImpact" "BusinessImpact" NOT NULL DEFAULT 'LOW',
    "financialImpact" DECIMAL(15,2),
    "resolution" TEXT,
    "resolutionCategory" "ResolutionCategory",
    "resolvedAt" TIMESTAMPTZ(6),
    "resolvedBy" UUID,
    "escalatedAt" TIMESTAMPTZ(6),
    "escalatedTo" UUID,
    "escalationReason" TEXT,
    "slaDeadline" TIMESTAMPTZ(6),
    "responseTime" INTEGER,
    "resolutionTime" INTEGER,
    "customerNotified" BOOLEAN NOT NULL DEFAULT false,
    "customerNotifiedAt" TIMESTAMPTZ(6),
    "externalReference" VARCHAR(255),
    "regulatoryReporting" BOOLEAN NOT NULL DEFAULT false,
    "reportedToRegulator" TIMESTAMPTZ(6),
    "complianceNotes" TEXT,
    "parentCaseId" UUID,
    "relatedCases" UUID[],
    "falsePositive" BOOLEAN,
    "truePositive" BOOLEAN,
    "feedbackScore" INTEGER,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "AnomalyCase_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AnomalyCaseAction" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "anomalyCaseId" UUID NOT NULL,
    "actionType" "CaseActionType" NOT NULL DEFAULT 'COMMENT',
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "actionData" JSONB,
    "previousValue" JSONB,
    "newValue" JSONB,
    "executedBy" UUID,
    "executedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "executionDuration" INTEGER,
    "workflowStepId" UUID,
    "workflowInstanceId" UUID,
    "isAutomated" BOOLEAN NOT NULL DEFAULT false,
    "automationRule" VARCHAR(255),
    "notificationSent" BOOLEAN NOT NULL DEFAULT false,
    "notificationRecipients" UUID[],
    "externalNotification" BOOLEAN NOT NULL DEFAULT false,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedBy" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "approvalNotes" TEXT,
    "impactDescription" TEXT,
    "resultStatus" "ActionResultStatus" NOT NULL DEFAULT 'SUCCESS',
    "errorMessage" TEXT,
    "triggersFollowUp" BOOLEAN NOT NULL DEFAULT false,
    "followUpActions" VARCHAR(100)[],
    "followUpDeadline" TIMESTAMPTZ(6),
    "externalSystemId" VARCHAR(100),
    "externalReference" VARCHAR(255),
    "apiEndpoint" VARCHAR(500),
    "processingTime" INTEGER,
    "retryCount" INTEGER NOT NULL DEFAULT 0,
    "lastRetryAt" TIMESTAMPTZ(6),
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "AnomalyCaseAction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AnomalySignal" (
    "id" UUID NOT NULL,
    "status" "AnomalyStatus" NOT NULL DEFAULT 'DETECTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "anomalyType" "AnomalyType" NOT NULL DEFAULT 'STATISTICAL',
    "severity" "AnomalySeverity" NOT NULL DEFAULT 'MEDIUM',
    "confidence" DECIMAL(3,2) NOT NULL,
    "entityType" VARCHAR(100) NOT NULL,
    "entityId" UUID NOT NULL,
    "detectionMethod" VARCHAR(100) NOT NULL,
    "detectionModel" VARCHAR(100),
    "observedValue" DECIMAL(15,4),
    "expectedValue" DECIMAL(15,4),
    "deviationScore" DECIMAL(10,4),
    "threshold" DECIMAL(15,4),
    "detectedAt" TIMESTAMPTZ(6) NOT NULL,
    "observationWindow" INTEGER NOT NULL DEFAULT 60,
    "baselinePeriod" INTEGER NOT NULL DEFAULT 1440,
    "zScore" DECIMAL(10,4),
    "pValue" DECIMAL(10,8),
    "percentile" DECIMAL(5,2),
    "features" JSONB,
    "featureImportance" JSONB,
    "businessContext" JSONB,
    "environmentalFactors" JSONB,
    "isProcessed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "processedBy" UUID,
    "requiresInvestigation" BOOLEAN NOT NULL DEFAULT true,
    "investigatedAt" TIMESTAMPTZ(6),
    "investigatedBy" UUID,
    "investigationNotes" TEXT,
    "isFalsePositive" BOOLEAN,
    "resolvedAt" TIMESTAMPTZ(6),
    "resolvedBy" UUID,
    "resolutionNotes" TEXT,
    "parentSignalId" UUID,
    "correlatedSignals" UUID[],
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "AnomalySignal_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AnomalySignalFeature" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "anomalySignalId" UUID NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "featureType" "FeatureType" NOT NULL DEFAULT 'NUMERICAL',
    "dataType" "FeatureDataType" NOT NULL DEFAULT 'DECIMAL',
    "rawValue" TEXT,
    "numericValue" DECIMAL(15,4),
    "stringValue" VARCHAR(1000),
    "booleanValue" BOOLEAN,
    "dateValue" TIMESTAMPTZ(6),
    "jsonValue" JSONB,
    "mean" DECIMAL(15,4),
    "median" DECIMAL(15,4),
    "standardDeviation" DECIMAL(15,4),
    "variance" DECIMAL(15,4),
    "minimum" DECIMAL(15,4),
    "maximum" DECIMAL(15,4),
    "percentile25" DECIMAL(15,4),
    "percentile50" DECIMAL(15,4),
    "percentile75" DECIMAL(15,4),
    "percentile90" DECIMAL(15,4),
    "percentile95" DECIMAL(15,4),
    "percentile99" DECIMAL(15,4),
    "isNormalized" BOOLEAN NOT NULL DEFAULT false,
    "normalizationMethod" VARCHAR(50),
    "normalizedValue" DECIMAL(10,6),
    "categoryValue" VARCHAR(255),
    "categoryFrequency" INTEGER,
    "categoryRank" INTEGER,
    "isRareCategory" BOOLEAN NOT NULL DEFAULT false,
    "timeWindow" INTEGER,
    "aggregationMethod" "AggregationFunction" NOT NULL DEFAULT 'SUM',
    "seasonalComponent" DECIMAL(10,6),
    "trendComponent" DECIMAL(10,6),
    "importance" DECIMAL(5,4),
    "correlationScore" DECIMAL(5,4),
    "informationGain" DECIMAL(10,6),
    "chiSquareScore" DECIMAL(15,4),
    "contributionScore" DECIMAL(5,4),
    "isAnomalous" BOOLEAN NOT NULL DEFAULT false,
    "anomalyThreshold" DECIMAL(15,4),
    "sourceTable" VARCHAR(100),
    "sourceColumn" VARCHAR(100),
    "transformationSteps" VARCHAR(255)[],
    "completeness" DECIMAL(3,2),
    "uniqueness" DECIMAL(3,2),
    "validity" DECIMAL(3,2),
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "AnomalySignalFeature_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ApiKey" (
    "id" UUID NOT NULL,
    "status" "ApiKeyStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID,
    "memberId" UUID,
    "serviceAccountId" UUID,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "keyPrefix" VARCHAR(20) NOT NULL,
    "hashedKey" VARCHAR(255) NOT NULL,
    "keyHint" VARCHAR(10) NOT NULL,
    "scope" "ApiKeyScope" NOT NULL DEFAULT 'READ_ONLY',
    "permissions" VARCHAR(100)[],
    "allowedIps" VARCHAR(45)[],
    "allowedDomains" VARCHAR(255)[],
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "expiresAt" TIMESTAMPTZ(6),
    "lastUsedAt" TIMESTAMPTZ(6),
    "useCount" INTEGER NOT NULL DEFAULT 0,
    "dailyLimit" INTEGER,
    "monthlyLimit" INTEGER,
    "currentDailyUse" INTEGER NOT NULL DEFAULT 0,
    "currentMonthlyUse" INTEGER NOT NULL DEFAULT 0,
    "rateLimit" INTEGER,
    "rateLimitWindow" INTEGER DEFAULT 60,
    "riskScore" INTEGER NOT NULL DEFAULT 0,
    "suspiciousActivity" BOOLEAN NOT NULL DEFAULT false,
    "lastFailureAt" TIMESTAMPTZ(6),
    "failureCount" INTEGER NOT NULL DEFAULT 0,
    "revokedAt" TIMESTAMPTZ(6),
    "revocationReason" TEXT,
    "revokedByMemberId" UUID,
    "rotatedAt" TIMESTAMPTZ(6),
    "rotatedFromKeyId" UUID,
    "environment" VARCHAR(20) NOT NULL DEFAULT 'production',
    "tags" VARCHAR(50)[],
    "metadata" JSONB,

    CONSTRAINT "ApiKey_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ApprovalDecision" (
    "id" UUID NOT NULL,
    "status" "ApprovalDecisionStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "decisionType" "ApprovalDecisionType" NOT NULL DEFAULT 'INDIVIDUAL',
    "sequenceNumber" INTEGER NOT NULL DEFAULT 1,
    "level" INTEGER NOT NULL DEFAULT 1,
    "approvalRequestId" UUID NOT NULL,
    "approverId" UUID NOT NULL,
    "approverRole" VARCHAR(100),
    "isDelegated" BOOLEAN NOT NULL DEFAULT false,
    "delegatedFromId" UUID,
    "delegatedAt" TIMESTAMPTZ(6),
    "decision" "ApprovalDecisionStatus" NOT NULL DEFAULT 'PENDING',
    "decisionAt" TIMESTAMPTZ(6),
    "comments" TEXT,
    "reasonCodeId" UUID,
    "assignedAt" TIMESTAMPTZ(6),
    "dueDate" TIMESTAMPTZ(6),
    "reminderSentAt" TIMESTAMPTZ(6),
    "escalatedAt" TIMESTAMPTZ(6),
    "deviceInfo" TEXT,
    "ipAddress" VARCHAR(45),
    "geolocation" TEXT,
    "userAgent" TEXT,
    "hasConditions" BOOLEAN NOT NULL DEFAULT false,
    "conditions" TEXT,
    "conditionsMet" BOOLEAN,
    "attachmentIds" TEXT,
    "evidenceRequired" BOOLEAN NOT NULL DEFAULT false,
    "evidenceProvided" BOOLEAN NOT NULL DEFAULT false,
    "notificationSent" BOOLEAN NOT NULL DEFAULT false,
    "notificationSentAt" TIMESTAMPTZ(6),
    "reminderCount" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "ApprovalDecision_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ApprovalRequest" (
    "id" UUID NOT NULL,
    "status" "ApprovalRequestStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "requestNumber" VARCHAR(50) NOT NULL,
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "priority" "ApprovalRequestPriority" NOT NULL DEFAULT 'NORMAL',
    "source" "ApprovalRequestSource" NOT NULL DEFAULT 'AUTOMATIC',
    "entityType" "ApprovalEntityType" NOT NULL,
    "entityId" UUID NOT NULL,
    "entityNumber" VARCHAR(100),
    "entityAmount" DECIMAL(18,2),
    "currency" VARCHAR(3) DEFAULT 'USD',
    "approvalRuleId" UUID NOT NULL,
    "totalApprovers" INTEGER NOT NULL DEFAULT 1,
    "approvedCount" INTEGER NOT NULL DEFAULT 0,
    "rejectedCount" INTEGER NOT NULL DEFAULT 0,
    "requiredApprovals" INTEGER NOT NULL DEFAULT 1,
    "isSequential" BOOLEAN NOT NULL DEFAULT true,
    "submittedAt" TIMESTAMPTZ(6),
    "dueDate" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "escalatedAt" TIMESTAMPTZ(6),
    "submittedById" UUID,
    "submitterComments" TEXT,
    "currentApprover" UUID,
    "currentLevel" INTEGER NOT NULL DEFAULT 1,
    "nextApprover" UUID,
    "finalDecision" VARCHAR(20),
    "finalDecisionAt" TIMESTAMPTZ(6),
    "finalDecisionBy" UUID,
    "finalComments" TEXT,
    "tags" TEXT,
    "metadata" TEXT,
    "attachmentCount" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "ApprovalRequest_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ApprovalRule" (
    "id" UUID NOT NULL,
    "status" "ApprovalRuleStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "ruleName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "ruleType" "ApprovalRuleType" NOT NULL DEFAULT 'AMOUNT_BASED',
    "scope" "ApprovalRuleScope" NOT NULL DEFAULT 'GLOBAL',
    "priority" INTEGER NOT NULL DEFAULT 1,
    "entityType" "ApprovalEntityType" NOT NULL,
    "entityAttribute" VARCHAR(100),
    "amountThreshold" DECIMAL(18,2),
    "currency" VARCHAR(3) DEFAULT 'USD',
    "conditions" TEXT,
    "customLogic" TEXT,
    "requiredApprovals" INTEGER NOT NULL DEFAULT 1,
    "isSequential" BOOLEAN NOT NULL DEFAULT true,
    "allowDelegation" BOOLEAN NOT NULL DEFAULT true,
    "allowSelfApproval" BOOLEAN NOT NULL DEFAULT false,
    "timeoutHours" INTEGER,
    "departmentId" UUID,
    "projectId" UUID,
    "vendorId" UUID,
    "customerId" UUID,
    "moduleScope" VARCHAR(50),
    "escalationEnabled" BOOLEAN NOT NULL DEFAULT false,
    "escalationHours" INTEGER,
    "escalationLevel" INTEGER DEFAULT 1,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "effectiveFrom" DATE NOT NULL,
    "effectiveTo" DATE,
    "lastTriggeredAt" TIMESTAMPTZ(6),
    "usageCount" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "ApprovalRule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Asset" (
    "id" UUID NOT NULL,
    "status" "AssetStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "assetNumber" VARCHAR(50) NOT NULL,
    "assetName" VARCHAR(255) NOT NULL,
    "assetType" VARCHAR(100) NOT NULL,
    "category" VARCHAR(100),
    "subcategory" VARCHAR(100),
    "description" VARCHAR(500),
    "manufacturer" VARCHAR(255),
    "model" VARCHAR(255),
    "serialNumber" VARCHAR(100),
    "yearManufactured" INTEGER,
    "condition" "AssetCondition" NOT NULL DEFAULT 'GOOD',
    "purchasePrice" DECIMAL(12,4),
    "currentValue" DECIMAL(12,4),
    "depreciationMethod" VARCHAR(50),
    "usefulLife" INTEGER,
    "locationId" UUID,
    "assignedTo" UUID,
    "assignedDate" TIMESTAMPTZ(6),
    "purchaseDate" DATE,
    "warrantyExpiration" DATE,
    "lastServiceDate" DATE,
    "nextServiceDate" DATE,
    "regulatoryCode" VARCHAR(50),
    "safetyRating" VARCHAR(20),
    "requiresInspection" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "Asset_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AssetAssignment" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "assignmentNumber" VARCHAR(50) NOT NULL,
    "assignmentType" VARCHAR(50) NOT NULL,
    "assignmentDate" TIMESTAMPTZ(6) NOT NULL,
    "expectedReturnDate" TIMESTAMPTZ(6),
    "actualReturnDate" TIMESTAMPTZ(6),
    "assignmentStatus" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "assignedTo" UUID NOT NULL,
    "assignedBy" UUID,
    "department" VARCHAR(100),
    "location" VARCHAR(255),
    "conditionOut" "AssetCondition",
    "conditionIn" "AssetCondition",
    "assignmentNotes" TEXT,
    "returnNotes" TEXT,
    "assetId" UUID NOT NULL,

    CONSTRAINT "AssetAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AssetDepreciation" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "depreciationPeriod" VARCHAR(20) NOT NULL,
    "periodStartDate" DATE NOT NULL,
    "periodEndDate" DATE NOT NULL,
    "fiscalYear" INTEGER NOT NULL,
    "fiscalPeriod" INTEGER NOT NULL,
    "depreciationMethod" VARCHAR(50) NOT NULL,
    "usefulLife" INTEGER NOT NULL,
    "salvageValue" DECIMAL(12,4) NOT NULL,
    "bookValueStart" DECIMAL(12,4) NOT NULL,
    "bookValueEnd" DECIMAL(12,4) NOT NULL,
    "depreciationAmount" DECIMAL(12,4) NOT NULL,
    "accumulatedDepreciation" DECIMAL(12,4) NOT NULL,
    "isPosted" BOOLEAN NOT NULL DEFAULT false,
    "postedDate" TIMESTAMPTZ(6),
    "postedBy" UUID,
    "reversalDate" TIMESTAMPTZ(6),
    "notes" TEXT,
    "glAccount" VARCHAR(50),
    "assetId" UUID NOT NULL,

    CONSTRAINT "AssetDepreciation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AssetDocument" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "documentNumber" VARCHAR(50) NOT NULL,
    "documentType" VARCHAR(50) NOT NULL,
    "documentTitle" VARCHAR(255) NOT NULL,
    "description" VARCHAR(500),
    "fileName" VARCHAR(255) NOT NULL,
    "fileType" VARCHAR(100) NOT NULL,
    "fileSize" INTEGER NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "fileHash" VARCHAR(64),
    "documentDate" DATE,
    "expirationDate" DATE,
    "issuer" VARCHAR(255),
    "documentVersion" VARCHAR(20),
    "isConfidential" BOOLEAN NOT NULL DEFAULT false,
    "accessLevel" VARCHAR(20) NOT NULL DEFAULT 'INTERNAL',
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedBy" UUID,
    "approvedDate" TIMESTAMPTZ(6),
    "verifiedBy" UUID,
    "verifiedDate" TIMESTAMPTZ(6),
    "assetId" UUID NOT NULL,

    CONSTRAINT "AssetDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AssetMaintenance" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "maintenanceNumber" VARCHAR(50) NOT NULL,
    "maintenanceType" VARCHAR(50) NOT NULL,
    "maintenanceDate" TIMESTAMPTZ(6) NOT NULL,
    "scheduledDate" TIMESTAMPTZ(6),
    "completedDate" TIMESTAMPTZ(6),
    "maintenanceStatus" VARCHAR(20) NOT NULL DEFAULT 'SCHEDULED',
    "priority" VARCHAR(20) NOT NULL DEFAULT 'NORMAL',
    "workDescription" TEXT NOT NULL,
    "workPerformed" TEXT,
    "partsUsed" TEXT,
    "laborHours" DECIMAL(8,2),
    "laborCost" DECIMAL(12,4),
    "partsCost" DECIMAL(12,4),
    "totalCost" DECIMAL(12,4),
    "performedBy" UUID,
    "supervisedBy" UUID,
    "vendor" VARCHAR(255),
    "nextMaintenanceDate" DATE,
    "maintenanceInterval" INTEGER,
    "assetId" UUID NOT NULL,

    CONSTRAINT "AssetMaintenance_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AssetMeterReading" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "readingNumber" VARCHAR(50) NOT NULL,
    "readingDate" TIMESTAMPTZ(6) NOT NULL,
    "readingTime" TIME(6),
    "meterType" VARCHAR(50) NOT NULL,
    "meterUnit" VARCHAR(20) NOT NULL,
    "currentReading" DECIMAL(12,4) NOT NULL,
    "previousReading" DECIMAL(12,4),
    "readingDifference" DECIMAL(12,4),
    "readingType" VARCHAR(20) NOT NULL DEFAULT 'MANUAL',
    "readingSource" VARCHAR(100),
    "readingLocation" VARCHAR(255),
    "readBy" UUID,
    "verifiedBy" UUID,
    "verifiedDate" TIMESTAMPTZ(6),
    "isEstimated" BOOLEAN NOT NULL DEFAULT false,
    "isAdjusted" BOOLEAN NOT NULL DEFAULT false,
    "notes" TEXT,
    "observations" TEXT,
    "maintenanceNeeded" BOOLEAN NOT NULL DEFAULT false,
    "assetId" UUID NOT NULL,

    CONSTRAINT "AssetMeterReading_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Attachment" (
    "id" UUID NOT NULL,
    "status" "AttachmentStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "attachmentType" "AttachmentType" NOT NULL DEFAULT 'DOCUMENT',
    "tags" VARCHAR(50)[],
    "fileObjectId" UUID NOT NULL,
    "attachedById" UUID,
    "isPublic" BOOLEAN NOT NULL DEFAULT false,
    "viewCount" INTEGER NOT NULL DEFAULT 0,
    "lastViewedAt" TIMESTAMPTZ(6),
    "downloadCount" INTEGER NOT NULL DEFAULT 0,
    "lastDownloadedAt" TIMESTAMPTZ(6),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "isApproved" BOOLEAN,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "approvalNotes" TEXT,
    "versionNumber" VARCHAR(20),
    "isLatestVersion" BOOLEAN NOT NULL DEFAULT true,
    "parentAttachmentId" UUID,

    CONSTRAINT "Attachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AttachmentLink" (
    "id" UUID NOT NULL,
    "status" "AttachmentLinkStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "linkType" "AttachmentLinkType" NOT NULL DEFAULT 'GENERAL',
    "entityType" VARCHAR(100) NOT NULL,
    "entityId" UUID NOT NULL,
    "attachmentId" UUID NOT NULL,
    "displayOrder" INTEGER NOT NULL DEFAULT 0,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "description" TEXT,
    "tags" VARCHAR(50)[],
    "canView" BOOLEAN NOT NULL DEFAULT true,
    "canDownload" BOOLEAN NOT NULL DEFAULT true,
    "canEdit" BOOLEAN NOT NULL DEFAULT false,
    "canDelete" BOOLEAN NOT NULL DEFAULT false,
    "linkedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "linkedById" UUID,
    "unlinkedAt" TIMESTAMPTZ(6),
    "unlinkedById" UUID,
    "unlinkReason" TEXT,

    CONSTRAINT "AttachmentLink_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AuthFactor" (
    "id" UUID NOT NULL,
    "status" "AuthFactorStatus" NOT NULL DEFAULT 'PENDING_VERIFICATION',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID NOT NULL,
    "memberId" UUID,
    "factorType" "AuthFactorType" NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "totpSecret" VARCHAR(255),
    "totpAlgorithm" VARCHAR(10) DEFAULT 'SHA1',
    "totpDigits" INTEGER DEFAULT 6,
    "totpPeriod" INTEGER DEFAULT 30,
    "phoneNumber" VARCHAR(50),
    "emailAddress" CITEXT,
    "webauthnCredentialId" TEXT,
    "webauthnPublicKey" TEXT,
    "webauthnCounter" BIGINT DEFAULT 0,
    "webauthnTransports" VARCHAR(20)[],
    "backupCodes" VARCHAR(20)[],
    "backupCodesUsed" VARCHAR(20)[],
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "verificationCode" VARCHAR(10),
    "verificationExpiry" TIMESTAMPTZ(6),
    "lastUsedAt" TIMESTAMPTZ(6),
    "useCount" INTEGER NOT NULL DEFAULT 0,
    "failureCount" INTEGER NOT NULL DEFAULT 0,
    "lastFailureAt" TIMESTAMPTZ(6),
    "deviceInfo" JSONB,
    "userAgent" TEXT,
    "ipAddress" VARCHAR(45),
    "compromisedAt" TIMESTAMPTZ(6),
    "compromiseReason" TEXT,
    "recoveredAt" TIMESTAMPTZ(6),
    "metadata" JSONB,

    CONSTRAINT "AuthFactor_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BankAccount" (
    "id" UUID NOT NULL,
    "status" "BankAccountStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "accountNumber" TEXT NOT NULL,
    "routingNumber" TEXT,
    "accountType" "BankAccountType" NOT NULL DEFAULT 'CHECKING',
    "bankName" TEXT NOT NULL,
    "accountName" TEXT NOT NULL,
    "currency" TEXT NOT NULL DEFAULT 'USD',
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'HIGHLY_SENSITIVE',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "BankAccount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BankStatementLine" (
    "id" UUID NOT NULL,
    "status" "StatementLineStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "transactionDate" TIMESTAMPTZ(6) NOT NULL,
    "postingDate" TIMESTAMPTZ(6),
    "amount" DECIMAL(12,2) NOT NULL,
    "balance" DECIMAL(12,2),
    "description" TEXT NOT NULL,
    "referenceNumber" TEXT,
    "memo" TEXT,
    "bankAccountId" UUID NOT NULL,
    "reconciliationId" UUID,
    "category" TEXT,
    "isReconciled" BOOLEAN NOT NULL DEFAULT false,
    "reconciledAt" TIMESTAMPTZ(6),
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "BankStatementLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BenefitDependent" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "benefitEnrollmentId" UUID NOT NULL,
    "relationshipType" "RelationshipType" NOT NULL DEFAULT 'SPOUSE',
    "firstName" VARCHAR(50) NOT NULL,
    "lastName" VARCHAR(50) NOT NULL,
    "middleName" VARCHAR(50),
    "dateOfBirth" DATE NOT NULL,
    "gender" VARCHAR(10),
    "ssn" VARCHAR(11),
    "email" CITEXT,
    "phone" VARCHAR(20),
    "address" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "coverageStartDate" DATE NOT NULL,
    "coverageEndDate" DATE,
    "isStudent" BOOLEAN NOT NULL DEFAULT false,
    "studentStatus" VARCHAR(20),
    "schoolName" VARCHAR(200),
    "expectedGraduation" DATE,
    "isDisabled" BOOLEAN NOT NULL DEFAULT false,
    "disabilityType" VARCHAR(100),
    "disabilityStartDate" DATE,
    "legalGuardian" VARCHAR(200),
    "courtOrder" VARCHAR(200),
    "documentationProvided" BOOLEAN NOT NULL DEFAULT false,
    "verificationDate" DATE,
    "verifiedById" UUID,

    CONSTRAINT "BenefitDependent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BenefitEnrollment" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "benefitType" "BenefitType" NOT NULL DEFAULT 'HEALTH_INSURANCE',
    "benefitPlanCode" CITEXT NOT NULL,
    "benefitPlanName" VARCHAR(200) NOT NULL,
    "enrollmentStatus" "EnrollmentStatus" NOT NULL DEFAULT 'PENDING',
    "coverageLevel" "CoverageLevel" NOT NULL DEFAULT 'EMPLOYEE_ONLY',
    "enrollmentDate" DATE NOT NULL,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "employeePremium" DECIMAL(8,2),
    "employerPremium" DECIMAL(8,2),
    "totalPremium" DECIMAL(8,2),
    "deductible" DECIMAL(8,2),
    "outOfPocketMax" DECIMAL(8,2),
    "electionAmount" DECIMAL(8,2),
    "payrollDeduction" DECIMAL(8,2),
    "annualElection" DECIMAL(10,2),
    "insuranceCarrier" VARCHAR(100),
    "policyNumber" VARCHAR(50),
    "groupNumber" VARCHAR(50),
    "enrollmentReason" VARCHAR(100),
    "lifeEventType" VARCHAR(50),
    "lifeEventDate" DATE,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "primaryBeneficiary" VARCHAR(200),
    "beneficiaryPercent" DECIMAL(5,2),

    CONSTRAINT "BenefitEnrollment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Bid" (
    "id" UUID NOT NULL,
    "status" "BidStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID,
    "opportunityId" UUID,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "dueDate" TIMESTAMPTZ(6),

    CONSTRAINT "Bid_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BidComparison" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "bidId" UUID NOT NULL,
    "criterion" VARCHAR(200) NOT NULL,
    "value" TEXT,
    "ranking" INTEGER,
    "recommendation" TEXT,

    CONSTRAINT "BidComparison_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BidInvitation" (
    "id" UUID NOT NULL,
    "status" "BidInvitationStatus" NOT NULL DEFAULT 'SENT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "bidId" UUID NOT NULL,
    "inviteeName" TEXT NOT NULL,
    "inviteeEmail" TEXT NOT NULL,
    "sentAt" TIMESTAMPTZ(6),
    "respondedAt" TIMESTAMPTZ(6),

    CONSTRAINT "BidInvitation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BidSubmission" (
    "id" UUID NOT NULL,
    "status" "BidSubmissionStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invitationId" UUID NOT NULL,
    "bidId" UUID NOT NULL,
    "submittedAt" TIMESTAMPTZ(6),
    "amount" DECIMAL(12,2),
    "notes" TEXT,
    "attachmentUrl" TEXT,

    CONSTRAINT "BidSubmission_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BillApproval" (
    "id" UUID NOT NULL,
    "status" "ProcurementApprovalStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "apBillId" UUID NOT NULL,
    "approverId" UUID,
    "decision" "ProcurementApprovalStatus" NOT NULL DEFAULT 'PENDING',
    "approvedAt" TIMESTAMPTZ(6),
    "decisionAt" TIMESTAMPTZ(6),
    "comment" TEXT,
    "approvalLevel" INTEGER NOT NULL DEFAULT 1,
    "delegatedFrom" UUID,
    "requestedAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',

    CONSTRAINT "BillApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "BillPayment" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "apBillId" UUID NOT NULL,
    "paymentId" UUID NOT NULL,
    "amountApplied" DECIMAL(12,2) NOT NULL,
    "appliedAt" TIMESTAMPTZ(6) NOT NULL,
    "sequenceNumber" INTEGER NOT NULL DEFAULT 1,
    "applicationRef" VARCHAR(100),
    "discountTaken" DECIMAL(12,2) DEFAULT 0,
    "adjustmentAmount" DECIMAL(12,2) DEFAULT 0,
    "writeOffAmount" DECIMAL(12,2) DEFAULT 0,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "baseCurrencyAmount" DECIMAL(12,2),
    "isReversed" BOOLEAN NOT NULL DEFAULT false,
    "reversedAt" TIMESTAMPTZ(6),
    "reversedById" UUID,
    "reversalReason" TEXT,
    "originalBillPaymentId" UUID,
    "glBatchId" UUID,
    "glJournalEntryId" UUID,
    "notes" TEXT,
    "internalNotes" TEXT,

    CONSTRAINT "BillPayment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Certification" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "certificationName" VARCHAR(200) NOT NULL,
    "certificationCode" VARCHAR(50),
    "issuingOrganization" VARCHAR(200) NOT NULL,
    "certificationLevel" VARCHAR(50),
    "category" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "issuedDate" DATE NOT NULL,
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "lastRenewalDate" DATE,
    "nextRenewalDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isExpired" BOOLEAN NOT NULL DEFAULT false,
    "requiresRenewal" BOOLEAN NOT NULL DEFAULT false,
    "verificationNumber" VARCHAR(100),
    "verificationUrl" VARCHAR(500),
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "verifiedById" UUID,
    "prerequisites" JSONB,
    "continuingEducationHours" DECIMAL(6,2),
    "renewalRequirements" JSONB,
    "cost" DECIMAL(10,2),
    "currency" "CurrencyCode" NOT NULL DEFAULT 'USD',
    "paidByCompany" BOOLEAN NOT NULL DEFAULT false,
    "trainingRequired" BOOLEAN NOT NULL DEFAULT false,
    "trainingHours" DECIMAL(6,2),
    "studyMaterials" JSONB,
    "isRegulatory" BOOLEAN NOT NULL DEFAULT false,
    "regulatoryBody" VARCHAR(200),
    "complianceLevel" "ComplianceLevel" NOT NULL DEFAULT 'BASIC',
    "certificateUrl" VARCHAR(500),
    "documentPath" VARCHAR(500),
    "attachments" JSONB,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "hrReviewedAt" TIMESTAMPTZ(6),
    "hrReviewedById" UUID,

    CONSTRAINT "Certification_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChangeOrder" (
    "id" UUID NOT NULL,
    "status" "ChangeOrderStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID,
    "projectId" UUID,
    "invoiceId" UUID,
    "subtotalDelta" DECIMAL(12,2),
    "taxDelta" DECIMAL(12,2),
    "totalDelta" DECIMAL(12,2),

    CONSTRAINT "ChangeOrder_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChangeOrderApproval" (
    "id" UUID NOT NULL,
    "status" "ChangeOrderApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "changeOrderId" UUID NOT NULL,
    "approverId" UUID,
    "decision" "ChangeOrderApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "comments" TEXT,
    "requestedAt" TIMESTAMPTZ(6),
    "decidedAt" TIMESTAMPTZ(6),

    CONSTRAINT "ChangeOrderApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChangeOrderDocument" (
    "id" UUID NOT NULL,
    "status" "ChangeOrderChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "changeOrderId" UUID NOT NULL,
    "fileName" TEXT NOT NULL,
    "url" TEXT NOT NULL,
    "mimeType" TEXT,
    "fileSize" INTEGER,
    "uploadedBy" UUID,
    "type" "ChangeOrderDocumentType" NOT NULL DEFAULT 'ATTACHMENT',

    CONSTRAINT "ChangeOrderDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChangeOrderLine" (
    "id" UUID NOT NULL,
    "status" "ChangeOrderChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "changeOrderId" UUID NOT NULL,
    "description" TEXT NOT NULL,
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "total" DECIMAL(12,2) NOT NULL,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "ChangeOrderLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChangeVector" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ChangeVector_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Channel" (
    "id" UUID NOT NULL,
    "status" "ChannelStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "channelName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "channelType" "ChannelType" NOT NULL DEFAULT 'PUBLIC',
    "visibility" "ChannelVisibility" NOT NULL DEFAULT 'TENANT_WIDE',
    "isReadOnly" BOOLEAN NOT NULL DEFAULT false,
    "defaultMessageFormat" "MessageFormat" NOT NULL DEFAULT 'TEXT',
    "allowAttachments" BOOLEAN NOT NULL DEFAULT true,
    "allowReactions" BOOLEAN NOT NULL DEFAULT true,
    "allowThreads" BOOLEAN NOT NULL DEFAULT true,
    "maxMembers" INTEGER,
    "requireApproval" BOOLEAN NOT NULL DEFAULT false,
    "contextType" VARCHAR(50),
    "contextId" UUID,
    "projectId" UUID,
    "departmentId" UUID,
    "opportunityId" UUID,
    "moderationEnabled" BOOLEAN NOT NULL DEFAULT false,
    "autoModeration" BOOLEAN NOT NULL DEFAULT false,
    "profanityFilter" BOOLEAN NOT NULL DEFAULT true,
    "allowExternalShares" BOOLEAN NOT NULL DEFAULT false,
    "retentionDays" INTEGER,
    "ownerId" UUID NOT NULL,
    "creatorId" UUID NOT NULL,
    "lastActivityAt" TIMESTAMPTZ(6),
    "pinnedMessageId" UUID,
    "memberCount" INTEGER NOT NULL DEFAULT 0,
    "messageCount" INTEGER NOT NULL DEFAULT 0,
    "lastMessageAt" TIMESTAMPTZ(6),
    "totalAttachments" INTEGER NOT NULL DEFAULT 0,
    "archivedAt" TIMESTAMPTZ(6),
    "archivedById" UUID,
    "archiveReason" TEXT,
    "expiresAt" TIMESTAMPTZ(6),
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "Channel_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChannelMember" (
    "id" UUID NOT NULL,
    "status" "ChannelMemberStatus" NOT NULL DEFAULT 'INVITED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "channelId" UUID NOT NULL,
    "memberId" UUID NOT NULL,
    "memberRole" "ChannelMemberRole" NOT NULL DEFAULT 'MEMBER',
    "memberStatus" "ChannelMemberStatus" NOT NULL DEFAULT 'INVITED',
    "canPost" BOOLEAN NOT NULL DEFAULT true,
    "canReact" BOOLEAN NOT NULL DEFAULT true,
    "canCreateThreads" BOOLEAN NOT NULL DEFAULT true,
    "canUploadFiles" BOOLEAN NOT NULL DEFAULT true,
    "canInviteMembers" BOOLEAN NOT NULL DEFAULT false,
    "canModerate" BOOLEAN NOT NULL DEFAULT false,
    "canDeleteMessages" BOOLEAN NOT NULL DEFAULT false,
    "canEditChannel" BOOLEAN NOT NULL DEFAULT false,
    "notificationLevel" "NotificationLevel" NOT NULL DEFAULT 'ALL',
    "isMuted" BOOLEAN NOT NULL DEFAULT false,
    "mutedUntil" TIMESTAMPTZ(6),
    "emailNotifications" BOOLEAN NOT NULL DEFAULT true,
    "mobileNotifications" BOOLEAN NOT NULL DEFAULT true,
    "desktopNotifications" BOOLEAN NOT NULL DEFAULT true,
    "invitedById" UUID,
    "invitedAt" TIMESTAMPTZ(6),
    "joinedAt" TIMESTAMPTZ(6),
    "leftAt" TIMESTAMPTZ(6),
    "lastReadAt" TIMESTAMPTZ(6),
    "messageCount" INTEGER NOT NULL DEFAULT 0,
    "reactionCount" INTEGER NOT NULL DEFAULT 0,
    "lastActiveAt" TIMESTAMPTZ(6),
    "unreadCount" INTEGER NOT NULL DEFAULT 0,
    "bannedAt" TIMESTAMPTZ(6),
    "bannedById" UUID,
    "banReason" TEXT,
    "kickedAt" TIMESTAMPTZ(6),
    "kickedById" UUID,
    "kickReason" TEXT,
    "customTitle" VARCHAR(100),
    "nickname" VARCHAR(100),
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "ChannelMember_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Chargeback" (
    "id" UUID NOT NULL,
    "status" "ChargebackStatus" NOT NULL DEFAULT 'RECEIVED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "chargebackNumber" TEXT NOT NULL,
    "receivedDate" TIMESTAMPTZ(6) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "currency" TEXT NOT NULL DEFAULT 'USD',
    "reasonCode" TEXT,
    "disputeId" TEXT,
    "description" TEXT,
    "notes" TEXT,
    "paymentId" UUID NOT NULL,
    "assignedToId" UUID,
    "resolvedAt" TIMESTAMPTZ(6),
    "resolvedById" UUID,
    "resolutionNotes" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "Chargeback_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ChargebackEvidence" (
    "id" UUID NOT NULL,
    "status" "PaymentChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" VARCHAR(255) NOT NULL,
    "fileType" VARCHAR(100) NOT NULL,
    "fileSize" INTEGER NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "description" TEXT,
    "chargebackId" UUID NOT NULL,
    "uploadedById" UUID NOT NULL,

    CONSTRAINT "ChargebackEvidence_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ClockInClockOut" (
    "id" UUID NOT NULL,
    "status" "TimeClockStatus" NOT NULL DEFAULT 'CLOCKED_OUT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "clockNumber" VARCHAR(50) NOT NULL,
    "clockDate" DATE NOT NULL,
    "clockInTime" TIMESTAMPTZ(6),
    "clockOutTime" TIMESTAMPTZ(6),
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "breakStartTime" TIMESTAMPTZ(6),
    "breakEndTime" TIMESTAMPTZ(6),
    "lunchStartTime" TIMESTAMPTZ(6),
    "lunchEndTime" TIMESTAMPTZ(6),
    "totalHours" DECIMAL(8,2),
    "regularHours" DECIMAL(8,2),
    "overtimeHours" DECIMAL(8,2),
    "breakHours" DECIMAL(8,2),
    "clockLocation" VARCHAR(100),
    "deviceId" VARCHAR(50),
    "ipAddress" VARCHAR(45),
    "gpsLatitude" DECIMAL(10,8),
    "gpsLongitude" DECIMAL(11,8),
    "isValidated" BOOLEAN NOT NULL DEFAULT false,
    "validatedAt" TIMESTAMPTZ(6),
    "validatedBy" UUID,
    "notes" TEXT,
    "exceptionReason" VARCHAR(255),
    "timesheetId" UUID,

    CONSTRAINT "ClockInClockOut_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CompensationComponent" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "compensationPlanId" UUID NOT NULL,
    "componentType" "CompensationType" NOT NULL DEFAULT 'SALARY',
    "componentName" VARCHAR(100) NOT NULL,
    "componentCode" CITEXT,
    "amount" DECIMAL(12,2),
    "percentage" DECIMAL(5,2),
    "rate" DECIMAL(8,2),
    "units" DECIMAL(10,2),
    "isRecurring" BOOLEAN NOT NULL DEFAULT true,
    "frequency" "PayFrequency" DEFAULT 'BIWEEKLY',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isTaxable" BOOLEAN NOT NULL DEFAULT true,
    "calculationMethod" VARCHAR(50),
    "calculationBase" VARCHAR(50),
    "minimumAmount" DECIMAL(12,2),
    "maximumAmount" DECIMAL(12,2),
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "glAccountCode" CITEXT,
    "costCenterCode" CITEXT,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,

    CONSTRAINT "CompensationComponent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CompensationPlan" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "planName" VARCHAR(255) NOT NULL,
    "compensationType" "CompensationType" NOT NULL DEFAULT 'SALARY',
    "payFrequency" "PayFrequency" NOT NULL DEFAULT 'BIWEEKLY',
    "baseSalary" DECIMAL(12,2),
    "hourlyRate" DECIMAL(8,2),
    "overtimeRate" DECIMAL(8,2),
    "overtimeMultiplier" DECIMAL(3,2) DEFAULT 1.5,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "payLocation" VARCHAR(100),
    "exemptStatus" BOOLEAN NOT NULL DEFAULT false,
    "taxJurisdiction" VARCHAR(50),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,

    CONSTRAINT "CompensationPlan_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ConflictLog" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ConflictLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Contact" (
    "id" UUID NOT NULL,
    "status" "ContactStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "firstName" VARCHAR(100) NOT NULL,
    "lastName" VARCHAR(100) NOT NULL,
    "email" CITEXT,
    "phone" VARCHAR(20),
    "mobile" VARCHAR(20),
    "title" VARCHAR(100),
    "department" VARCHAR(100),
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "preferredContact" "PreferredContactMethod",
    "contactType" "ContactType",
    "timezone" VARCHAR(50),
    "notes" TEXT,
    "specialRequirements" TEXT,
    "accountId" UUID NOT NULL,

    CONSTRAINT "Contact_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Contract" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "contractNumber" CITEXT NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "contractType" VARCHAR(50) NOT NULL,
    "startDate" DATE NOT NULL,
    "endDate" DATE,
    "renewalDate" DATE,
    "value" DECIMAL(15,2),
    "signedDate" DATE,
    "approvedDate" DATE,
    "terms" TEXT,
    "notes" TEXT,
    "accountId" UUID NOT NULL,

    CONSTRAINT "Contract_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ContractTemplate" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ContractTemplate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CostCategory" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "CostCategory_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CostCenter" (
    "id" UUID NOT NULL,
    "status" "CostCenterStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "costCenterCode" CITEXT NOT NULL,
    "costCenterName" VARCHAR(100) NOT NULL,
    "costCenterDescription" TEXT,
    "parentCostCenterId" UUID,
    "budgetAmount" DECIMAL(12,2),
    "actualAmount" DECIMAL(12,2) DEFAULT 0,
    "varianceAmount" DECIMAL(12,2) DEFAULT 0,
    "currency" "CurrencyCode" NOT NULL DEFAULT 'USD',
    "managerId" UUID,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "CostCenter_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CostCode" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "CostCode_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Country" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "Country_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CreditMemo" (
    "id" UUID NOT NULL,
    "status" "CreditMemoStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "creditMemoNumber" VARCHAR(50) NOT NULL,
    "documentGroupId" UUID,
    "subtotal" DECIMAL(12,2) NOT NULL,
    "taxAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "discountAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "totalAmount" DECIMAL(12,2) NOT NULL,
    "appliedAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "remainingAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "currencyEnum" "CurrencyCode",
    "exchangeRate" DECIMAL(10,6),
    "creditMemoDate" DATE NOT NULL,
    "sourceInvoiceId" UUID,
    "reason" VARCHAR(100),
    "accountId" UUID NOT NULL,
    "contactId" UUID,
    "description" TEXT,
    "internalNotes" TEXT,
    "customerNotes" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedByMemberId" UUID,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "CreditMemo_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CreditMemoLine" (
    "id" UUID NOT NULL,
    "status" "InvoiceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "creditMemoId" UUID NOT NULL,
    "lineNumber" INTEGER NOT NULL,
    "itemType" "InvoiceLineItemType" NOT NULL DEFAULT 'SERVICE',
    "itemCode" VARCHAR(50),
    "description" TEXT NOT NULL,
    "detailedDescription" TEXT,
    "quantity" DECIMAL(10,4) NOT NULL,
    "unitOfMeasure" VARCHAR(20),
    "unitPrice" DECIMAL(12,4) NOT NULL,
    "lineAmount" DECIMAL(12,2) NOT NULL,
    "discountPercent" DECIMAL(5,2),
    "discountAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "netAmount" DECIMAL(12,2) NOT NULL,
    "taxable" BOOLEAN NOT NULL DEFAULT true,
    "taxCode" VARCHAR(20),
    "taxPercent" DECIMAL(5,2),
    "taxAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "sourceType" VARCHAR(50),
    "sourceInvoiceLineId" UUID,
    "costCode" VARCHAR(50),
    "costCenter" VARCHAR(50),
    "glAccountCode" VARCHAR(50),
    "notes" TEXT,
    "customerNotes" TEXT,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "CreditMemoLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CurrencyRate" (
    "id" UUID NOT NULL,
    "status" "CurrencyRateStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'PUBLIC',
    "retentionPolicy" "RetentionPolicy",
    "fromCurrency" VARCHAR(3) NOT NULL,
    "toCurrency" VARCHAR(3) NOT NULL,
    "rateType" "CurrencyRateType" NOT NULL DEFAULT 'SPOT',
    "exchangeRate" DECIMAL(18,8) NOT NULL,
    "inverseRate" DECIMAL(18,8),
    "spread" DECIMAL(8,6),
    "margin" DECIMAL(8,6),
    "effectiveFrom" TIMESTAMPTZ(6) NOT NULL,
    "effectiveTo" TIMESTAMPTZ(6),
    "rateDate" DATE NOT NULL,
    "lastUpdated" TIMESTAMPTZ(6) NOT NULL,
    "source" "CurrencyRateSource" NOT NULL DEFAULT 'MANUAL',
    "providerName" VARCHAR(100),
    "providerId" VARCHAR(100),
    "apiEndpoint" VARCHAR(500),
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "isManualOverride" BOOLEAN NOT NULL DEFAULT false,
    "autoUpdate" BOOLEAN NOT NULL DEFAULT true,
    "updateFrequency" VARCHAR(20),
    "confidence" DECIMAL(5,4),
    "volatility" DECIMAL(8,6),
    "dataQuality" VARCHAR(20),
    "lastVerifiedAt" TIMESTAMPTZ(6),
    "verifiedByActorId" UUID,
    "notes" TEXT,

    CONSTRAINT "CurrencyRate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DailyLog" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "logDate" DATE NOT NULL,
    "weather" JSONB,
    "notes" TEXT,
    "safetyIncidents" TEXT,
    "manpowerCount" INTEGER,
    "authorId" UUID NOT NULL,
    "projectId" UUID NOT NULL,

    CONSTRAINT "DailyLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DashboardDefinition" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "statusEnum" "TemplateStatus" DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "code" VARCHAR(50),
    "description" TEXT,
    "definition" JSONB,
    "layout" JSONB,
    "tags" VARCHAR(255),
    "isPublished" BOOLEAN NOT NULL DEFAULT false,
    "publishedAt" TIMESTAMPTZ(6),

    CONSTRAINT "DashboardDefinition_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataAccessRequest" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataAccessRequest_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataErasureRequest" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataErasureRequest_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataLineageEdge" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataLineageEdge_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataLineageEvent" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataLineageEvent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataRetentionPolicy" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataRetentionPolicy_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DataSubject" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DataSubject_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Deduction" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "deductionCode" CITEXT NOT NULL,
    "deductionName" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "deductionType" VARCHAR(50) NOT NULL,
    "amount" DECIMAL(12,4),
    "percentage" DECIMAL(8,4),
    "minimumAmount" DECIMAL(12,4),
    "maximumAmount" DECIMAL(12,4),
    "annualLimit" DECIMAL(12,4),
    "isStatutory" BOOLEAN NOT NULL DEFAULT false,
    "isVoluntary" BOOLEAN NOT NULL DEFAULT true,
    "isPretax" BOOLEAN NOT NULL DEFAULT false,
    "priority" INTEGER NOT NULL DEFAULT 1,
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "employeeGroup" VARCHAR(50),
    "department" VARCHAR(50),
    "jobTitle" VARCHAR(100),
    "vendorId" UUID,
    "vendorAccount" VARCHAR(50),
    "glAccount" VARCHAR(50),
    "liabilityAccount" VARCHAR(50),

    CONSTRAINT "Deduction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DelegationConstraint" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "delegationGrantId" UUID NOT NULL,
    "constraintType" "DelegationConstraintType" NOT NULL DEFAULT 'TIME_WINDOW',
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "priority" INTEGER NOT NULL DEFAULT 100,
    "isEnforced" BOOLEAN NOT NULL DEFAULT true,
    "timeWindowStart" VARCHAR(8),
    "timeWindowEnd" VARCHAR(8),
    "allowedDaysOfWeek" INTEGER[],
    "timezone" VARCHAR(50),
    "validFrom" TIMESTAMPTZ(6),
    "validTo" TIMESTAMPTZ(6),
    "excludedDates" DATE[],
    "allowedIpRanges" VARCHAR(45)[],
    "blockedIpRanges" VARCHAR(45)[],
    "allowedCountries" VARCHAR(3)[],
    "blockedCountries" VARCHAR(3)[],
    "maxUsageCount" INTEGER,
    "maxUsagePerDay" INTEGER,
    "maxUsagePerHour" INTEGER,
    "cooldownPeriod" INTEGER,
    "allowedResourceTypes" VARCHAR(100)[],
    "blockedResourceTypes" VARCHAR(100)[],
    "maxResourceCount" INTEGER,
    "maxAmount" DECIMAL(15,2),
    "dailyAmountLimit" DECIMAL(15,2),
    "monthlyAmountLimit" DECIMAL(15,2),
    "requiresApprovalAbove" DECIMAL(15,2),
    "approverRoles" VARCHAR(100)[],
    "minApprovers" INTEGER,
    "requiredContext" JSONB,
    "forbiddenContext" JSONB,
    "conditionalLogic" TEXT,
    "allowedDeviceTypes" VARCHAR(50)[],
    "requiresMfa" BOOLEAN NOT NULL DEFAULT false,
    "minSecurityLevel" VARCHAR(50),
    "alertOnViolation" BOOLEAN NOT NULL DEFAULT true,
    "alertRecipients" UUID[],
    "logViolations" BOOLEAN NOT NULL DEFAULT true,
    "violationAction" "ConstraintViolationAction" NOT NULL DEFAULT 'BLOCK',
    "violationMessage" VARCHAR(500),
    "gracePeriod" INTEGER,
    "cacheEnabled" BOOLEAN NOT NULL DEFAULT true,
    "cacheTtlSeconds" INTEGER NOT NULL DEFAULT 300,
    "evaluationTimeout" INTEGER NOT NULL DEFAULT 5000,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "DelegationConstraint_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DelegationGrant" (
    "id" UUID NOT NULL,
    "status" "DelegationStatus" NOT NULL DEFAULT 'PENDING_APPROVAL',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "delegationType" "DelegationType" NOT NULL DEFAULT 'PERMISSION',
    "delegatorId" UUID NOT NULL,
    "delegateeId" UUID NOT NULL,
    "resourceType" VARCHAR(100) NOT NULL,
    "resourceIds" UUID[],
    "permissions" VARCHAR(50)[],
    "scopeFilter" JSONB,
    "contextData" JSONB,
    "effectiveFrom" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "effectiveTo" TIMESTAMPTZ(6),
    "maxDuration" INTEGER,
    "usageCount" INTEGER NOT NULL DEFAULT 0,
    "maxUsageCount" INTEGER,
    "lastUsedAt" TIMESTAMPTZ(6),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT true,
    "approvedBy" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "approvalNotes" TEXT,
    "revokedAt" TIMESTAMPTZ(6),
    "revokedBy" UUID,
    "revocationReason" TEXT,
    "parentDelegationId" UUID,
    "canSubDelegate" BOOLEAN NOT NULL DEFAULT false,
    "maxDelegationDepth" INTEGER NOT NULL DEFAULT 1,
    "currentDepth" INTEGER NOT NULL DEFAULT 1,
    "riskLevel" "RiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "securityClassification" VARCHAR(50),
    "requiresMfa" BOOLEAN NOT NULL DEFAULT false,
    "monitoringEnabled" BOOLEAN NOT NULL DEFAULT true,
    "alertOnUsage" BOOLEAN NOT NULL DEFAULT false,
    "alertThreshold" INTEGER,
    "emergencyRevoke" BOOLEAN NOT NULL DEFAULT false,
    "emergencyContact" UUID,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "DelegationGrant_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Department" (
    "id" UUID NOT NULL,
    "status" "DepartmentStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "departmentCode" CITEXT NOT NULL,
    "departmentName" VARCHAR(100) NOT NULL,
    "departmentDescription" TEXT,
    "parentDepartmentId" UUID,
    "managerId" UUID,
    "assistantManagerId" UUID,
    "budgetOwnerId" UUID,
    "budgetAmount" DECIMAL(12,2),
    "actualSpend" DECIMAL(12,2) DEFAULT 0,
    "budgetVariance" DECIMAL(12,2) DEFAULT 0,
    "currency" "CurrencyCode" NOT NULL DEFAULT 'USD',
    "costCenterId" UUID,
    "primaryLocationId" UUID,
    "region" VARCHAR(50),
    "country" VARCHAR(50),
    "timeZone" VARCHAR(50),
    "departmentLevel" INTEGER NOT NULL DEFAULT 1,
    "employeeCount" INTEGER DEFAULT 0,
    "maxEmployeeCount" INTEGER,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "complianceLevel" "ComplianceLevel" DEFAULT 'BASIC',
    "reportingStructure" JSONB,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "Department_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DirectChat" (
    "id" UUID NOT NULL,
    "status" "DirectChatStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "participant1Id" UUID NOT NULL,
    "participant2Id" UUID NOT NULL,
    "chatType" "DirectChatType" NOT NULL DEFAULT 'PERSONAL',
    "chatStatus" "DirectChatStatus" NOT NULL DEFAULT 'ACTIVE',
    "isEncrypted" BOOLEAN NOT NULL DEFAULT true,
    "allowAttachments" BOOLEAN NOT NULL DEFAULT true,
    "allowVoiceMessages" BOOLEAN NOT NULL DEFAULT true,
    "allowScreenSharing" BOOLEAN NOT NULL DEFAULT false,
    "retentionDays" INTEGER,
    "lastActivityAt" TIMESTAMPTZ(6),
    "lastMessageAt" TIMESTAMPTZ(6),
    "messageCount" INTEGER NOT NULL DEFAULT 0,
    "totalAttachments" INTEGER NOT NULL DEFAULT 0,
    "participant1Muted" BOOLEAN NOT NULL DEFAULT false,
    "participant2Muted" BOOLEAN NOT NULL DEFAULT false,
    "participant1Blocked" BOOLEAN NOT NULL DEFAULT false,
    "participant2Blocked" BOOLEAN NOT NULL DEFAULT false,
    "participant1LastRead" TIMESTAMPTZ(6),
    "participant2LastRead" TIMESTAMPTZ(6),
    "participant1UnreadCount" INTEGER NOT NULL DEFAULT 0,
    "participant2UnreadCount" INTEGER NOT NULL DEFAULT 0,
    "contextType" VARCHAR(50),
    "contextId" UUID,
    "priority" "CommunicationMessagePriority" NOT NULL DEFAULT 'NORMAL',
    "escalatedFromChannelId" UUID,
    "archivedAt" TIMESTAMPTZ(6),
    "archivedById" UUID,
    "archiveReason" TEXT,
    "autoDeleteAt" TIMESTAMPTZ(6),
    "isMonitored" BOOLEAN NOT NULL DEFAULT false,
    "monitoringReason" VARCHAR(255),
    "lastComplianceCheck" TIMESTAMPTZ(6),
    "complianceFlags" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "DirectChat_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DirectMessage" (
    "id" UUID NOT NULL,
    "status" "CommunicationMessageStatus" NOT NULL DEFAULT 'SENT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "directChatId" UUID NOT NULL,
    "senderId" UUID NOT NULL,
    "receiverId" UUID NOT NULL,
    "messageType" "CommunicationMessageType" NOT NULL DEFAULT 'TEXT',
    "messageStatus" "CommunicationMessageStatus" NOT NULL DEFAULT 'SENT',
    "priority" "CommunicationMessagePriority" NOT NULL DEFAULT 'NORMAL',
    "content" TEXT NOT NULL,
    "contentFormat" "MessageFormat" NOT NULL DEFAULT 'TEXT',
    "encryptedContent" TEXT,
    "encryptionKey" VARCHAR(255),
    "deliveredAt" TIMESTAMPTZ(6),
    "readAt" TIMESTAMPTZ(6),
    "acknowledgedAt" TIMESTAMPTZ(6),
    "replyToMessageId" UUID,
    "isForwarded" BOOLEAN NOT NULL DEFAULT false,
    "forwardedFromId" UUID,
    "quotedMessageId" UUID,
    "editedAt" TIMESTAMPTZ(6),
    "editCount" INTEGER NOT NULL DEFAULT 0,
    "originalContent" TEXT,
    "attachmentCount" INTEGER NOT NULL DEFAULT 0,
    "hasImages" BOOLEAN NOT NULL DEFAULT false,
    "hasDocuments" BOOLEAN NOT NULL DEFAULT false,
    "hasVoiceMessage" BOOLEAN NOT NULL DEFAULT false,
    "voiceDuration" INTEGER,
    "reactionCount" INTEGER NOT NULL DEFAULT 0,
    "reactions" TEXT,
    "isImportant" BOOLEAN NOT NULL DEFAULT false,
    "isUrgent" BOOLEAN NOT NULL DEFAULT false,
    "isFlagged" BOOLEAN NOT NULL DEFAULT false,
    "flaggedAt" TIMESTAMPTZ(6),
    "flaggedById" UUID,
    "autoModerated" BOOLEAN NOT NULL DEFAULT false,
    "complianceScored" BOOLEAN NOT NULL DEFAULT false,
    "complianceScore" DECIMAL(3,2),
    "scheduledAt" TIMESTAMPTZ(6),
    "isScheduled" BOOLEAN NOT NULL DEFAULT false,
    "reminderAt" TIMESTAMPTZ(6),
    "externalId" VARCHAR(255),
    "externalSource" VARCHAR(100),
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "DirectMessage_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DirectMessageRead" (
    "id" UUID NOT NULL,
    "status" "ReadStatus" NOT NULL DEFAULT 'DELIVERED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "directMessageId" UUID NOT NULL,
    "memberId" UUID NOT NULL,
    "readStatus" "ReadStatus" NOT NULL DEFAULT 'DELIVERED',
    "deliveredAt" TIMESTAMPTZ(6),
    "readAt" TIMESTAMPTZ(6),
    "acknowledgedAt" TIMESTAMPTZ(6),
    "deviceType" VARCHAR(50),
    "platform" VARCHAR(50),
    "ipAddress" VARCHAR(45),
    "userAgent" VARCHAR(500),
    "readDuration" INTEGER,
    "wasRepliedTo" BOOLEAN NOT NULL DEFAULT false,
    "wasForwarded" BOOLEAN NOT NULL DEFAULT false,
    "wasReacted" BOOLEAN NOT NULL DEFAULT false,
    "readFromNotification" BOOLEAN NOT NULL DEFAULT false,
    "notificationId" UUID,
    "pushNotificationSent" BOOLEAN NOT NULL DEFAULT false,
    "emailNotificationSent" BOOLEAN NOT NULL DEFAULT false,
    "complianceTracked" BOOLEAN NOT NULL DEFAULT false,
    "sensitiveContent" BOOLEAN NOT NULL DEFAULT false,
    "retentionApplied" BOOLEAN NOT NULL DEFAULT false,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "DirectMessageRead_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DistributedLock" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "resourceId" UUID NOT NULL,
    "resourceType" VARCHAR(50) NOT NULL,
    "lockType" VARCHAR(50) NOT NULL,
    "lockPurpose" VARCHAR(100) NOT NULL,
    "lockedBy" UUID NOT NULL,
    "lockToken" VARCHAR(64) NOT NULL,
    "acquiredAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "expiresAt" TIMESTAMPTZ(6) NOT NULL,
    "heartbeatAt" TIMESTAMPTZ(6),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "lockLevel" INTEGER NOT NULL DEFAULT 1,
    "maxDuration" INTEGER NOT NULL DEFAULT 300,
    "extendCount" INTEGER NOT NULL DEFAULT 0,
    "maxExtensions" INTEGER NOT NULL DEFAULT 3,
    "operationContext" TEXT,
    "sessionId" UUID,
    "processId" VARCHAR(100),
    "hostName" VARCHAR(100),

    CONSTRAINT "DistributedLock_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DocumentGroup" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "DocumentGroup_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "DunningNotice" (
    "id" UUID NOT NULL,
    "status" "DunningNoticeStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceId" UUID NOT NULL,
    "dunningSequence" INTEGER NOT NULL,
    "dunningLevel" "DunningLevel" NOT NULL DEFAULT 'FIRST_NOTICE',
    "noticeType" VARCHAR(20) NOT NULL DEFAULT 'EMAIL',
    "subject" VARCHAR(255),
    "message" TEXT NOT NULL,
    "originalAmount" DECIMAL(12,2) NOT NULL,
    "outstandingAmount" DECIMAL(12,2) NOT NULL,
    "lateFeeAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "totalAmountDue" DECIMAL(12,2) NOT NULL,
    "sentDate" DATE NOT NULL,
    "responseDeadline" DATE,
    "paymentDeadline" DATE NOT NULL,
    "deliveryMethod" VARCHAR(50),
    "deliveryStatus" VARCHAR(20) DEFAULT 'SENT',
    "deliveredAt" TIMESTAMPTZ(6),
    "readAt" TIMESTAMPTZ(6),
    "customerResponse" TEXT,
    "responseDate" TIMESTAMPTZ(6),
    "nextAction" VARCHAR(100),
    "nextActionDate" DATE,
    "sentByMemberId" UUID,
    "assignedToMemberId" UUID,
    "internalNotes" TEXT,
    "metadata" JSONB,

    CONSTRAINT "DunningNotice_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ESignatureEnvelope" (
    "id" UUID NOT NULL,
    "status" "ESignatureStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "envelopeNumber" VARCHAR(50) NOT NULL,
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "subject" VARCHAR(500),
    "message" TEXT,
    "primaryDocumentId" UUID,
    "signingOrder" VARCHAR(20) NOT NULL DEFAULT 'PARALLEL',
    "reminderEnabled" BOOLEAN NOT NULL DEFAULT true,
    "reminderDelay" INTEGER DEFAULT 3,
    "reminderInterval" INTEGER DEFAULT 3,
    "expirationDays" INTEGER DEFAULT 30,
    "sentAt" TIMESTAMPTZ(6),
    "deliveredAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "voidedAt" TIMESTAMPTZ(6),
    "expiredAt" TIMESTAMPTZ(6),
    "projectId" UUID,
    "contractId" UUID,
    "invoiceId" UUID,
    "changeOrderId" UUID,
    "entityType" VARCHAR(100),
    "entityId" UUID,
    "senderName" VARCHAR(255) NOT NULL,
    "senderEmail" VARCHAR(255) NOT NULL,
    "senderMemberId" UUID,
    "providerName" VARCHAR(50) NOT NULL DEFAULT 'INTERNAL',
    "providerEnvelopeId" VARCHAR(255),
    "providerStatus" VARCHAR(50),
    "webhookUrl" VARCHAR(500),
    "requireIdVerification" BOOLEAN NOT NULL DEFAULT false,
    "requireAccessCode" BOOLEAN NOT NULL DEFAULT false,
    "allowPrinting" BOOLEAN NOT NULL DEFAULT true,
    "allowDownloading" BOOLEAN NOT NULL DEFAULT true,
    "ipRestrictions" TEXT,
    "locationRestrictions" TEXT,
    "totalRecipients" INTEGER NOT NULL DEFAULT 0,
    "signedRecipients" INTEGER NOT NULL DEFAULT 0,
    "declinedRecipients" INTEGER NOT NULL DEFAULT 0,
    "completionRate" DECIMAL(5,2) NOT NULL DEFAULT 0,

    CONSTRAINT "ESignatureEnvelope_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ESignatureRecipient" (
    "id" UUID NOT NULL,
    "status" "RecipientStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "envelopeId" UUID NOT NULL,
    "recipientType" "RecipientType" NOT NULL DEFAULT 'SIGNER',
    "signingOrder" INTEGER NOT NULL DEFAULT 1,
    "name" VARCHAR(255) NOT NULL,
    "email" VARCHAR(255) NOT NULL,
    "phone" VARCHAR(20),
    "title" VARCHAR(100),
    "company" VARCHAR(255),
    "memberId" UUID,
    "authenticationMethod" "AuthenticationMethod" NOT NULL DEFAULT 'EMAIL',
    "accessCode" VARCHAR(50),
    "idVerificationRequired" BOOLEAN NOT NULL DEFAULT false,
    "phoneAuthentication" BOOLEAN NOT NULL DEFAULT false,
    "smsAuthentication" BOOLEAN NOT NULL DEFAULT false,
    "privateMessage" TEXT,
    "signingInstructions" TEXT,
    "note" TEXT,
    "providerRecipientId" VARCHAR(255),
    "providerStatus" VARCHAR(50),
    "providerUserId" VARCHAR(255),
    "sentAt" TIMESTAMPTZ(6),
    "deliveredAt" TIMESTAMPTZ(6),
    "viewedAt" TIMESTAMPTZ(6),
    "signedAt" TIMESTAMPTZ(6),
    "declinedAt" TIMESTAMPTZ(6),
    "declineReason" TEXT,
    "lastReminderAt" TIMESTAMPTZ(6),
    "reminderCount" INTEGER NOT NULL DEFAULT 0,
    "signingIpAddress" VARCHAR(45),
    "signingLocation" VARCHAR(255),
    "signingDevice" VARCHAR(255),
    "userAgent" VARCHAR(500),
    "signedAt_tz" TIMESTAMPTZ(6),
    "signatureValid" BOOLEAN DEFAULT true,
    "validationErrors" TEXT,
    "certificateInfo" TEXT,

    CONSTRAINT "ESignatureRecipient_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EmailTemplate" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "EmailTemplate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Employment" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "employmentStatus" "EmploymentStatus" NOT NULL DEFAULT 'ACTIVE',
    "employmentType" "EmploymentType" NOT NULL DEFAULT 'FULL_TIME',
    "startDate" DATE NOT NULL,
    "endDate" DATE,
    "terminationDate" DATE,
    "terminationReason" "TerminationReason",
    "isRehire" BOOLEAN NOT NULL DEFAULT false,
    "previousEndDate" DATE,
    "rehireEligible" BOOLEAN NOT NULL DEFAULT true,
    "managerId" UUID,
    "reportingLevel" INTEGER DEFAULT 1,
    "benefitsEligible" BOOLEAN NOT NULL DEFAULT true,
    "workersCompCode" CITEXT,
    "terminationNotes" TEXT,
    "hrNotes" TEXT,

    CONSTRAINT "Employment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EncryptionProfile" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "EncryptionProfile_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ErrorReport" (
    "id" UUID NOT NULL,
    "status" "IncidentStatus" NOT NULL DEFAULT 'REPORTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "errorCode" VARCHAR(100),
    "message" VARCHAR(500) NOT NULL,
    "stackTrace" TEXT,
    "source" VARCHAR(100),
    "severity" "IncidentSeverity" NOT NULL DEFAULT 'MODERATE',
    "priority" "IncidentPriority" NOT NULL DEFAULT 'MEDIUM',
    "ackStatus" "AckStatus" NOT NULL DEFAULT 'NONE',
    "ackedById" UUID,
    "ackedAt" TIMESTAMPTZ(6),
    "resolutionCategory" "ResolutionCategory",
    "resolutionNotes" TEXT,
    "resolvedAt" TIMESTAMPTZ(6),
    "correlationId" UUID,
    "externalReference" VARCHAR(200),
    "systemLogId" UUID,
    "runId" UUID,
    "tags" VARCHAR(50)[],
    "metadata" JSONB,

    CONSTRAINT "ErrorReport_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Estimate" (
    "id" UUID NOT NULL,
    "status" "EstimateStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "clientAccountId" UUID,
    "clientContactId" UUID,
    "contractTemplateId" UUID,
    "termsTemplateId" UUID,
    "documentGroupId" UUID,
    "estimateNumber" CITEXT,
    "sentAt" TIMESTAMPTZ(6),
    "viewedAt" TIMESTAMPTZ(6),
    "clientApprovedAt" TIMESTAMPTZ(6),
    "clientDeclinedAt" TIMESTAMPTZ(6),
    "declinedAt" TIMESTAMPTZ(6),
    "clientDecisionNote" TEXT,
    "enablePublicView" BOOLEAN NOT NULL DEFAULT false,
    "approvalTokenHash" TEXT,
    "publicViewTokenHash" TEXT,
    "approvedByMemberId" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "finalApprovedByMemberId" UUID,
    "finalApprovedAt" TIMESTAMPTZ(6),
    "declineReason" TEXT,
    "approvedProjectId" UUID,
    "approvedInvoiceId" UUID,
    "subtotal" DECIMAL(12,2),
    "discountType" "EstimateDiscountType" NOT NULL DEFAULT 'NONE',
    "discountValue" DECIMAL(6,3),
    "discountAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "taxType" "EstimateTaxType" NOT NULL DEFAULT 'NONE',
    "taxRate" DECIMAL(6,3),
    "taxAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "totalDue" DECIMAL(12,2),
    "grandTotal" DECIMAL(12,2),
    "validUntil" TIMESTAMP(3),
    "name" TEXT NOT NULL,
    "clientNotes" TEXT,
    "internalNotes" TEXT,
    "serviceLocation" TEXT,
    "specialRequirements" TEXT,

    CONSTRAINT "Estimate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateApproval" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "approvalRequestId" UUID,
    "approverId" UUID,
    "decision" "EstimateApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "comments" TEXT,
    "requestedAt" TIMESTAMPTZ(6),
    "decidedAt" TIMESTAMPTZ(6),

    CONSTRAINT "EstimateApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateAttachment" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "documentGroupId" UUID,
    "fileObjectId" UUID,
    "fileName" TEXT NOT NULL,
    "url" TEXT NOT NULL,
    "mimeType" TEXT,
    "fileSize" INTEGER,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,
    "uploadedBy" UUID,

    CONSTRAINT "EstimateAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateComment" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "commentText" TEXT NOT NULL,
    "authorId" UUID NOT NULL,
    "isInternal" BOOLEAN NOT NULL DEFAULT true,

    CONSTRAINT "EstimateComment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateDiscount" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "type" "EstimateDiscountType" NOT NULL,
    "value" DECIMAL(6,3),
    "amount" DECIMAL(12,2) NOT NULL,
    "reason" TEXT,

    CONSTRAINT "EstimateDiscount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateHistoryEvent" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "eventType" VARCHAR(100) NOT NULL,
    "eventDescription" TEXT NOT NULL,
    "actorId" UUID,
    "timestamp" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "EstimateHistoryEvent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateLineItem" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "taskId" UUID,
    "purchaseOrderLineId" UUID,
    "priceListItemId" UUID,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "unitOfMeasure" VARCHAR(50),
    "total" DECIMAL(12,2) NOT NULL,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "EstimateLineItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateRevision" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "revisionNumber" INTEGER NOT NULL,
    "snapshotSubtotal" DECIMAL(12,2),
    "snapshotDiscountType" TEXT,
    "snapshotDiscountTypeEnum" "EstimateDiscountType",
    "snapshotDiscountValue" DECIMAL(6,3),
    "snapshotDiscountAmount" DECIMAL(12,2),
    "snapshotTaxType" TEXT,
    "snapshotTaxTypeEnum" "EstimateTaxType",
    "snapshotTaxRate" DECIMAL(6,3),
    "snapshotTaxAmount" DECIMAL(12,2),
    "snapshotGrandTotal" DECIMAL(12,2),
    "snapshotTerms" TEXT,
    "snapshotValidUntil" TIMESTAMPTZ(6),

    CONSTRAINT "EstimateRevision_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateTax" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "taxType" "EstimateTaxType" NOT NULL,
    "rate" DECIMAL(6,3) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,

    CONSTRAINT "EstimateTax_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EstimateTerm" (
    "id" UUID NOT NULL,
    "status" "EstimateChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateId" UUID NOT NULL,
    "termType" "EstimateTermType" NOT NULL,
    "body" TEXT NOT NULL,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "EstimateTerm_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EventProjection" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" TEXT NOT NULL,
    "state" JSONB NOT NULL,

    CONSTRAINT "EventProjection_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EventSnapshot" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "aggregateType" TEXT NOT NULL,
    "aggregateId" TEXT NOT NULL,
    "snapshot" JSONB NOT NULL,
    "aggregateVersion" INTEGER NOT NULL,

    CONSTRAINT "EventSnapshot_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Expense" (
    "id" UUID NOT NULL,
    "status" "ExpenseStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "expenseDate" DATE NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "description" VARCHAR(500) NOT NULL,
    "category" VARCHAR(100) NOT NULL,
    "merchantName" VARCHAR(255),
    "hasReceipt" BOOLEAN NOT NULL DEFAULT false,
    "receiptUrl" TEXT,
    "businessPurpose" TEXT,
    "projectId" UUID,
    "clientBillable" BOOLEAN NOT NULL DEFAULT false,
    "expenseReportId" UUID,

    CONSTRAINT "Expense_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExpenseApproval" (
    "id" UUID NOT NULL,
    "status" "ExpenseChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "approvalLevel" INTEGER NOT NULL DEFAULT 1,
    "decision" VARCHAR(50) NOT NULL,
    "approvalDate" TIMESTAMPTZ(6),
    "comments" TEXT,
    "delegatedFrom" UUID,
    "expenseReportId" UUID NOT NULL,
    "approverId" UUID NOT NULL,

    CONSTRAINT "ExpenseApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExpenseLine" (
    "id" UUID NOT NULL,
    "status" "ExpenseChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "description" VARCHAR(500) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "category" VARCHAR(100) NOT NULL,
    "taxAmount" DECIMAL(12,2),
    "billableToClient" BOOLEAN NOT NULL DEFAULT false,
    "expenseReportId" UUID NOT NULL,

    CONSTRAINT "ExpenseLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExpenseReceipt" (
    "id" UUID NOT NULL,
    "status" "ExpenseChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" VARCHAR(255) NOT NULL,
    "fileType" VARCHAR(100) NOT NULL,
    "fileSize" INTEGER NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "uploadDate" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "ocrText" TEXT,
    "merchantName" VARCHAR(255),
    "receiptAmount" DECIMAL(12,2),
    "receiptDate" DATE,
    "expenseId" UUID,
    "expenseReportId" UUID,

    CONSTRAINT "ExpenseReceipt_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExpenseReport" (
    "id" UUID NOT NULL,
    "status" "ExpenseReportStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "reportNumber" VARCHAR(50) NOT NULL,
    "reportTitle" VARCHAR(255) NOT NULL,
    "reportPeriod" VARCHAR(100),
    "totalAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "businessPurpose" TEXT,
    "employeeId" UUID NOT NULL,
    "employeeName" VARCHAR(255) NOT NULL,
    "submittedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "rejectionReason" TEXT,

    CONSTRAINT "ExpenseReport_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExportArtifact" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "statusEnum" "ArtifactStatus" DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "jobId" UUID,
    "artifactType" "ArtifactType",
    "fileUrl" VARCHAR(500),
    "contentType" VARCHAR(100),
    "fileSizeBytes" INTEGER,
    "checksum" VARCHAR(100),
    "storageProvider" VARCHAR(50),
    "metadata" JSONB,

    CONSTRAINT "ExportArtifact_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExportJob" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'QUEUED',
    "statusEnum" "JobRunStatus" DEFAULT 'QUEUED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "jobType" VARCHAR(50),
    "format" VARCHAR(20),
    "requestedAt" TIMESTAMPTZ(6),
    "scheduledAt" TIMESTAMPTZ(6),
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "errorMessage" TEXT,
    "filters" JSONB,
    "parameters" JSONB,
    "reportDefinitionId" UUID,
    "dashboardDefinitionId" UUID,

    CONSTRAINT "ExportJob_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ExternalShareLink" (
    "id" UUID NOT NULL,
    "status" "ExternalShareStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "shareToken" VARCHAR(255) NOT NULL,
    "shareUrl" VARCHAR(1000) NOT NULL,
    "shareType" "ExternalShareType" NOT NULL,
    "accessLevel" "ExternalAccessLevel" NOT NULL DEFAULT 'VIEW_ONLY',
    "shareStatus" "ExternalShareStatus" NOT NULL DEFAULT 'ACTIVE',
    "contentType" VARCHAR(50) NOT NULL,
    "contentId" UUID NOT NULL,
    "channelId" UUID,
    "messageId" UUID,
    "fileObjectId" UUID,
    "createdById" UUID NOT NULL,
    "sharedWithEmail" VARCHAR(255),
    "sharedWithName" VARCHAR(255),
    "requiresPassword" BOOLEAN NOT NULL DEFAULT false,
    "passwordHash" VARCHAR(255),
    "maxUses" INTEGER,
    "currentUses" INTEGER NOT NULL DEFAULT 0,
    "isOneTimeUse" BOOLEAN NOT NULL DEFAULT false,
    "allowDownload" BOOLEAN NOT NULL DEFAULT true,
    "allowPrint" BOOLEAN NOT NULL DEFAULT true,
    "allowCopy" BOOLEAN NOT NULL DEFAULT true,
    "allowShare" BOOLEAN NOT NULL DEFAULT false,
    "expiresAt" TIMESTAMPTZ(6),
    "validFrom" TIMESTAMPTZ(6),
    "validUntil" TIMESTAMPTZ(6),
    "timezone" VARCHAR(50),
    "firstAccessedAt" TIMESTAMPTZ(6),
    "lastAccessedAt" TIMESTAMPTZ(6),
    "totalViews" INTEGER NOT NULL DEFAULT 0,
    "uniqueVisitors" INTEGER NOT NULL DEFAULT 0,
    "totalDownloads" INTEGER NOT NULL DEFAULT 0,
    "totalTimeSpent" INTEGER NOT NULL DEFAULT 0,
    "visitorIps" TEXT,
    "visitorCountries" TEXT,
    "visitorDevices" TEXT,
    "visitorBrowsers" TEXT,
    "isSecureLink" BOOLEAN NOT NULL DEFAULT true,
    "requiresAuth" BOOLEAN NOT NULL DEFAULT false,
    "ipRestrictions" TEXT,
    "domainRestrictions" TEXT,
    "geoRestrictions" TEXT,
    "addWatermark" BOOLEAN NOT NULL DEFAULT false,
    "watermarkText" VARCHAR(255),
    "disableRightClick" BOOLEAN NOT NULL DEFAULT false,
    "trackScreenshots" BOOLEAN NOT NULL DEFAULT false,
    "externalSystemId" VARCHAR(255),
    "webhookUrl" VARCHAR(1000),
    "customMetadata" TEXT,
    "revokedAt" TIMESTAMPTZ(6),
    "revokedById" UUID,
    "revocationReason" TEXT,
    "autoRevokeAfterUse" BOOLEAN NOT NULL DEFAULT false,
    "notifyOnAccess" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnDownload" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnExpiry" BOOLEAN NOT NULL DEFAULT true,
    "lastNotificationAt" TIMESTAMPTZ(6),
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'RESTRICTED',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "ExternalShareLink_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FileObject" (
    "id" UUID NOT NULL,
    "status" "FileObjectStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" VARCHAR(255) NOT NULL,
    "displayName" VARCHAR(255),
    "description" TEXT,
    "fileSize" BIGINT NOT NULL,
    "mimeType" VARCHAR(100) NOT NULL,
    "fileCategory" "FileCategory" DEFAULT 'OTHER',
    "storageProvider" "StorageProvider" NOT NULL DEFAULT 'S3',
    "storagePath" VARCHAR(1000) NOT NULL,
    "storageRegion" VARCHAR(50),
    "storageBucket" VARCHAR(100),
    "storageKey" VARCHAR(500) NOT NULL,
    "md5Hash" VARCHAR(32),
    "sha256Hash" VARCHAR(64),
    "isEncrypted" BOOLEAN NOT NULL DEFAULT false,
    "encryptionKey" VARCHAR(255),
    "isPublic" BOOLEAN NOT NULL DEFAULT false,
    "accessUrl" VARCHAR(1000),
    "accessExpiry" TIMESTAMPTZ(6),
    "downloadCount" INTEGER NOT NULL DEFAULT 0,
    "lastAccessedAt" TIMESTAMPTZ(6),
    "virusScanStatus" "VirusScanStatus" DEFAULT 'PENDING',
    "virusScanAt" TIMESTAMPTZ(6),
    "quarantineReason" TEXT,
    "hasPreview" BOOLEAN NOT NULL DEFAULT false,
    "previewPath" VARCHAR(500),
    "thumbnailPath" VARCHAR(500),
    "ocrText" TEXT,
    "contentTags" VARCHAR(50)[],
    "projectId" UUID,
    "uploadedById" UUID,
    "source" VARCHAR(100),

    CONSTRAINT "FileObject_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FileTag" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "FileTag_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ForecastLine" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ForecastLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ForecastSnapshot" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ForecastSnapshot_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FraudPolicy" (
    "id" UUID NOT NULL,
    "status" "FraudPolicyStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "policyType" "FraudPolicyType" NOT NULL DEFAULT 'TRANSACTION_MONITORING',
    "severity" "RiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isSystemPolicy" BOOLEAN NOT NULL DEFAULT false,
    "entityTypes" VARCHAR(100)[],
    "businessUnits" VARCHAR(100)[],
    "geographicScope" VARCHAR(50)[],
    "riskThreshold" DECIMAL(3,2) NOT NULL DEFAULT 0.7,
    "criticalThreshold" DECIMAL(3,2) NOT NULL DEFAULT 0.9,
    "autoBlockThreshold" DECIMAL(3,2),
    "monitoringWindow" INTEGER NOT NULL DEFAULT 24,
    "lookbackPeriod" INTEGER NOT NULL DEFAULT 168,
    "aggregationWindow" INTEGER NOT NULL DEFAULT 1,
    "alertOnTrigger" BOOLEAN NOT NULL DEFAULT true,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "autoRemediation" BOOLEAN NOT NULL DEFAULT false,
    "escalationRules" JSONB,
    "useMLModel" BOOLEAN NOT NULL DEFAULT false,
    "mlModelId" UUID,
    "mlConfidenceThreshold" DECIMAL(3,2),
    "complianceFramework" VARCHAR(50)[],
    "regulatoryRequirement" VARCHAR(255),
    "auditFrequency" "AuditFrequency" NOT NULL DEFAULT 'MONTHLY',
    "lastAuditAt" TIMESTAMPTZ(6),
    "nextAuditAt" TIMESTAMPTZ(6),
    "triggerCount" INTEGER NOT NULL DEFAULT 0,
    "falsePositiveRate" DECIMAL(5,4),
    "truePositiveRate" DECIMAL(5,4),
    "lastTriggeredAt" TIMESTAMPTZ(6),
    "configuration" JSONB,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "FraudPolicy_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FraudPolicyRule" (
    "id" UUID NOT NULL,
    "status" "FraudRuleStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fraudPolicyId" UUID NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "ruleType" "FraudRuleType" NOT NULL DEFAULT 'THRESHOLD',
    "priority" INTEGER NOT NULL DEFAULT 100,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "condition" TEXT NOT NULL,
    "conditionType" "RuleConditionType" NOT NULL DEFAULT 'SQL',
    "operator" "RuleOperator" NOT NULL DEFAULT 'GREATER_THAN',
    "threshold" DECIMAL(15,4),
    "comparisonField" VARCHAR(100),
    "aggregationFunction" "AggregationFunction" NOT NULL DEFAULT 'SUM',
    "timeWindow" INTEGER,
    "frequency" "RuleFrequency" NOT NULL DEFAULT 'REAL_TIME',
    "lookbackPeriod" INTEGER,
    "riskScore" DECIMAL(3,2) NOT NULL DEFAULT 0.5,
    "action" "FraudAction" NOT NULL DEFAULT 'ALERT',
    "autoBlock" BOOLEAN NOT NULL DEFAULT false,
    "requiresReview" BOOLEAN NOT NULL DEFAULT true,
    "parentRuleId" UUID,
    "dependsOnRules" UUID[],
    "excludeRules" UUID[],
    "triggerCount" INTEGER NOT NULL DEFAULT 0,
    "falsePositiveCount" INTEGER NOT NULL DEFAULT 0,
    "truePositiveCount" INTEGER NOT NULL DEFAULT 0,
    "lastTriggeredAt" TIMESTAMPTZ(6),
    "averageProcessingTime" INTEGER,
    "useMLModel" BOOLEAN NOT NULL DEFAULT false,
    "mlModelId" UUID,
    "mlFeatures" VARCHAR(100)[],
    "mlThreshold" DECIMAL(3,2),
    "configuration" JSONB,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "FraudPolicyRule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FraudPolicyScope" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fraudPolicyId" UUID NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "scopeType" "ScopeType" NOT NULL DEFAULT 'ENTITY',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "entityType" VARCHAR(100),
    "entityIds" UUID[],
    "entityConditions" JSONB,
    "countries" VARCHAR(3)[],
    "regions" VARCHAR(50)[],
    "timezones" VARCHAR(50)[],
    "businessUnits" VARCHAR(100)[],
    "departments" VARCHAR(100)[],
    "costCenters" VARCHAR(50)[],
    "userIds" UUID[],
    "roleIds" UUID[],
    "memberIds" UUID[],
    "transactionTypes" VARCHAR(100)[],
    "amountRanges" JSONB,
    "currencyCodes" VARCHAR(3)[],
    "timeWindows" JSONB,
    "effectiveFrom" TIMESTAMPTZ(6),
    "effectiveTo" TIMESTAMPTZ(6),
    "channels" VARCHAR(100)[],
    "ipRanges" VARCHAR(45)[],
    "deviceTypes" VARCHAR(50)[],
    "includeFilters" JSONB,
    "excludeFilters" JSONB,
    "customLogic" TEXT,
    "priority" INTEGER NOT NULL DEFAULT 100,
    "cacheEnabled" BOOLEAN NOT NULL DEFAULT true,
    "cacheTtlSeconds" INTEGER NOT NULL DEFAULT 300,
    "configuration" JSONB,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "FraudPolicyScope_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "GLAccount" (
    "id" UUID NOT NULL,
    "status" "GLAccountStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "accountCode" VARCHAR(50) NOT NULL,
    "accountName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "accountType" "GLAccountType" NOT NULL,
    "accountCategory" "GLAccountCategory" NOT NULL,
    "normalBalance" VARCHAR(10) NOT NULL,
    "parentAccountId" UUID,
    "accountLevel" INTEGER NOT NULL DEFAULT 1,
    "fullPath" VARCHAR(500) NOT NULL,
    "isParentAccount" BOOLEAN NOT NULL DEFAULT false,
    "isDetailAccount" BOOLEAN NOT NULL DEFAULT true,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "requiresProject" BOOLEAN NOT NULL DEFAULT false,
    "requiresCostCode" BOOLEAN NOT NULL DEFAULT false,
    "allowManualEntry" BOOLEAN NOT NULL DEFAULT true,
    "isSystemAccount" BOOLEAN NOT NULL DEFAULT false,
    "baseCurrency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "allowMultiCurrency" BOOLEAN NOT NULL DEFAULT false,
    "isEstimatingAccount" BOOLEAN NOT NULL DEFAULT false,
    "isBillingAccount" BOOLEAN NOT NULL DEFAULT false,
    "isPayrollAccount" BOOLEAN NOT NULL DEFAULT false,
    "isProcurementAccount" BOOLEAN NOT NULL DEFAULT false,
    "currentBalance" DECIMAL(18,6),
    "ytdBalance" DECIMAL(18,6),
    "lastTransactionAt" TIMESTAMPTZ(6),

    CONSTRAINT "GLAccount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "GoodsReceipt" (
    "id" UUID NOT NULL,
    "status" "GoodsReceiptStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "receiptNumber" VARCHAR(50) NOT NULL,
    "purchaseOrderId" UUID,
    "vendorId" UUID NOT NULL,
    "receivedDate" DATE NOT NULL,
    "receivedBy" UUID,
    "deliveryNote" VARCHAR(100),
    "carrierName" VARCHAR(100),
    "trackingNumber" VARCHAR(100),
    "vehiclePlate" VARCHAR(20),
    "driverName" VARCHAR(100),
    "receivingLocation" VARCHAR(200),
    "warehouseLocation" VARCHAR(100),
    "storageLocation" VARCHAR(100),
    "inspectionRequired" BOOLEAN NOT NULL DEFAULT false,
    "inspectionStatus" "GoodsInspectionStatus",
    "inspectedBy" UUID,
    "inspectedAt" TIMESTAMPTZ(6),
    "qualityNotes" TEXT,
    "totalQuantity" DECIMAL(12,3),
    "totalValue" DECIMAL(15,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "isComplete" BOOLEAN NOT NULL DEFAULT false,
    "completedAt" TIMESTAMPTZ(6),
    "completedBy" UUID,
    "internalNotes" TEXT,
    "vendorNotes" TEXT,
    "discrepancyNotes" TEXT,

    CONSTRAINT "GoodsReceipt_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "GoodsReceiptLine" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "goodsReceiptId" UUID NOT NULL,
    "purchaseOrderLineId" UUID NOT NULL,
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "itemDescription" VARCHAR(500) NOT NULL,
    "itemCode" VARCHAR(50),
    "vendorPartNumber" VARCHAR(100),
    "orderedQuantity" DECIMAL(12,3) NOT NULL,
    "deliveredQuantity" DECIMAL(12,3) NOT NULL,
    "acceptedQuantity" DECIMAL(12,3) NOT NULL,
    "rejectedQuantity" DECIMAL(12,3) NOT NULL DEFAULT 0,
    "unitOfMeasure" "ProcurementUnitOfMeasure" NOT NULL DEFAULT 'EA',
    "batchNumber" VARCHAR(50),
    "lotNumber" VARCHAR(50),
    "serialNumbers" TEXT,
    "expiryDate" DATE,
    "manufacturingDate" DATE,
    "inspectionNotes" TEXT,
    "qualityGrade" "QualityGrade",
    "defectDescription" TEXT,
    "rejectionReason" TEXT,
    "storageLocation" VARCHAR(100),
    "binLocation" VARCHAR(50),
    "shelfLife" INTEGER,
    "storageConditions" VARCHAR(200),
    "unitCost" DECIMAL(12,2),
    "extendedCost" DECIMAL(15,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "quantityVariance" DECIMAL(12,3),
    "priceVariance" DECIMAL(12,2),
    "isProcessed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "processedBy" UUID,
    "internalNotes" TEXT,
    "vendorNotes" TEXT,

    CONSTRAINT "GoodsReceiptLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Grade" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "gradeCode" CITEXT NOT NULL,
    "gradeName" VARCHAR(100) NOT NULL,
    "gradeDescription" TEXT,
    "gradeLevel" INTEGER NOT NULL,
    "parentGradeId" UUID,
    "minSalary" DECIMAL(12,2),
    "midSalary" DECIMAL(12,2),
    "maxSalary" DECIMAL(12,2),
    "salaryBand" VARCHAR(50),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "promotionCriteria" JSONB,
    "competencyLevel" INTEGER DEFAULT 1,
    "experienceYears" INTEGER,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "Grade_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "HolidayCalendar" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "calendarName" VARCHAR(100) NOT NULL,
    "calendarDescription" TEXT,
    "calendarYear" INTEGER NOT NULL,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "HolidayCalendar_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IdentityProvider" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(100) NOT NULL,
    "displayName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "providerType" VARCHAR(50) NOT NULL,
    "protocol" VARCHAR(20) NOT NULL,
    "protocolVersion" VARCHAR(20),
    "configurationSchema" JSONB,
    "defaultConfiguration" JSONB,
    "supportsSSO" BOOLEAN NOT NULL DEFAULT true,
    "supportsProvisioning" BOOLEAN NOT NULL DEFAULT false,
    "supportsGroups" BOOLEAN NOT NULL DEFAULT false,
    "supportsJIT" BOOLEAN NOT NULL DEFAULT false,
    "requiresEncryption" BOOLEAN NOT NULL DEFAULT true,
    "supportsMFA" BOOLEAN NOT NULL DEFAULT false,
    "complianceLevel" "ComplianceLevel" NOT NULL DEFAULT 'STANDARD',
    "logoUrl" VARCHAR(500),
    "documentationUrl" VARCHAR(500),
    "supportUrl" VARCHAR(500),
    "vendorName" VARCHAR(100),
    "vendorWebsite" VARCHAR(255),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isDeprecated" BOOLEAN NOT NULL DEFAULT false,
    "deprecationDate" TIMESTAMPTZ(6),
    "endOfLifeDate" TIMESTAMPTZ(6),
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "IdentityProvider_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IdentityProviderConnection" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "identityProviderId" UUID NOT NULL,
    "name" VARCHAR(100) NOT NULL,
    "displayName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "configuration" JSONB NOT NULL,
    "clientId" VARCHAR(255),
    "clientSecretHash" VARCHAR(500),
    "entityId" VARCHAR(255),
    "ssoUrl" VARCHAR(500),
    "sloUrl" VARCHAR(500),
    "certificate" TEXT,
    "discoveryUrl" VARCHAR(500),
    "authorizationUrl" VARCHAR(500),
    "tokenUrl" VARCHAR(500),
    "userInfoUrl" VARCHAR(500),
    "userMapping" JSONB,
    "groupMapping" JSONB,
    "enableProvisioning" BOOLEAN NOT NULL DEFAULT false,
    "enableJIT" BOOLEAN NOT NULL DEFAULT false,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "allowedDomains" VARCHAR(100)[],
    "blockedDomains" VARCHAR(100)[],
    "lastTestedAt" TIMESTAMPTZ(6),
    "testStatus" VARCHAR(20) DEFAULT 'PENDING',
    "testError" TEXT,
    "lastUsedAt" TIMESTAMPTZ(6),
    "totalLogins" INTEGER NOT NULL DEFAULT 0,
    "activeUsers" INTEGER NOT NULL DEFAULT 0,
    "configuredByMemberId" UUID NOT NULL,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "IdentityProviderConnection_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InAppAnnouncement" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "InAppAnnouncement_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Inspection" (
    "id" UUID NOT NULL,
    "status" "InspectionStatus" NOT NULL DEFAULT 'SCHEDULED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "inspectionType" TEXT NOT NULL,
    "scheduledDate" DATE,
    "actualDate" DATE,
    "inspectorId" UUID,
    "notes" TEXT,
    "passed" BOOLEAN,
    "projectId" UUID NOT NULL,

    CONSTRAINT "Inspection_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InspectionApproval" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "decision" "InspectionApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "approverId" UUID,
    "requestedAt" TIMESTAMPTZ(6),
    "decidedAt" TIMESTAMPTZ(6),
    "comments" TEXT,
    "inspectionId" UUID NOT NULL,

    CONSTRAINT "InspectionApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InspectionItem" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "itemNumber" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "requirement" TEXT NOT NULL,
    "passed" BOOLEAN,
    "comments" TEXT,
    "deficiency" TEXT,
    "inspectionId" UUID NOT NULL,

    CONSTRAINT "InspectionItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IntegrationConnection" (
    "id" UUID NOT NULL,
    "status" "IntegrationConnectionStatus" NOT NULL DEFAULT 'INACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "integrationConnectorId" UUID NOT NULL,
    "connectionName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "externalConnectionId" VARCHAR(255),
    "connectionStatus" "IntegrationConnectionStatus" NOT NULL DEFAULT 'INACTIVE',
    "healthStatus" "ConnectionHealthStatus" NOT NULL DEFAULT 'UNKNOWN',
    "lastSuccessfulConnect" TIMESTAMPTZ(6),
    "lastFailedConnect" TIMESTAMPTZ(6),
    "consecutiveFailures" INTEGER NOT NULL DEFAULT 0,
    "primaryTokenType" "TokenType",
    "tokenExpiresAt" TIMESTAMPTZ(6),
    "refreshTokenExpiresAt" TIMESTAMPTZ(6),
    "lastTokenRefresh" TIMESTAMPTZ(6),
    "authorizationScopes" TEXT,
    "userAgent" VARCHAR(255),
    "apiEndpoint" VARCHAR(500),
    "apiVersion" VARCHAR(50),
    "connectionParameters" TEXT,
    "externalUserId" VARCHAR(255),
    "externalUserEmail" VARCHAR(255),
    "externalAccountName" VARCHAR(255),
    "externalCompanyId" VARCHAR(255),
    "averageResponseTime" INTEGER,
    "totalRequests" BIGINT NOT NULL DEFAULT 0,
    "successfulRequests" BIGINT NOT NULL DEFAULT 0,
    "failedRequests" BIGINT NOT NULL DEFAULT 0,
    "lastRequestAt" TIMESTAMPTZ(6),
    "currentRateLimit" INTEGER,
    "remainingRequests" INTEGER,
    "rateLimitResetAt" TIMESTAMPTZ(6),
    "isThrottled" BOOLEAN NOT NULL DEFAULT false,
    "maxPoolSize" INTEGER DEFAULT 10,
    "currentPoolSize" INTEGER DEFAULT 0,
    "activeConnections" INTEGER DEFAULT 0,
    "idleTimeout" INTEGER DEFAULT 300,
    "lastSyncAt" TIMESTAMPTZ(6),
    "nextSyncAt" TIMESTAMPTZ(6),
    "syncFrequency" VARCHAR(50),
    "totalSyncJobs" INTEGER NOT NULL DEFAULT 0,
    "lastError" TEXT,
    "lastErrorAt" TIMESTAMPTZ(6),
    "errorRecoveryAttempts" INTEGER NOT NULL DEFAULT 0,
    "maxRetryAttempts" INTEGER DEFAULT 3,
    "webhookUrl" VARCHAR(500),
    "webhookSecret" VARCHAR(255),
    "webhookEventsEnabled" TEXT,
    "lastWebhookReceived" TIMESTAMPTZ(6),

    CONSTRAINT "IntegrationConnection_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IntegrationConnector" (
    "id" UUID NOT NULL,
    "status" "IntegrationConnectorStatus" NOT NULL DEFAULT 'ENABLED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "integrationProviderId" UUID NOT NULL,
    "connectorName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "environment" "IntegrationEnvironment" NOT NULL DEFAULT 'PRODUCTION',
    "syncDirection" "DataSyncDirection" NOT NULL DEFAULT 'BIDIRECTIONAL',
    "isTestMode" BOOLEAN NOT NULL DEFAULT false,
    "configurationData" TEXT,
    "enabledCapabilities" TEXT,
    "allowedScopes" TEXT,
    "restrictedOperations" TEXT,
    "primaryRegion" VARCHAR(50),
    "allowedRegions" TEXT,
    "dataResidency" VARCHAR(100),
    "customRateLimits" TEXT,
    "priorityLevel" VARCHAR(20),
    "maxConcurrentJobs" INTEGER DEFAULT 5,
    "approvedById" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "approvalNotes" TEXT,
    "nextReviewDate" DATE,
    "enableMonitoring" BOOLEAN NOT NULL DEFAULT true,
    "alertOnFailure" BOOLEAN NOT NULL DEFAULT true,
    "alertThreshold" INTEGER DEFAULT 3,
    "notificationEmails" TEXT,
    "businessOwnerEmail" VARCHAR(255),
    "technicalOwnerEmail" VARCHAR(255),
    "businessJustification" TEXT,
    "complianceNotes" TEXT,
    "lastHealthCheck" TIMESTAMPTZ(6),
    "nextMaintenanceWindow" TIMESTAMPTZ(6),
    "scheduledDeletion" TIMESTAMPTZ(6),
    "migrationPlan" TEXT,

    CONSTRAINT "IntegrationConnector_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IntegrationMapping" (
    "id" UUID NOT NULL,
    "status" "MappingStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "integrationConnectionId" UUID NOT NULL,
    "mappingName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "mappingType" "MappingType" NOT NULL,
    "mappingDirection" "MappingDirection" NOT NULL DEFAULT 'BIDIRECTIONAL',
    "sourceEntity" VARCHAR(100) NOT NULL,
    "sourceField" VARCHAR(100) NOT NULL,
    "sourceDataType" "DataType" NOT NULL,
    "targetEntity" VARCHAR(100) NOT NULL,
    "targetField" VARCHAR(100) NOT NULL,
    "targetDataType" "DataType" NOT NULL,
    "transformationRules" TEXT,
    "defaultValue" TEXT,
    "nullHandling" VARCHAR(50),
    "emptyValueHandling" VARCHAR(50),
    "validationRules" TEXT,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "minLength" INTEGER,
    "maxLength" INTEGER,
    "validationPattern" VARCHAR(500),
    "customValidation" TEXT,
    "lookupTable" TEXT,
    "fallbackValue" TEXT,
    "caseSensitive" BOOLEAN NOT NULL DEFAULT true,
    "allowPartialMatch" BOOLEAN NOT NULL DEFAULT false,
    "conditionExpression" TEXT,
    "conditionalMappings" TEXT,
    "elseValue" TEXT,
    "isCacheable" BOOLEAN NOT NULL DEFAULT false,
    "cacheExpiryMinutes" INTEGER DEFAULT 60,
    "batchProcessing" BOOLEAN NOT NULL DEFAULT false,
    "batchSize" INTEGER DEFAULT 100,
    "mappingVersion" VARCHAR(20) NOT NULL DEFAULT '1.0',
    "previousVersion" VARCHAR(20),
    "versionNotes" TEXT,
    "isBreakingChange" BOOLEAN NOT NULL DEFAULT false,
    "errorHandlingStrategy" VARCHAR(50),
    "maxErrors" INTEGER DEFAULT 10,
    "errorLogLevel" VARCHAR(20),
    "lastUsedAt" TIMESTAMPTZ(6),
    "usageCount" INTEGER NOT NULL DEFAULT 0,
    "successCount" INTEGER NOT NULL DEFAULT 0,
    "errorCount" INTEGER NOT NULL DEFAULT 0,
    "averageProcessingTime" INTEGER,
    "dependsOnMappings" TEXT,
    "referencedByMappings" TEXT,
    "externalReferences" TEXT,
    "testCases" TEXT,
    "lastTestResult" VARCHAR(50),
    "lastTestDate" TIMESTAMPTZ(6),
    "testNotes" TEXT,

    CONSTRAINT "IntegrationMapping_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IntegrationProvider" (
    "id" UUID NOT NULL,
    "status" "IntegrationProviderStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "providerName" VARCHAR(100) NOT NULL,
    "providerCode" VARCHAR(50) NOT NULL,
    "description" TEXT,
    "logoUrl" VARCHAR(500),
    "websiteUrl" VARCHAR(500),
    "documentationUrl" VARCHAR(500),
    "supportUrl" VARCHAR(500),
    "category" "IntegrationCategory" NOT NULL,
    "authenticationType" "AuthenticationType" NOT NULL,
    "capabilities" TEXT,
    "apiVersion" VARCHAR(20),
    "baseApiUrl" VARCHAR(500) NOT NULL,
    "supportedRegions" TEXT,
    "supportedCountries" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "isEnterprise" BOOLEAN NOT NULL DEFAULT false,
    "rateLimitPerMinute" INTEGER,
    "rateLimitPerHour" INTEGER,
    "rateLimitPerDay" INTEGER,
    "maxConnections" INTEGER,
    "dataRetentionDays" INTEGER,
    "requiresEncryption" BOOLEAN NOT NULL DEFAULT true,
    "supportsSSO" BOOLEAN NOT NULL DEFAULT false,
    "complianceStandards" TEXT,
    "securityCertifications" TEXT,
    "contactEmail" VARCHAR(255),
    "contactPhone" VARCHAR(50),
    "timezone" VARCHAR(50),
    "maintenanceWindow" TEXT,
    "currentVersion" VARCHAR(20),
    "latestVersion" VARCHAR(20),
    "deprecatedVersions" TEXT,
    "migrationGuideUrl" VARCHAR(500),
    "totalConnections" INTEGER NOT NULL DEFAULT 0,
    "activeConnections" INTEGER NOT NULL DEFAULT 0,
    "averageResponseTime" INTEGER,
    "uptimePercentage" DECIMAL(5,2),
    "lastStatusCheck" TIMESTAMPTZ(6),

    CONSTRAINT "IntegrationProvider_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "IntegrationSecret" (
    "id" UUID NOT NULL,
    "status" "SecretStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'RESTRICTED',
    "retentionPolicy" "RetentionPolicy",
    "integrationConnectionId" UUID NOT NULL,
    "secretType" "SecretType" NOT NULL,
    "secretName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "encryptedValue" TEXT NOT NULL,
    "encryptionMethod" "EncryptionMethod" NOT NULL DEFAULT 'AES_256_GCM',
    "encryptionKeyId" VARCHAR(255),
    "saltValue" VARCHAR(255),
    "secretStatus" "SecretStatus" NOT NULL DEFAULT 'ACTIVE',
    "issuedAt" TIMESTAMPTZ(6),
    "expiresAt" TIMESTAMPTZ(6),
    "lastRotated" TIMESTAMPTZ(6),
    "nextRotationDue" TIMESTAMPTZ(6),
    "allowedEnvironments" TEXT,
    "allowedIPs" TEXT,
    "maxUsageCount" INTEGER,
    "currentUsageCount" INTEGER NOT NULL DEFAULT 0,
    "lastUsedAt" TIMESTAMPTZ(6),
    "rotationEnabled" BOOLEAN NOT NULL DEFAULT true,
    "rotationIntervalDays" INTEGER DEFAULT 90,
    "gracePeriodDays" INTEGER DEFAULT 7,
    "backupSecretId" UUID,
    "externalSecretId" VARCHAR(255),
    "externalSecretVersion" VARCHAR(50),
    "providerMetadata" TEXT,
    "accessLogEnabled" BOOLEAN NOT NULL DEFAULT true,
    "complianceClassification" VARCHAR(50),
    "retentionDays" INTEGER DEFAULT 2555,
    "piiContained" BOOLEAN NOT NULL DEFAULT false,
    "lastAccessedAt" TIMESTAMPTZ(6),
    "accessCount" INTEGER NOT NULL DEFAULT 0,
    "failedAccessAttempts" INTEGER NOT NULL DEFAULT 0,
    "lastFailedAccessAt" TIMESTAMPTZ(6),
    "hasBackup" BOOLEAN NOT NULL DEFAULT false,
    "backupLocation" VARCHAR(255),
    "recoveryKeyId" VARCHAR(255),
    "emergencyAccessEnabled" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "IntegrationSecret_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryAdjustment" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "adjustmentNumber" VARCHAR(50) NOT NULL,
    "adjustmentDate" TIMESTAMPTZ(6) NOT NULL,
    "adjustmentType" VARCHAR(50) NOT NULL,
    "reasonCode" VARCHAR(50) NOT NULL,
    "description" VARCHAR(500),
    "quantityBefore" DECIMAL(12,4) NOT NULL,
    "quantityAfter" DECIMAL(12,4) NOT NULL,
    "adjustmentQuantity" DECIMAL(12,4) NOT NULL,
    "unitCost" DECIMAL(12,4),
    "totalCostImpact" DECIMAL(12,4),
    "inventoryItemId" UUID NOT NULL,
    "locationId" UUID,
    "approvedBy" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "approvalNotes" TEXT,

    CONSTRAINT "InventoryAdjustment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryAttachment" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" VARCHAR(255) NOT NULL,
    "fileType" VARCHAR(100) NOT NULL,
    "fileSize" INTEGER NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "description" VARCHAR(500),
    "attachmentType" VARCHAR(50) NOT NULL DEFAULT 'DOCUMENT',
    "inventoryItemId" UUID NOT NULL,

    CONSTRAINT "InventoryAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryBin" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "binCode" VARCHAR(50) NOT NULL,
    "binName" VARCHAR(255),
    "binType" VARCHAR(50) NOT NULL DEFAULT 'STANDARD',
    "aisle" VARCHAR(20),
    "rack" VARCHAR(20),
    "shelf" VARCHAR(20),
    "position" VARCHAR(20),
    "maxWeight" DECIMAL(10,4),
    "maxVolume" DECIMAL(10,4),
    "currentWeight" DECIMAL(10,4) NOT NULL DEFAULT 0,
    "currentVolume" DECIMAL(10,4) NOT NULL DEFAULT 0,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "allowMixedItems" BOOLEAN NOT NULL DEFAULT true,
    "requiresCount" BOOLEAN NOT NULL DEFAULT false,
    "locationId" UUID NOT NULL,

    CONSTRAINT "InventoryBin_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryCount" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "countNumber" VARCHAR(50) NOT NULL,
    "countType" VARCHAR(50) NOT NULL,
    "countDate" TIMESTAMPTZ(6) NOT NULL,
    "scheduledDate" TIMESTAMPTZ(6),
    "completedDate" TIMESTAMPTZ(6),
    "countStatus" VARCHAR(20) NOT NULL DEFAULT 'PLANNED',
    "totalItems" INTEGER NOT NULL DEFAULT 0,
    "countedItems" INTEGER NOT NULL DEFAULT 0,
    "varianceItems" INTEGER NOT NULL DEFAULT 0,
    "locationId" UUID,
    "assignedTo" UUID,
    "supervisorId" UUID,
    "instructions" TEXT,
    "notes" TEXT,

    CONSTRAINT "InventoryCount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryCountLine" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "countedDate" TIMESTAMPTZ(6),
    "countedBy" UUID,
    "systemQuantity" DECIMAL(12,4) NOT NULL,
    "countedQuantity" DECIMAL(12,4),
    "varianceQuantity" DECIMAL(12,4),
    "variancePercent" DECIMAL(5,2),
    "inventoryItemId" UUID NOT NULL,
    "binLocation" VARCHAR(100),
    "lotNumber" VARCHAR(100),
    "serialNumber" VARCHAR(100),
    "lineStatus" VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    "notes" TEXT,
    "requiresRecount" BOOLEAN NOT NULL DEFAULT false,
    "inventoryCountId" UUID NOT NULL,

    CONSTRAINT "InventoryCountLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryItem" (
    "id" UUID NOT NULL,
    "status" "InventoryItemStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "itemCode" VARCHAR(50) NOT NULL,
    "itemName" VARCHAR(255) NOT NULL,
    "category" VARCHAR(100),
    "subcategory" VARCHAR(100),
    "unitOfMeasure" VARCHAR(20) NOT NULL,
    "currentStock" DECIMAL(12,4) NOT NULL DEFAULT 0,
    "minimumStock" DECIMAL(12,4),
    "maximumStock" DECIMAL(12,4),
    "reorderPoint" DECIMAL(12,4),
    "reorderQuantity" DECIMAL(12,4),
    "lastStockUpdate" TIMESTAMPTZ(6),
    "unitCost" DECIMAL(12,4),
    "averageCost" DECIMAL(12,4),
    "lastCost" DECIMAL(12,4),
    "weight" DECIMAL(10,4),
    "dimensions" VARCHAR(100),
    "serialTracked" BOOLEAN NOT NULL DEFAULT false,
    "lotTracked" BOOLEAN NOT NULL DEFAULT false,
    "taxable" BOOLEAN NOT NULL DEFAULT true,
    "purchasable" BOOLEAN NOT NULL DEFAULT true,
    "sellable" BOOLEAN NOT NULL DEFAULT true,
    "manufacturable" BOOLEAN NOT NULL DEFAULT false,
    "hazardous" BOOLEAN NOT NULL DEFAULT false,
    "controlled" BOOLEAN NOT NULL DEFAULT false,
    "regulatoryCode" VARCHAR(50),
    "msdsRequired" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "InventoryItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryLocation" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "locationCode" CITEXT NOT NULL,
    "locationName" VARCHAR(255) NOT NULL,
    "locationType" VARCHAR(50) NOT NULL,
    "description" VARCHAR(500),
    "address1" VARCHAR(255),
    "address2" VARCHAR(255),
    "city" VARCHAR(100),
    "state" VARCHAR(50),
    "postalCode" VARCHAR(20),
    "country" VARCHAR(50),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "allowReceiving" BOOLEAN NOT NULL DEFAULT true,
    "allowShipping" BOOLEAN NOT NULL DEFAULT true,
    "requiresBin" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "InventoryLocation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryReservation" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "reservationNumber" VARCHAR(50) NOT NULL,
    "reservationType" VARCHAR(50) NOT NULL,
    "reservationDate" TIMESTAMPTZ(6) NOT NULL,
    "requiredDate" TIMESTAMPTZ(6),
    "expirationDate" TIMESTAMPTZ(6),
    "reservedQuantity" DECIMAL(12,4) NOT NULL,
    "allocatedQuantity" DECIMAL(12,4) NOT NULL DEFAULT 0,
    "fulfilledQuantity" DECIMAL(12,4) NOT NULL DEFAULT 0,
    "inventoryItemId" UUID NOT NULL,
    "referenceType" VARCHAR(50) NOT NULL,
    "referenceId" UUID NOT NULL,
    "referenceLineId" UUID,
    "priority" VARCHAR(20) NOT NULL DEFAULT 'NORMAL',
    "notes" TEXT,

    CONSTRAINT "InventoryReservation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryTransaction" (
    "id" UUID NOT NULL,
    "status" "InventoryTransactionStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "transactionType" "InventoryTransactionType" NOT NULL,
    "transactionNumber" VARCHAR(50) NOT NULL,
    "transactionDate" TIMESTAMPTZ(6) NOT NULL,
    "quantity" DECIMAL(12,4) NOT NULL,
    "unitCost" DECIMAL(12,4),
    "totalCost" DECIMAL(12,4),
    "inventoryItemId" UUID NOT NULL,
    "locationId" UUID,
    "referenceType" VARCHAR(50),
    "referenceId" UUID,
    "reasonCode" VARCHAR(50),
    "notes" TEXT,
    "lotNumber" VARCHAR(100),
    "serialNumber" VARCHAR(100),
    "expirationDate" DATE,

    CONSTRAINT "InventoryTransaction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InventoryTransactionChain" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'HIGHLY_SENSITIVE',
    "retentionPolicy" "RetentionPolicy",
    "transactionId" UUID NOT NULL,
    "chainSequence" INTEGER NOT NULL,
    "blockNumber" INTEGER NOT NULL,
    "previousHash" VARCHAR(64),
    "transactionHash" VARCHAR(64) NOT NULL,
    "merkleRoot" VARCHAR(64),
    "hashAlgorithm" VARCHAR(20) NOT NULL DEFAULT 'SHA256',
    "signatureHash" VARCHAR(128),
    "witnessHash" VARCHAR(64),
    "verificationStatus" VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    "chainVersion" VARCHAR(10) NOT NULL DEFAULT '1.0',
    "consensusProof" TEXT,
    "timestampProof" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "nonce" VARCHAR(32),
    "difficulty" INTEGER NOT NULL DEFAULT 1,
    "isValid" BOOLEAN NOT NULL DEFAULT true,
    "validatedAt" TIMESTAMPTZ(6),
    "validatedBy" UUID,
    "invalidationReason" TEXT,
    "batchId" UUID,
    "processingTime" INTEGER,
    "gasUsed" INTEGER,

    CONSTRAINT "InventoryTransactionChain_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Invoice" (
    "id" UUID NOT NULL,
    "status" "InvoiceStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceNumber" CITEXT NOT NULL,
    "documentGroupId" UUID,
    "subtotal" DECIMAL(12,2) NOT NULL,
    "taxAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "discountAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "totalAmount" DECIMAL(12,2) NOT NULL,
    "balanceAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "currencyEnum" "CurrencyCode",
    "exchangeRate" DECIMAL(10,6),
    "invoiceDate" DATE NOT NULL,
    "dueDate" DATE NOT NULL,
    "servicePeriodStart" DATE,
    "servicePeriodEnd" DATE,
    "paymentTermId" UUID,
    "netDays" INTEGER NOT NULL DEFAULT 30,
    "discountPercent" DECIMAL(5,2),
    "discountDays" INTEGER,
    "sentDate" TIMESTAMPTZ(6),
    "paidDate" TIMESTAMPTZ(6),
    "lastPaymentDate" TIMESTAMPTZ(6),
    "overdueDate" DATE,
    "dunningLevel" "DunningLevel" DEFAULT 'FIRST_NOTICE',
    "lastDunningDate" DATE,
    "projectId" UUID,
    "estimateId" UUID,
    "accountId" UUID NOT NULL,
    "contactId" UUID,
    "billToName" VARCHAR(255),
    "billToAddress1" VARCHAR(255),
    "billToAddress2" VARCHAR(255),
    "billToCity" VARCHAR(100),
    "billToState" VARCHAR(50),
    "billToPostalCode" VARCHAR(20),
    "billToCountry" VARCHAR(50),
    "description" TEXT,
    "internalNotes" TEXT,
    "customerNotes" TEXT,
    "poNumber" VARCHAR(100),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedByMemberId" UUID,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "Invoice_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InvoiceAttachment" (
    "id" UUID NOT NULL,
    "status" "InvoiceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceId" UUID NOT NULL,
    "attachmentSequence" INTEGER NOT NULL,
    "fileName" VARCHAR(255) NOT NULL,
    "fileUrl" VARCHAR(500) NOT NULL,
    "mimeType" VARCHAR(100),
    "fileSize" INTEGER,
    "checksum" VARCHAR(64),
    "documentType" VARCHAR(50) NOT NULL DEFAULT 'SUPPORTING',
    "category" VARCHAR(100),
    "description" TEXT,
    "isPublic" BOOLEAN NOT NULL DEFAULT false,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "uploadedById" UUID NOT NULL,
    "uploadedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "metadata" JSONB,

    CONSTRAINT "InvoiceAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InvoiceLineItem" (
    "id" UUID NOT NULL,
    "status" "InvoiceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceId" UUID NOT NULL,
    "lineNumber" INTEGER NOT NULL,
    "itemType" "InvoiceLineItemType" NOT NULL DEFAULT 'SERVICE',
    "itemCode" VARCHAR(50),
    "description" TEXT NOT NULL,
    "detailedDescription" TEXT,
    "quantity" DECIMAL(10,4) NOT NULL,
    "unitOfMeasure" VARCHAR(20),
    "unitPrice" DECIMAL(12,4) NOT NULL,
    "lineAmount" DECIMAL(12,2) NOT NULL,
    "discountPercent" DECIMAL(5,2),
    "discountAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "netAmount" DECIMAL(12,2) NOT NULL,
    "taxable" BOOLEAN NOT NULL DEFAULT true,
    "taxCode" VARCHAR(20),
    "taxPercent" DECIMAL(5,2),
    "taxAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "sourceType" VARCHAR(50),
    "sourceEstimateLineId" UUID,
    "sourceProjectTaskId" UUID,
    "sourceChangeOrderLineId" UUID,
    "costCode" VARCHAR(50),
    "costCenter" VARCHAR(50),
    "glAccountCode" VARCHAR(50),
    "servicePeriodStart" DATE,
    "servicePeriodEnd" DATE,
    "notes" TEXT,
    "customerNotes" TEXT,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "InvoiceLineItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InvoicePayment" (
    "id" UUID NOT NULL,
    "status" "InvoiceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "appliedAmount" DECIMAL(12,2) NOT NULL,
    "appliedAt" TIMESTAMPTZ(6) NOT NULL,
    "reference" TEXT,
    "paymentId" UUID NOT NULL,
    "invoiceId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "InvoicePayment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InvoiceTax" (
    "id" UUID NOT NULL,
    "status" "InvoiceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceId" UUID NOT NULL,
    "taxSequence" INTEGER NOT NULL,
    "taxName" VARCHAR(100) NOT NULL,
    "taxCode" VARCHAR(20),
    "taxType" "InvoiceTaxType" NOT NULL DEFAULT 'SALES',
    "taxableAmount" DECIMAL(12,2) NOT NULL,
    "taxRate" DECIMAL(5,4) NOT NULL,
    "taxAmount" DECIMAL(12,2) NOT NULL,
    "jurisdiction" VARCHAR(100),
    "jurisdictionLevel" VARCHAR(20),
    "taxAccountCode" VARCHAR(50),
    "reportingCategory" VARCHAR(50),
    "metadata" JSONB,

    CONSTRAINT "InvoiceTax_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JobFamily" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "familyCode" CITEXT NOT NULL,
    "familyName" VARCHAR(100) NOT NULL,
    "familyDescription" TEXT,
    "parentFamilyId" UUID,
    "familyLevel" INTEGER NOT NULL DEFAULT 1,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "careerPath" JSONB,
    "skillCategories" JSONB,
    "competencyModel" JSONB,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,

    CONSTRAINT "JobFamily_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JobProfile" (
    "id" UUID NOT NULL,
    "status" "JobProfileStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "jobCode" CITEXT NOT NULL,
    "jobTitle" VARCHAR(100) NOT NULL,
    "jobSummary" TEXT,
    "jobDescription" TEXT,
    "jobFamilyId" UUID,
    "jobLevel" "JobLevel",
    "education" VARCHAR(100),
    "experience" VARCHAR(200),
    "skills" JSONB,
    "certifications" JSONB,
    "flsaClassification" "FLSAClassification" DEFAULT 'NON_EXEMPT',
    "payGradeId" UUID,
    "minSalary" DECIMAL(12,2),
    "maxSalary" DECIMAL(12,2),
    "targetSalary" DECIMAL(12,2),
    "workLocation" "WorkLocation" DEFAULT 'OFFICE',
    "travelRequired" INTEGER DEFAULT 0,
    "physicalDemands" TEXT,
    "workingConditions" TEXT,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "JobProfile_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JobProfileAssignment" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "jobProfileId" UUID NOT NULL,
    "assignmentType" "AssignmentType" NOT NULL DEFAULT 'PRIMARY',
    "startDate" DATE NOT NULL,
    "endDate" DATE,
    "isPrimary" BOOLEAN NOT NULL DEFAULT true,
    "proficiencyLevel" VARCHAR(20),
    "certificationRequired" BOOLEAN NOT NULL DEFAULT false,
    "certificationDate" DATE,
    "certificationExpiry" DATE,
    "complianceStatus" VARCHAR(20),
    "performanceRating" "PerformanceRating",
    "developmentPlan" JSONB,
    "trainingRequired" BOOLEAN NOT NULL DEFAULT false,
    "assignmentReason" VARCHAR(100),
    "assignmentNotes" TEXT,
    "effectiveDate" DATE NOT NULL,
    "endDateEffective" DATE,

    CONSTRAINT "JobProfileAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JobRun" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'QUEUED',
    "statusEnum" "JobRunStatus" DEFAULT 'QUEUED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "scheduleId" UUID,
    "runNumber" INTEGER NOT NULL DEFAULT 1,
    "priority" "JobPriority" NOT NULL DEFAULT 'NORMAL',
    "attempt" INTEGER NOT NULL DEFAULT 1,
    "maxRetries" INTEGER DEFAULT 3,
    "retryStrategy" "RetryStrategy" NOT NULL DEFAULT 'LINEAR',
    "retryDelaySeconds" INTEGER DEFAULT 60,
    "queuedAt" TIMESTAMPTZ(6),
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "durationMs" INTEGER,
    "nodeId" VARCHAR(100),
    "workerId" VARCHAR(100),
    "errorCode" VARCHAR(100),
    "errorMessage" TEXT,
    "outputData" TEXT,
    "logs" TEXT,
    "metadata" JSONB,

    CONSTRAINT "JobRun_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JobSchedule" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "statusEnum" "JobScheduleStatus" DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "cronExpression" VARCHAR(100),
    "timezone" VARCHAR(50),
    "priority" "JobPriority" NOT NULL DEFAULT 'NORMAL',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "concurrencyLimit" INTEGER NOT NULL DEFAULT 1,
    "maxRetries" INTEGER DEFAULT 3,
    "retryStrategy" "RetryStrategy" NOT NULL DEFAULT 'LINEAR',
    "retryDelaySeconds" INTEGER DEFAULT 60,
    "backoffFactor" DOUBLE PRECISION DEFAULT 2.0,
    "backoffMaxSeconds" INTEGER,
    "jitterSeconds" INTEGER,
    "lockOwner" UUID,
    "lockExpiresAt" TIMESTAMPTZ(6),
    "lastRunAt" TIMESTAMPTZ(6),
    "nextRunAt" TIMESTAMPTZ(6),
    "lastRunStatus" VARCHAR(20),
    "targetService" VARCHAR(100),
    "payload" TEXT,
    "tags" VARCHAR(50)[],
    "metadata" JSONB,

    CONSTRAINT "JobSchedule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JournalEntry" (
    "id" UUID NOT NULL,
    "status" "JournalEntryStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "entryNumber" VARCHAR(50) NOT NULL,
    "description" TEXT NOT NULL,
    "entryType" "JournalEntryType" NOT NULL DEFAULT 'STANDARD',
    "sourceModule" "JournalEntrySource" NOT NULL DEFAULT 'MANUAL',
    "referenceNumber" VARCHAR(100),
    "entryDate" DATE NOT NULL,
    "postingDate" DATE,
    "periodYear" INTEGER NOT NULL,
    "periodMonth" INTEGER NOT NULL,
    "totalDebit" DECIMAL(18,6) NOT NULL DEFAULT 0,
    "totalCredit" DECIMAL(18,6) NOT NULL DEFAULT 0,
    "isBalanced" BOOLEAN NOT NULL DEFAULT false,
    "sourceEntityType" VARCHAR(100),
    "sourceEntityId" UUID,
    "originalEntryId" UUID,
    "baseCurrency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "approvalNotes" TEXT,
    "projectId" UUID,

    CONSTRAINT "JournalEntry_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "JournalLine" (
    "id" UUID NOT NULL,
    "status" "JournalLineStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "journalEntryId" UUID NOT NULL,
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "glAccountId" UUID NOT NULL,
    "debitAmount" DECIMAL(18,6) NOT NULL DEFAULT 0,
    "creditAmount" DECIMAL(18,6) NOT NULL DEFAULT 0,
    "amount" DECIMAL(18,6) NOT NULL,
    "indicator" "DebitCreditIndicator" NOT NULL,
    "projectId" UUID,
    "costCodeId" UUID,
    "departmentId" UUID,
    "vendorId" UUID,
    "customerId" UUID,
    "employeeId" UUID,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "functionalAmount" DECIMAL(18,6),
    "taxRate" DECIMAL(5,4),
    "taxAmount" DECIMAL(18,6),
    "taxJurisdictionId" UUID,
    "taxRateId" UUID,
    "description" TEXT NOT NULL,
    "reference" VARCHAR(255),
    "memo" TEXT,
    "sourceDocumentType" VARCHAR(100),
    "sourceDocumentId" UUID,
    "sourceLineId" UUID,

    CONSTRAINT "JournalLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "KPIAggregate" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "kpiCode" VARCHAR(100) NOT NULL,
    "periodStart" DATE NOT NULL,
    "periodEnd" DATE,
    "function" "AggregationFunction",
    "value" DECIMAL(15,2) NOT NULL,
    "count" INTEGER,
    "unit" VARCHAR(20),
    "breakdown" JSONB,
    "cubeId" UUID,
    "partitionId" UUID,

    CONSTRAINT "KPIAggregate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Label" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "Label_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Lead" (
    "id" UUID NOT NULL,
    "status" "LeadStatus" NOT NULL DEFAULT 'NEW',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "firstName" VARCHAR(100) NOT NULL,
    "lastName" VARCHAR(100) NOT NULL,
    "email" CITEXT,
    "phone" VARCHAR(20),
    "mobile" VARCHAR(20),
    "companyName" VARCHAR(255),
    "jobTitle" VARCHAR(100),
    "industry" VARCHAR(100),
    "source" VARCHAR(100),
    "campaign" VARCHAR(100),
    "leadScore" INTEGER,
    "estimatedValue" DECIMAL(12,2),
    "expectedCloseDate" DATE,
    "notes" TEXT,
    "rating" TEXT,
    "converted" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "Lead_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LeadActivity" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "leadId" UUID NOT NULL,
    "activityType" VARCHAR(50) NOT NULL,
    "description" TEXT,
    "activityAt" TIMESTAMPTZ(6) NOT NULL,

    CONSTRAINT "LeadActivity_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Leave" (
    "id" UUID NOT NULL,
    "status" "LeaveStatus" NOT NULL DEFAULT 'REQUESTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "leaveType" "LeaveType" NOT NULL,
    "requestDate" DATE NOT NULL,
    "startDate" DATE NOT NULL,
    "endDate" DATE NOT NULL,
    "returnDate" DATE,
    "totalDays" DECIMAL(5,2) NOT NULL,
    "totalHours" DECIMAL(8,2),
    "requestedById" UUID NOT NULL,
    "approvedById" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "deniedReason" TEXT,
    "reason" TEXT,
    "isRecurring" BOOLEAN NOT NULL DEFAULT false,
    "parentLeaveId" UUID,
    "isFMLA" BOOLEAN NOT NULL DEFAULT false,
    "doctorNote" BOOLEAN NOT NULL DEFAULT false,
    "returnToWorkNote" BOOLEAN NOT NULL DEFAULT false,
    "isPaid" BOOLEAN NOT NULL DEFAULT true,
    "payPercentage" DECIMAL(5,2) NOT NULL DEFAULT 100,

    CONSTRAINT "Leave_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LeaveOfAbsence" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "LeaveOfAbsence_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LegalHold" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "LegalHold_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Location" (
    "id" UUID NOT NULL,
    "status" "LocationStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "locationCode" CITEXT NOT NULL,
    "locationName" VARCHAR(100) NOT NULL,
    "locationDescription" TEXT,
    "locationType" "LocationType" NOT NULL DEFAULT 'OFFICE',
    "addressLine1" VARCHAR(255) NOT NULL,
    "addressLine2" VARCHAR(255),
    "city" VARCHAR(100) NOT NULL,
    "stateProvince" VARCHAR(100) NOT NULL,
    "postalCode" VARCHAR(20) NOT NULL,
    "country" VARCHAR(100) NOT NULL,
    "latitude" DECIMAL(10,8),
    "longitude" DECIMAL(11,8),
    "timeZone" VARCHAR(50),
    "primaryPhone" VARCHAR(50),
    "secondaryPhone" VARCHAR(50),
    "faxNumber" VARCHAR(50),
    "email" CITEXT,
    "website" VARCHAR(500),
    "isHeadquarters" BOOLEAN NOT NULL DEFAULT false,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "capacity" INTEGER,
    "squareFootage" INTEGER,
    "floorCount" INTEGER,
    "parkingSpaces" INTEGER,
    "managerId" UUID,
    "facilityManagerId" UUID,
    "monthlyRent" DECIMAL(12,2),
    "currency" "CurrencyCode" NOT NULL DEFAULT 'USD',
    "costCenterId" UUID,
    "safetyRating" "SafetyRating" DEFAULT 'NOT_RATED',
    "complianceCerts" JSONB,
    "emergencyContact" VARCHAR(255),
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "Location_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LossInvestigation" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "investigationNumber" VARCHAR(50) NOT NULL,
    "investigationType" VARCHAR(50) NOT NULL,
    "investigationDate" TIMESTAMPTZ(6) NOT NULL,
    "completedDate" TIMESTAMPTZ(6),
    "lossAmount" DECIMAL(12,4) NOT NULL,
    "lossQuantity" DECIMAL(12,4) NOT NULL,
    "lossDescription" TEXT NOT NULL,
    "rootCause" TEXT,
    "investigationStatus" VARCHAR(20) NOT NULL DEFAULT 'OPEN',
    "priority" VARCHAR(20) NOT NULL DEFAULT 'MEDIUM',
    "severity" VARCHAR(20) NOT NULL DEFAULT 'MINOR',
    "assignedTo" UUID,
    "reportedBy" UUID,
    "approvedBy" UUID,
    "inventoryItemId" UUID,
    "locationId" UUID,
    "correctiveActions" TEXT,
    "preventiveActions" TEXT,
    "followUpRequired" BOOLEAN NOT NULL DEFAULT false,
    "followUpDate" DATE,

    CONSTRAINT "LossInvestigation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LossInvestigationFinding" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "findingNumber" VARCHAR(50) NOT NULL,
    "findingType" VARCHAR(50) NOT NULL,
    "findingCategory" VARCHAR(50) NOT NULL,
    "findingTitle" VARCHAR(255) NOT NULL,
    "findingDescription" TEXT NOT NULL,
    "impactLevel" VARCHAR(20) NOT NULL DEFAULT 'MEDIUM',
    "financialImpact" DECIMAL(12,4),
    "operationalImpact" TEXT,
    "evidence" TEXT,
    "evidenceType" VARCHAR(50),
    "evidenceUrl" TEXT,
    "recommendation" TEXT,
    "recommendedBy" UUID,
    "implementationDate" DATE,
    "findingStatus" VARCHAR(20) NOT NULL DEFAULT 'OPEN',
    "resolutionDate" TIMESTAMPTZ(6),
    "resolutionNotes" TEXT,
    "verifiedBy" UUID,
    "verifiedDate" TIMESTAMPTZ(6),
    "lossInvestigationId" UUID NOT NULL,

    CONSTRAINT "LossInvestigationFinding_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Member" (
    "id" UUID NOT NULL,
    "status" "MemberStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID NOT NULL,
    "memberNumber" VARCHAR(50),
    "displayName" VARCHAR(255),
    "title" VARCHAR(100),
    "department" VARCHAR(100),
    "workEmail" CITEXT,
    "workPhone" VARCHAR(50),
    "mobilePhone" VARCHAR(50),
    "employeeId" VARCHAR(50),
    "hireDate" TIMESTAMPTZ(6),
    "startDate" TIMESTAMPTZ(6),
    "endDate" TIMESTAMPTZ(6),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "lastAccessAt" TIMESTAMPTZ(6),
    "accessLevel" VARCHAR(20) NOT NULL DEFAULT 'STANDARD',
    "invitedAt" TIMESTAMPTZ(6),
    "invitedByMemberId" UUID,
    "acceptedAt" TIMESTAMPTZ(6),
    "onboardedAt" TIMESTAMPTZ(6),
    "suspendedAt" TIMESTAMPTZ(6),
    "suspendedReason" TEXT,
    "terminatedAt" TIMESTAMPTZ(6),
    "terminationReason" TEXT,
    "terminatedByMemberId" UUID,
    "costCenter" VARCHAR(50),
    "billableRate" DECIMAL(10,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "Member_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MemberDocument" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "memberId" UUID NOT NULL,
    "documentType" VARCHAR(50) NOT NULL,
    "documentNumber" VARCHAR(100),
    "fileName" VARCHAR(255) NOT NULL,
    "fileUrl" VARCHAR(500) NOT NULL,
    "mimeType" VARCHAR(100),
    "fileSize" INTEGER,
    "checksum" VARCHAR(64),
    "title" VARCHAR(255),
    "description" TEXT,
    "issuer" VARCHAR(255),
    "issuedDate" DATE,
    "expirationDate" DATE,
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "verifiedById" UUID,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "isConfidential" BOOLEAN NOT NULL DEFAULT true,
    "accessLevel" VARCHAR(20) NOT NULL DEFAULT 'MEMBER_ONLY',
    "uploadedById" UUID NOT NULL,
    "uploadedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "MemberDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MemberRole" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "memberId" UUID NOT NULL,
    "roleId" UUID NOT NULL,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "priority" INTEGER NOT NULL DEFAULT 100,
    "effectiveFrom" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "effectiveTo" TIMESTAMPTZ(6),
    "scope" "AssignmentScope" NOT NULL DEFAULT 'GLOBAL',
    "scopeResourceId" UUID,
    "scopeResourceType" VARCHAR(50),
    "assignedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "assignedByMemberId" UUID,
    "assignmentReason" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedByMemberId" UUID,
    "approvalComment" TEXT,
    "activatedAt" TIMESTAMPTZ(6),
    "deactivatedAt" TIMESTAMPTZ(6),
    "deactivationReason" TEXT,
    "deactivatedByMemberId" UUID,
    "inheritedFromRoleId" UUID,
    "canDelegate" BOOLEAN NOT NULL DEFAULT false,
    "delegatedToMemberId" UUID,
    "delegatedAt" TIMESTAMPTZ(6),
    "conditions" JSONB,
    "restrictions" JSONB,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "MemberRole_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MemberSettings" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "memberId" UUID NOT NULL,
    "theme" "ThemePreference" NOT NULL DEFAULT 'SYSTEM',
    "primaryColor" VARCHAR(20),
    "fontSize" VARCHAR(20) NOT NULL DEFAULT 'medium',
    "density" VARCHAR(20) NOT NULL DEFAULT 'comfortable',
    "language" VARCHAR(10),
    "locale" VARCHAR(10),
    "timezone" VARCHAR(50),
    "dateFormat" VARCHAR(20) NOT NULL DEFAULT 'MM/dd/yyyy',
    "timeFormat" VARCHAR(10) NOT NULL DEFAULT '12h',
    "numberFormat" VARCHAR(10) NOT NULL DEFAULT 'US',
    "emailNotifications" BOOLEAN NOT NULL DEFAULT true,
    "pushNotifications" BOOLEAN NOT NULL DEFAULT true,
    "smsNotifications" BOOLEAN NOT NULL DEFAULT false,
    "inAppNotifications" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnAssignment" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnMention" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnDeadline" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnApproval" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnComment" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnStatusChange" BOOLEAN NOT NULL DEFAULT true,
    "dashboardLayout" JSONB,
    "sidebarCollapsed" BOOLEAN NOT NULL DEFAULT false,
    "quickActions" VARCHAR(100)[],
    "favoriteViews" VARCHAR(100)[],
    "workingHoursStart" VARCHAR(10),
    "workingHoursEnd" VARCHAR(10),
    "workingDays" VARCHAR(10)[],
    "autoSaveInterval" INTEGER NOT NULL DEFAULT 30,
    "profileVisibility" VARCHAR(20) NOT NULL DEFAULT 'TEAM',
    "activityVisibility" VARCHAR(20) NOT NULL DEFAULT 'TEAM',
    "allowAnalytics" BOOLEAN NOT NULL DEFAULT true,
    "keyboardShortcuts" BOOLEAN NOT NULL DEFAULT true,
    "animations" BOOLEAN NOT NULL DEFAULT true,
    "soundEffects" BOOLEAN NOT NULL DEFAULT false,
    "betaFeatures" BOOLEAN NOT NULL DEFAULT false,
    "customSettings" JSONB,

    CONSTRAINT "MemberSettings_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Message" (
    "id" UUID NOT NULL,
    "status" "CommunicationMessageStatus" NOT NULL DEFAULT 'SENT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "channelId" UUID NOT NULL,
    "senderId" UUID NOT NULL,
    "messageType" "CommunicationMessageType" NOT NULL DEFAULT 'TEXT',
    "messageStatus" "CommunicationMessageStatus" NOT NULL DEFAULT 'SENT',
    "priority" "CommunicationMessagePriority" NOT NULL DEFAULT 'NORMAL',
    "content" TEXT NOT NULL,
    "contentFormat" "MessageFormat" NOT NULL DEFAULT 'TEXT',
    "rawContent" TEXT,
    "searchableContent" TEXT,
    "parentMessageId" UUID,
    "threadDepth" INTEGER NOT NULL DEFAULT 0,
    "replyCount" INTEGER NOT NULL DEFAULT 0,
    "lastReplyAt" TIMESTAMPTZ(6),
    "mentionedMembers" TEXT,
    "mentionedChannels" TEXT,
    "referencedMessages" TEXT,
    "hashtags" TEXT,
    "reactionCount" INTEGER NOT NULL DEFAULT 0,
    "reactions" TEXT,
    "readCount" INTEGER NOT NULL DEFAULT 0,
    "isImportant" BOOLEAN NOT NULL DEFAULT false,
    "isPinned" BOOLEAN NOT NULL DEFAULT false,
    "editedAt" TIMESTAMPTZ(6),
    "editedById" UUID,
    "editCount" INTEGER NOT NULL DEFAULT 0,
    "originalContent" TEXT,
    "isFlagged" BOOLEAN NOT NULL DEFAULT false,
    "flaggedAt" TIMESTAMPTZ(6),
    "flaggedById" UUID,
    "flagReason" VARCHAR(255),
    "moderatedAt" TIMESTAMPTZ(6),
    "moderatedById" UUID,
    "moderationAction" VARCHAR(50),
    "attachmentCount" INTEGER NOT NULL DEFAULT 0,
    "hasImages" BOOLEAN NOT NULL DEFAULT false,
    "hasDocuments" BOOLEAN NOT NULL DEFAULT false,
    "hasLinks" BOOLEAN NOT NULL DEFAULT false,
    "extractedLinks" TEXT,
    "scheduledAt" TIMESTAMPTZ(6),
    "isScheduled" BOOLEAN NOT NULL DEFAULT false,
    "isAutomated" BOOLEAN NOT NULL DEFAULT false,
    "botId" UUID,
    "externalId" VARCHAR(255),
    "externalSource" VARCHAR(100),
    "integrationData" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "Message_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MessageAttachment" (
    "id" UUID NOT NULL,
    "status" "CommunicationAttachmentStatus" NOT NULL DEFAULT 'UPLOADING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "messageId" UUID NOT NULL,
    "fileObjectId" UUID NOT NULL,
    "attachmentStatus" "CommunicationAttachmentStatus" NOT NULL DEFAULT 'UPLOADING',
    "attachmentType" "CommunicationAttachmentType" NOT NULL,
    "fileName" VARCHAR(500) NOT NULL,
    "originalFileName" VARCHAR(500) NOT NULL,
    "fileSize" BIGINT NOT NULL,
    "mimeType" VARCHAR(255) NOT NULL,
    "fileExtension" VARCHAR(50) NOT NULL,
    "encoding" VARCHAR(100),
    "uploadedById" UUID NOT NULL,
    "uploadStartedAt" TIMESTAMPTZ(6),
    "uploadCompletedAt" TIMESTAMPTZ(6),
    "processingStartedAt" TIMESTAMPTZ(6),
    "processingCompletedAt" TIMESTAMPTZ(6),
    "hasThumbnail" BOOLEAN NOT NULL DEFAULT false,
    "thumbnailUrl" VARCHAR(1000),
    "previewUrl" VARCHAR(1000),
    "downloadUrl" VARCHAR(1000),
    "virusScanned" BOOLEAN NOT NULL DEFAULT false,
    "virusScanResult" VARCHAR(50),
    "scanCompletedAt" TIMESTAMPTZ(6),
    "isPubliclyAccessible" BOOLEAN NOT NULL DEFAULT false,
    "accessPermissions" TEXT,
    "downloadCount" INTEGER NOT NULL DEFAULT 0,
    "lastAccessedAt" TIMESTAMPTZ(6),
    "viewCount" INTEGER NOT NULL DEFAULT 0,
    "shareCount" INTEGER NOT NULL DEFAULT 0,
    "imageWidth" INTEGER,
    "imageHeight" INTEGER,
    "videoDuration" INTEGER,
    "audioDuration" INTEGER,
    "documentPages" INTEGER,
    "description" TEXT,
    "tags" TEXT,
    "altText" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "MessageAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MessageRead" (
    "id" UUID NOT NULL,
    "status" "ReadStatus" NOT NULL DEFAULT 'DELIVERED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "messageId" UUID NOT NULL,
    "memberId" UUID NOT NULL,
    "readStatus" "ReadStatus" NOT NULL DEFAULT 'DELIVERED',
    "deliveredAt" TIMESTAMPTZ(6),
    "readAt" TIMESTAMPTZ(6),
    "acknowledgedAt" TIMESTAMPTZ(6),
    "firstReadAt" TIMESTAMPTZ(6),
    "lastReadAt" TIMESTAMPTZ(6),
    "readDuration" INTEGER,
    "scrollPercentage" INTEGER DEFAULT 0,
    "deviceType" VARCHAR(50),
    "platform" VARCHAR(50),
    "channelId" UUID NOT NULL,
    "readFromNotification" BOOLEAN NOT NULL DEFAULT false,
    "readFromThread" BOOLEAN NOT NULL DEFAULT false,
    "readFromSearch" BOOLEAN NOT NULL DEFAULT false,
    "wasMarkedImportant" BOOLEAN NOT NULL DEFAULT false,
    "wasShared" BOOLEAN NOT NULL DEFAULT false,
    "wasBookmarked" BOOLEAN NOT NULL DEFAULT false,
    "wasReportedAsSpam" BOOLEAN NOT NULL DEFAULT false,
    "isAutoRead" BOOLEAN NOT NULL DEFAULT false,
    "autoReadReason" VARCHAR(100),
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "channelMemberId" UUID,

    CONSTRAINT "MessageRead_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MetricSnapshot" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "metricCode" VARCHAR(100) NOT NULL,
    "snapshotAt" TIMESTAMPTZ(6) NOT NULL,
    "value" DECIMAL(15,2) NOT NULL,
    "unit" VARCHAR(20),
    "dimensionKey" VARCHAR(200),
    "dimensions" JSONB,
    "cubeId" UUID,
    "partitionId" UUID,

    CONSTRAINT "MetricSnapshot_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Milestone" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "milestoneType" "MilestoneType" NOT NULL DEFAULT 'CUSTOM',
    "targetDate" DATE NOT NULL,
    "actualDate" DATE,
    "milestoneStatus" "MilestoneStatus" NOT NULL DEFAULT 'PLANNED',
    "progressPercentage" DECIMAL(5,2) NOT NULL DEFAULT 0,
    "isCompleted" BOOLEAN NOT NULL DEFAULT false,
    "completedAt" TIMESTAMPTZ(6),
    "completedById" UUID,
    "priority" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "isCriticalPath" BOOLEAN NOT NULL DEFAULT false,
    "isClientFacing" BOOLEAN NOT NULL DEFAULT false,
    "deliverables" JSONB,
    "acceptanceCriteria" JSONB,
    "budgetImpact" DECIMAL(12,2),
    "revenueImpact" DECIMAL(12,2),
    "penaltyRisk" DECIMAL(12,2),
    "ownerId" UUID NOT NULL,
    "alertDaysBefore" INTEGER,
    "lastAlertSent" TIMESTAMPTZ(6),
    "escalationLevel" "EscalationLevel" NOT NULL DEFAULT 'NONE',
    "scheduleId" UUID,
    "projectId" UUID,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "Milestone_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MilestoneDependency" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "dependentMilestoneId" UUID NOT NULL,
    "prerequisiteMilestoneId" UUID NOT NULL,
    "dependencyType" VARCHAR(30) NOT NULL DEFAULT 'FINISH_TO_START',
    "lagDays" INTEGER DEFAULT 0,
    "isHardDependency" BOOLEAN NOT NULL DEFAULT true,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "violationRisk" "ImpactLevel",
    "lastValidated" TIMESTAMPTZ(6),
    "reason" VARCHAR(500),
    "impact" TEXT,

    CONSTRAINT "MilestoneDependency_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MilestoneStakeholder" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "milestoneId" UUID NOT NULL,
    "stakeholderId" UUID NOT NULL,
    "stakeholderRole" "StakeholderRole" NOT NULL DEFAULT 'OBSERVER',
    "involvementLevel" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "notifyOnUpdate" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnDelay" BOOLEAN NOT NULL DEFAULT true,
    "notifyOnCompletion" BOOLEAN NOT NULL DEFAULT true,
    "assignedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "assignedById" UUID NOT NULL,

    CONSTRAINT "MilestoneStakeholder_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MitigationAction" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "MitigationAction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Notification" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "Notification_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "NotificationPreference" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "NotificationPreference_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "NotificationTemplate" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "NotificationTemplate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "NumberSequence" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "code" VARCHAR(50) NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "prefix" VARCHAR(20) NOT NULL,
    "suffix" VARCHAR(20),
    "paddingLength" INTEGER NOT NULL DEFAULT 6,
    "currentValue" INTEGER NOT NULL DEFAULT 0,
    "minValue" INTEGER NOT NULL DEFAULT 1,
    "maxValue" INTEGER,
    "step" INTEGER NOT NULL DEFAULT 1,
    "resetMode" "NumberSequenceResetMode" NOT NULL DEFAULT 'NEVER',
    "resetValue" INTEGER NOT NULL DEFAULT 1,
    "lastResetAt" TIMESTAMPTZ(6),
    "formatTemplate" TEXT NOT NULL DEFAULT '{prefix}-{number}',
    "exampleOutput" VARCHAR(100),

    CONSTRAINT "NumberSequence_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Opportunity" (
    "id" UUID NOT NULL,
    "status" "OpportunityStatus" NOT NULL DEFAULT 'PROSPECTING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "amount" DECIMAL(15,2) NOT NULL,
    "probability" INTEGER,
    "expectedCloseDate" DATE,
    "actualCloseDate" DATE,
    "nextStep" VARCHAR(255),
    "competitorInfo" TEXT,
    "notes" TEXT,
    "accountId" UUID,
    "contactId" UUID,
    "leadId" UUID,
    "stageId" UUID,
    "closeDate" DATE,

    CONSTRAINT "Opportunity_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "OpportunityLineItem" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "description" TEXT,
    "quantity" DECIMAL(10,2) NOT NULL,
    "unitPrice" DECIMAL(12,4) NOT NULL,
    "totalPrice" DECIMAL(15,2) NOT NULL,
    "priceListItemId" UUID,
    "opportunityId" UUID NOT NULL,
    "contactId" UUID,

    CONSTRAINT "OpportunityLineItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "OpportunityStage" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "sortOrder" INTEGER,
    "probability" INTEGER,

    CONSTRAINT "OpportunityStage_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "OrgUnit" (
    "id" UUID NOT NULL,
    "status" "OrgUnitStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "unitCode" CITEXT NOT NULL,
    "unitName" VARCHAR(100) NOT NULL,
    "unitDescription" TEXT,
    "unitType" VARCHAR(50) NOT NULL DEFAULT 'DEPARTMENT',
    "parentUnitId" UUID,
    "unitLevel" INTEGER NOT NULL DEFAULT 1,
    "managerId" UUID,
    "assistantManagerId" UUID,
    "budgetOwnerId" UUID,
    "costCenterId" UUID,
    "departmentId" UUID,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isOperational" BOOLEAN NOT NULL DEFAULT true,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "maxHeadcount" INTEGER,
    "currentHeadcount" INTEGER DEFAULT 0,
    "primaryLocationId" UUID,
    "regionCode" CITEXT,
    "timeZone" VARCHAR(50),
    "businessHours" JSONB,
    "budgetAmount" DECIMAL(12,2),
    "actualSpend" DECIMAL(12,2) DEFAULT 0,
    "budgetVariance" DECIMAL(12,2) DEFAULT 0,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "complianceFlags" JSONB,
    "reportingStructure" JSONB,
    "auditRequirements" JSONB,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "OrgUnit_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "OutboxMessage" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "OutboxMessage_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "OvertimeRule" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "ruleName" VARCHAR(100) NOT NULL,
    "ruleCode" VARCHAR(50) NOT NULL,
    "ruleType" "OvertimeRuleType" NOT NULL DEFAULT 'DAILY',
    "description" TEXT,
    "thresholdHours" DECIMAL(8,2) NOT NULL,
    "multiplier" DECIMAL(4,2) NOT NULL DEFAULT 1.5,
    "maxHoursPerDay" DECIMAL(8,2),
    "maxHoursPerWeek" DECIMAL(8,2),
    "roundingRule" VARCHAR(20) NOT NULL DEFAULT 'QUARTER',
    "minimumIncrement" DECIMAL(4,2),
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "employeeGroup" VARCHAR(50),
    "department" VARCHAR(50),
    "jobTitle" VARCHAR(100),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvalLevel" INTEGER DEFAULT 1,
    "priority" INTEGER NOT NULL DEFAULT 1,
    "sortOrder" INTEGER NOT NULL DEFAULT 1,

    CONSTRAINT "OvertimeRule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PasswordResetToken" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID NOT NULL,
    "memberId" UUID,
    "token" VARCHAR(255) NOT NULL,
    "hashedToken" VARCHAR(255) NOT NULL,
    "selector" VARCHAR(100) NOT NULL,
    "expiresAt" TIMESTAMPTZ(6) NOT NULL,
    "isUsed" BOOLEAN NOT NULL DEFAULT false,
    "usedAt" TIMESTAMPTZ(6),
    "requestedEmail" CITEXT NOT NULL,
    "requestIpAddress" VARCHAR(45),
    "requestUserAgent" TEXT,
    "requestFingerprint" VARCHAR(255),
    "attemptCount" INTEGER NOT NULL DEFAULT 0,
    "maxAttempts" INTEGER NOT NULL DEFAULT 3,
    "lastAttemptAt" TIMESTAMPTZ(6),
    "lastAttemptIp" VARCHAR(45),
    "invalidatedAt" TIMESTAMPTZ(6),
    "invalidationReason" TEXT,
    "invalidatedByMemberId" UUID,
    "passwordChangedAt" TIMESTAMPTZ(6),
    "changeIpAddress" VARCHAR(45),
    "changeUserAgent" TEXT,
    "metadata" JSONB,

    CONSTRAINT "PasswordResetToken_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayCalendar" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "calendarCode" CITEXT NOT NULL,
    "calendarName" VARCHAR(100) NOT NULL,
    "calendarDescription" TEXT,
    "payFrequency" "PayFrequency" NOT NULL,
    "calendarYear" INTEGER NOT NULL,
    "startDate" DATE NOT NULL,
    "endDate" DATE NOT NULL,
    "totalPeriods" INTEGER NOT NULL,
    "currentPeriod" INTEGER DEFAULT 1,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "periodLength" INTEGER NOT NULL DEFAULT 14,
    "cutoffDays" INTEGER NOT NULL DEFAULT 3,
    "processingDays" INTEGER NOT NULL DEFAULT 2,
    "paymentDays" INTEGER NOT NULL DEFAULT 1,
    "holidayCalendarId" UUID,
    "adjustForHolidays" BOOLEAN NOT NULL DEFAULT true,
    "weekendHandling" VARCHAR(20) NOT NULL DEFAULT 'PREVIOUS_WEEKDAY',
    "bankingDays" JSONB,
    "processingRules" JSONB,
    "exceptionRules" JSONB,
    "complianceRegion" VARCHAR(50),
    "taxYearAlignment" BOOLEAN NOT NULL DEFAULT true,
    "auditTrail" JSONB,
    "effectiveDate" DATE NOT NULL,
    "endDateEffective" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "PayCalendar_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayGroup" (
    "id" UUID NOT NULL,
    "status" "PayGroupStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "payGroupCode" CITEXT NOT NULL,
    "payGroupName" VARCHAR(100) NOT NULL,
    "payGroupDescription" TEXT,
    "payFrequency" "PayFrequency" NOT NULL,
    "payCalendarId" UUID,
    "processingDay" INTEGER DEFAULT 1,
    "cutoffDay" INTEGER DEFAULT 1,
    "approvalRequired" BOOLEAN NOT NULL DEFAULT true,
    "autoCalculateOT" BOOLEAN NOT NULL DEFAULT true,
    "overtimeThreshold" DECIMAL(5,2) DEFAULT 40.0,
    "defaultBankAccountId" UUID,
    "paymentMethod" VARCHAR(50),
    "directDepositDays" INTEGER DEFAULT 2,
    "taxJurisdiction" VARCHAR(100),
    "unionAffiliation" VARCHAR(100),
    "reportingRegion" VARCHAR(50),
    "complianceFlags" JSONB,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "PayGroup_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayGroupAssignment" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "payGroupId" UUID NOT NULL,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "isPrimary" BOOLEAN NOT NULL DEFAULT true,

    CONSTRAINT "PayGroupAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayStatement" (
    "id" UUID NOT NULL,
    "status" "PayStatementStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "statementNumber" VARCHAR(50) NOT NULL,
    "statementDate" DATE NOT NULL,
    "payPeriodStart" DATE NOT NULL,
    "payPeriodEnd" DATE NOT NULL,
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "employeeName" VARCHAR(255) NOT NULL,
    "regularHours" DECIMAL(8,2),
    "overtimeHours" DECIMAL(8,2),
    "totalHours" DECIMAL(8,2),
    "regularPay" DECIMAL(12,4) NOT NULL,
    "overtimePay" DECIMAL(12,4),
    "bonusPay" DECIMAL(12,4),
    "grossPay" DECIMAL(12,4) NOT NULL,
    "federalTax" DECIMAL(12,4),
    "stateTax" DECIMAL(12,4),
    "socialSecurity" DECIMAL(12,4),
    "medicare" DECIMAL(12,4),
    "otherDeductions" DECIMAL(12,4),
    "totalDeductions" DECIMAL(12,4) NOT NULL,
    "netPay" DECIMAL(12,4) NOT NULL,
    "ytdGrossPay" DECIMAL(12,4),
    "ytdDeductions" DECIMAL(12,4),
    "ytdNetPay" DECIMAL(12,4),
    "generatedAt" TIMESTAMPTZ(6),
    "deliveredAt" TIMESTAMPTZ(6),
    "viewedAt" TIMESTAMPTZ(6),
    "payrollRunId" UUID,

    CONSTRAINT "PayStatement_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Payment" (
    "id" UUID NOT NULL,
    "status" "PaymentStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "paymentNumber" TEXT NOT NULL,
    "paymentDate" TIMESTAMPTZ(6) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "currency" TEXT NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(12,6),
    "referenceNumber" TEXT,
    "notes" TEXT,
    "paymentMethodId" UUID,
    "paymentMethodType" "PaymentMethodType",
    "accountId" UUID NOT NULL,
    "contactId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "Payment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentApplication" (
    "id" UUID NOT NULL,
    "status" "PaymentChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "appliedAmount" DECIMAL(12,2) NOT NULL,
    "applicationDate" DATE NOT NULL,
    "description" TEXT,
    "paymentId" UUID NOT NULL,
    "invoiceId" UUID,

    CONSTRAINT "PaymentApplication_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentGateway" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "PaymentGateway_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentMethod" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "PaymentMethod_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentMethodToken" (
    "id" UUID NOT NULL,
    "status" "PaymentChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "tokenValue" VARCHAR(255) NOT NULL,
    "tokenType" VARCHAR(50) NOT NULL,
    "lastFourDigits" VARCHAR(4),
    "expiryDate" DATE,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "paymentMethodId" UUID,

    CONSTRAINT "PaymentMethodToken_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentSchedule" (
    "id" UUID NOT NULL,
    "status" "PaymentScheduleStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "invoiceId" UUID NOT NULL,
    "installmentNumber" INTEGER NOT NULL,
    "description" VARCHAR(255),
    "scheduledAmount" DECIMAL(12,2) NOT NULL,
    "paidAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "remainingAmount" DECIMAL(12,2) NOT NULL,
    "dueDate" DATE NOT NULL,
    "gracePeriodDays" INTEGER DEFAULT 0,
    "overdueDate" DATE,
    "paidDate" TIMESTAMPTZ(6),
    "lastPaymentDate" TIMESTAMPTZ(6),
    "lateFeeAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "lateFeeRate" DECIMAL(5,2),
    "penaltyAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "dunningLevel" "DunningLevel" DEFAULT 'FIRST_NOTICE',
    "lastDunningDate" DATE,
    "notes" TEXT,
    "metadata" JSONB,

    CONSTRAINT "PaymentSchedule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PaymentTerm" (
    "id" UUID NOT NULL,
    "status" "PaymentTermStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "netDays" INTEGER NOT NULL DEFAULT 30,
    "discountPercent" DECIMAL(5,2),
    "discountDays" INTEGER,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "metadata" JSONB,

    CONSTRAINT "PaymentTerm_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Payout" (
    "id" UUID NOT NULL,
    "status" "PayoutStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "payoutNumber" TEXT NOT NULL,
    "payoutDate" TIMESTAMPTZ(6) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "currency" TEXT NOT NULL DEFAULT 'USD',
    "feeAmount" DECIMAL(12,2),
    "netAmount" DECIMAL(12,2) NOT NULL,
    "referenceNumber" TEXT,
    "description" TEXT,
    "notes" TEXT,
    "paymentId" UUID NOT NULL,
    "bankAccountId" UUID NOT NULL,
    "processedById" UUID,
    "completedAt" TIMESTAMPTZ(6),
    "failureReason" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "Payout_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayrollAdjustment" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "adjustmentNumber" VARCHAR(50) NOT NULL,
    "adjustmentType" "PayrollAdjustmentType" NOT NULL DEFAULT 'CORRECTION',
    "adjustmentReason" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "adjustmentAmount" DECIMAL(12,4) NOT NULL,
    "adjustmentDate" DATE NOT NULL,
    "effectiveDate" DATE NOT NULL,
    "isProcessed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "processedBy" UUID,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT true,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedBy" UUID,
    "glAccount" VARCHAR(50),
    "costCenter" VARCHAR(50),
    "payrollRunId" UUID,

    CONSTRAINT "PayrollAdjustment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayrollItem" (
    "id" UUID NOT NULL,
    "status" "PayrollItemStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "itemNumber" VARCHAR(50) NOT NULL,
    "itemType" "PayrollItemType" NOT NULL DEFAULT 'SALARY',
    "itemCode" VARCHAR(50) NOT NULL,
    "itemDescription" VARCHAR(255) NOT NULL,
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "rate" DECIMAL(12,4),
    "hours" DECIMAL(8,2),
    "units" DECIMAL(10,4),
    "amount" DECIMAL(12,4) NOT NULL,
    "isTaxable" BOOLEAN NOT NULL DEFAULT true,
    "isStatutory" BOOLEAN NOT NULL DEFAULT false,
    "isVoluntary" BOOLEAN NOT NULL DEFAULT false,
    "calculatedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedBy" UUID,
    "glAccount" VARCHAR(50),
    "costCenter" VARCHAR(50),
    "department" VARCHAR(50),
    "payrollRunId" UUID,

    CONSTRAINT "PayrollItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayrollPayment" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "paymentNumber" VARCHAR(50) NOT NULL,
    "paymentType" "PayrollPaymentType" NOT NULL DEFAULT 'DIRECT_DEPOSIT',
    "paymentMethod" "PayrollPaymentMethod" NOT NULL DEFAULT 'BANK_ACCOUNT',
    "paymentDate" DATE NOT NULL,
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "grossAmount" DECIMAL(12,4) NOT NULL,
    "deductionsAmount" DECIMAL(12,4) NOT NULL,
    "taxAmount" DECIMAL(12,4) NOT NULL,
    "netAmount" DECIMAL(12,4) NOT NULL,
    "bankAccountId" UUID,
    "routingNumber" VARCHAR(20),
    "accountNumber" VARCHAR(50),
    "checkNumber" VARCHAR(20),
    "checkDate" DATE,
    "isProcessed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "processedBy" UUID,
    "payrollRunId" UUID,

    CONSTRAINT "PayrollPayment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayrollRun" (
    "id" UUID NOT NULL,
    "status" "PayrollRunStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "runNumber" VARCHAR(50) NOT NULL,
    "runType" "PayrollRunType" NOT NULL DEFAULT 'REGULAR',
    "payPeriodStart" DATE NOT NULL,
    "payPeriodEnd" DATE NOT NULL,
    "payDate" DATE NOT NULL,
    "checkDate" DATE,
    "calculatedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "processedAt" TIMESTAMPTZ(6),
    "finalizedAt" TIMESTAMPTZ(6),
    "totalGrossPay" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "totalDeductions" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "totalTaxes" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "totalNetPay" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "totalEmployerTax" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "employeeCount" INTEGER NOT NULL DEFAULT 0,
    "processedById" UUID,
    "approvedById" UUID,
    "bankFileGenerated" BOOLEAN NOT NULL DEFAULT false,
    "bankFileName" VARCHAR(255),
    "notes" TEXT,
    "processingNotes" TEXT,

    CONSTRAINT "PayrollRun_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PayrollTax" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "taxNumber" VARCHAR(50) NOT NULL,
    "taxType" "PayrollTaxType" NOT NULL DEFAULT 'FEDERAL',
    "taxCode" VARCHAR(50) NOT NULL,
    "taxDescription" VARCHAR(255) NOT NULL,
    "employeeId" UUID NOT NULL,
    "employeeNumber" VARCHAR(50),
    "taxableWages" DECIMAL(12,4) NOT NULL,
    "taxRate" DECIMAL(8,6) NOT NULL,
    "taxAmount" DECIMAL(12,4) NOT NULL,
    "yearToDateWages" DECIMAL(12,4),
    "yearToDateTax" DECIMAL(12,4),
    "taxLimit" DECIMAL(12,4),
    "wageLimit" DECIMAL(12,4),
    "taxAuthority" VARCHAR(100),
    "taxJurisdiction" VARCHAR(100),
    "filingFrequency" VARCHAR(20),
    "calculatedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedBy" UUID,
    "glAccount" VARCHAR(50),
    "liabilityAccount" VARCHAR(50),
    "payrollRunId" UUID,

    CONSTRAINT "PayrollTax_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PerformanceGoal" (
    "id" UUID NOT NULL,
    "status" "GoalStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "performanceReviewId" UUID,
    "goalType" "GoalType" NOT NULL DEFAULT 'PERFORMANCE',
    "category" VARCHAR(50) NOT NULL,
    "title" VARCHAR(200) NOT NULL,
    "description" TEXT NOT NULL,
    "successCriteria" TEXT,
    "measurableOutcome" TEXT,
    "isSpecific" BOOLEAN NOT NULL DEFAULT false,
    "isMeasurable" BOOLEAN NOT NULL DEFAULT false,
    "isAchievable" BOOLEAN NOT NULL DEFAULT false,
    "isRelevant" BOOLEAN NOT NULL DEFAULT false,
    "isTimeBound" BOOLEAN NOT NULL DEFAULT false,
    "startDate" DATE NOT NULL,
    "targetDate" DATE NOT NULL,
    "completedDate" DATE,
    "progressPercent" DECIMAL(5,2) NOT NULL DEFAULT 0,
    "currentValue" DECIMAL(12,2),
    "targetValue" DECIMAL(12,2),
    "unitOfMeasure" VARCHAR(50),
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "weight" DECIMAL(3,2) NOT NULL DEFAULT 1.0,
    "finalRating" "PerformanceRating",
    "managerAssessment" TEXT,
    "selfAssessment" TEXT,
    "isDevelopmentGoal" BOOLEAN NOT NULL DEFAULT false,
    "skillsToImprove" JSONB,
    "resourcesNeeded" JSONB,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "lastReviewedAt" TIMESTAMPTZ(6),
    "reviewNotes" TEXT,

    CONSTRAINT "PerformanceGoal_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PerformanceReview" (
    "id" UUID NOT NULL,
    "status" "ReviewStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "reviewerId" UUID NOT NULL,
    "reviewPeriodId" UUID,
    "reviewType" VARCHAR(50) NOT NULL,
    "reviewCycle" VARCHAR(20) NOT NULL,
    "reviewPeriodStart" DATE NOT NULL,
    "reviewPeriodEnd" DATE NOT NULL,
    "dueDate" DATE NOT NULL,
    "completedDate" DATE,
    "title" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "objectives" JSONB,
    "competencies" JSONB,
    "overallRating" "PerformanceRating",
    "goalAchievement" "PerformanceRating",
    "competencyRating" "PerformanceRating",
    "selfAssessment" TEXT,
    "selfRating" "PerformanceRating",
    "managerFeedback" TEXT,
    "strengths" TEXT,
    "areasForImprovement" TEXT,
    "developmentPlan" JSONB,
    "careerAspirations" TEXT,
    "trainingNeeds" JSONB,
    "submittedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "hrReviewedAt" TIMESTAMPTZ(6),
    "hrReviewedById" UUID,
    "hrComments" TEXT,
    "calibrationSession" VARCHAR(100),
    "calibratedRating" "PerformanceRating",
    "calibrationNotes" TEXT,

    CONSTRAINT "PerformanceReview_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Permission" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "code" CITEXT NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "scope" "PermissionScope" NOT NULL DEFAULT 'TENANT',
    "category" VARCHAR(100) NOT NULL,
    "subcategory" VARCHAR(100),
    "isSystemPermission" BOOLEAN NOT NULL DEFAULT false,
    "requiresMfa" BOOLEAN NOT NULL DEFAULT false,
    "riskLevel" "ImpactLevel" NOT NULL DEFAULT 'LOW',
    "parentPermissionId" UUID,
    "dependsOnCodes" VARCHAR(100)[],
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "metadata" JSONB,

    CONSTRAINT "Permission_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Person" (
    "id" UUID NOT NULL,
    "status" "PersonStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personNumber" VARCHAR(20) NOT NULL,
    "firstName" VARCHAR(100) NOT NULL,
    "lastName" VARCHAR(100) NOT NULL,
    "dateOfBirth" DATE,
    "socialSecurityNumber" VARCHAR(11),
    "gender" "GenderType",
    "maritalStatus" "MaritalStatus",
    "ethnicity" VARCHAR(50),
    "nationality" VARCHAR(50),
    "isDeceased" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "Person_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PersonAddress" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personId" UUID NOT NULL,
    "addressType" "AddressType" NOT NULL,
    "address1" VARCHAR(255) NOT NULL,
    "address2" VARCHAR(255),
    "city" VARCHAR(100) NOT NULL,
    "state" VARCHAR(50) NOT NULL,
    "postalCode" VARCHAR(20) NOT NULL,
    "country" VARCHAR(50) NOT NULL,
    "latitude" DECIMAL(10,8),
    "longitude" DECIMAL(11,8),
    "effectiveDate" DATE NOT NULL,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "PersonAddress_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PersonContactMethod" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personId" UUID NOT NULL,
    "contactType" "ContactType" NOT NULL,
    "contactValue" VARCHAR(255) NOT NULL,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "canReceiveMarketing" BOOLEAN NOT NULL DEFAULT false,
    "effectiveDate" DATE NOT NULL,

    CONSTRAINT "PersonContactMethod_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PersonDocument" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personId" UUID NOT NULL,
    "documentType" "DocumentType" NOT NULL,
    "documentNumber" VARCHAR(100) NOT NULL,
    "issuingAuthority" VARCHAR(100),
    "issueDate" DATE,
    "expirationDate" DATE,
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "fileObjectId" UUID,
    "complianceFlags" JSONB,

    CONSTRAINT "PersonDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PersonName" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personId" UUID NOT NULL,
    "nameType" "NameType" NOT NULL,
    "firstName" VARCHAR(100) NOT NULL,
    "lastName" VARCHAR(100) NOT NULL,
    "middleName" VARCHAR(100),
    "effectiveDate" DATE NOT NULL,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "verificationStatus" "VerificationStatus" NOT NULL DEFAULT 'PENDING',

    CONSTRAINT "PersonName_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Position" (
    "id" UUID NOT NULL,
    "status" "PositionStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "positionNumber" VARCHAR(20) NOT NULL,
    "positionTitle" VARCHAR(100) NOT NULL,
    "department" VARCHAR(100),
    "jobProfileId" UUID,
    "gradeId" UUID,
    "reportsToId" UUID,
    "isSupervisor" BOOLEAN NOT NULL DEFAULT false,
    "isManager" BOOLEAN NOT NULL DEFAULT false,
    "isExecutive" BOOLEAN NOT NULL DEFAULT false,
    "headcount" INTEGER NOT NULL DEFAULT 1,
    "fte" DECIMAL(4,2) NOT NULL DEFAULT 1.0,
    "budgetedSalary" DECIMAL(12,2),
    "locationId" UUID,
    "workSchedule" "WorkScheduleType" DEFAULT 'FULL_TIME',
    "isRemoteEligible" BOOLEAN NOT NULL DEFAULT false,
    "travelRequired" INTEGER DEFAULT 0,
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),

    CONSTRAINT "Position_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PositionAssignment" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "positionId" UUID NOT NULL,
    "assignmentType" "AssignmentType" NOT NULL DEFAULT 'PRIMARY',
    "assignmentStatus" "EmploymentStatus" NOT NULL DEFAULT 'ACTIVE',
    "startDate" DATE NOT NULL,
    "endDate" DATE,
    "allocationPercent" DECIMAL(5,2) DEFAULT 100.0,
    "isPrimary" BOOLEAN NOT NULL DEFAULT true,
    "reportsToPositionId" UUID,
    "reportingLevel" INTEGER DEFAULT 1,
    "assignmentReason" VARCHAR(100),
    "assignmentNotes" TEXT,
    "effectiveDate" DATE NOT NULL,
    "endDateEffective" DATE,

    CONSTRAINT "PositionAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PositionBudget" (
    "id" UUID NOT NULL,
    "status" "HRWorkforceChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "positionId" UUID NOT NULL,
    "budgetYear" INTEGER NOT NULL,
    "budgetPeriod" "BudgetPeriod" NOT NULL,
    "baseSalary" DECIMAL(12,2) NOT NULL,
    "benefits" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "bonuses" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "overtime" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "totalBudget" DECIMAL(12,2) NOT NULL,
    "actualSpent" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "variance" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "budgetStatus" "PositionBudgetStatus" NOT NULL DEFAULT 'DRAFT',
    "approvedByActorId" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "effectiveDate" DATE NOT NULL,
    "endDate" DATE,

    CONSTRAINT "PositionBudget_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PriceList" (
    "id" UUID NOT NULL,
    "status" "CatalogStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "currency" VARCHAR(3) NOT NULL,
    "priceListType" VARCHAR(50) NOT NULL,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "effectiveDate" DATE,
    "expiryDate" DATE,
    "discountPercent" DECIMAL(5,2),
    "markupPercent" DECIMAL(5,2),
    "notes" TEXT,

    CONSTRAINT "PriceList_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PriceListItem" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "sku" TEXT NOT NULL,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "unitPrice" DECIMAL(12,4) NOT NULL,
    "currency" VARCHAR(3) NOT NULL,
    "unitOfMeasure" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "priceListId" UUID NOT NULL,

    CONSTRAINT "PriceListItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Project" (
    "id" UUID NOT NULL,
    "status" "ProjectStatus" NOT NULL DEFAULT 'PLANNING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "documentGroupId" UUID NOT NULL,
    "externalNumber" CITEXT NOT NULL,
    "estimateId" UUID,
    "invoiceId" UUID,
    "clientAccountId" UUID,
    "clientContactId" UUID,
    "contractTemplateId" UUID,
    "termsTemplateId" UUID,
    "approvedByMemberId" UUID,
    "finalApprovedByMemberId" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "finalApprovedAt" TIMESTAMPTZ(6),
    "declineReason" TEXT,
    "approvedByActorId" UUID,
    "finalApprovedByActorId" UUID,
    "approvalCorrelationId" UUID,
    "approvalNotes" TEXT,
    "subtotal" DECIMAL(12,2),
    "discountAmount" DECIMAL(12,2),
    "taxAmount" DECIMAL(12,2),
    "grandTotal" DECIMAL(12,2),
    "budgetedCost" DECIMAL(14,2),
    "actualCost" DECIMAL(14,2),
    "departmentId" UUID,
    "orgUnitId" UUID,
    "costCenterId" UUID,
    "locationId" UUID,
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "riskClassification" "ImpactLevel" NOT NULL DEFAULT 'LOW',
    "complexityScore" DECIMAL(3,2),
    "strategicImportance" VARCHAR(20),
    "name" TEXT NOT NULL,
    "description" TEXT,
    "startDate" DATE,
    "endDate" DATE,

    CONSTRAINT "Project_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectBudgetLine" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "budgetCategory" TEXT NOT NULL,
    "costCode" TEXT NOT NULL,
    "budgetedAmount" DECIMAL(12,2) NOT NULL,
    "actualAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "projectId" UUID NOT NULL,
    "taskId" UUID,

    CONSTRAINT "ProjectBudgetLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectDocument" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "fileUrl" TEXT NOT NULL,
    "fileType" TEXT,
    "uploadedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "uploaderId" UUID,
    "attachmentId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectExternalAccess" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "email" TEXT NOT NULL,
    "role" TEXT NOT NULL,
    "expiresAt" TIMESTAMPTZ(6),
    "invitedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectExternalAccess_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectFinancialSnapshot" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "estimateOriginalTotal" DECIMAL(14,2) NOT NULL,
    "changeOrderDeltaTotal" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "actualCostsToDate" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "totalLaborHours" DECIMAL(10,2) NOT NULL DEFAULT 0,
    "totalLaborCost" DECIMAL(14,2) NOT NULL DEFAULT 0,
    "snapshotDate" TIMESTAMPTZ(6) NOT NULL,
    "snapshotReason" TEXT NOT NULL,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectFinancialSnapshot_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectInventoryTransaction" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectInventoryTransaction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectIssue" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "severity" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "issueStatus" "WorkItemStatus" NOT NULL DEFAULT 'OPEN',
    "reportedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "resolvedAt" TIMESTAMPTZ(6),
    "assigneeId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectIssue_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectLedgerEntry" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ProjectLedgerEntry_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectLocation" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" TEXT NOT NULL,
    "address" TEXT,
    "coordinates" TEXT,
    "locationType" "LocationType" NOT NULL DEFAULT 'SITE',
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "description" TEXT,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectLocation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectMember" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "memberId" UUID NOT NULL,
    "role" TEXT NOT NULL,
    "joinedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "leftAt" TIMESTAMPTZ(6),
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectMember_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectNote" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectNote_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectPhase" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" TEXT NOT NULL,
    "description" TEXT,
    "startDate" DATE,
    "endDate" DATE,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,
    "completion" DECIMAL(5,2),
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectPhase_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectReport" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectReport_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectRisk" (
    "id" UUID NOT NULL,
    "status" "RiskStatus" NOT NULL DEFAULT 'IDENTIFIED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "probability" INTEGER NOT NULL DEFAULT 0,
    "impact" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "mitigationPlan" TEXT,
    "identifiedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "ownerId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectRisk_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTask" (
    "id" UUID NOT NULL,
    "status" "WorkItemStatus" NOT NULL DEFAULT 'OPEN',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" TEXT NOT NULL,
    "description" TEXT,
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "budgetedHours" DECIMAL(8,2),
    "actualHours" DECIMAL(8,2),
    "budgetedAmount" DECIMAL(12,2),
    "actualCostToDate" DECIMAL(12,2),
    "plannedStartDate" DATE,
    "plannedEndDate" DATE,
    "actualStartDate" DATE,
    "actualEndDate" DATE,
    "sourceEstimateLineItemId" UUID,
    "sourceChangeOrderLineId" UUID,
    "phaseId" UUID,
    "wbsItemId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "ProjectTask_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTaskAssignment" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "assigneeId" UUID NOT NULL,
    "role" TEXT,
    "allocationPercent" DECIMAL(5,2),
    "startDate" DATE,
    "endDate" DATE,
    "assignedDate" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "projectId" UUID NOT NULL,
    "taskId" UUID NOT NULL,

    CONSTRAINT "ProjectTaskAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTaskAttachment" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" TEXT NOT NULL,
    "fileUrl" TEXT NOT NULL,
    "fileType" TEXT,
    "fileSize" INTEGER,
    "uploadedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "uploadedById" UUID NOT NULL,
    "taskId" UUID NOT NULL,
    "attachmentId" UUID,

    CONSTRAINT "ProjectTaskAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTaskChecklistItem" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "isCompleted" BOOLEAN NOT NULL DEFAULT false,
    "completedAt" TIMESTAMPTZ(6),
    "sortOrder" INTEGER NOT NULL DEFAULT 0,
    "taskId" UUID NOT NULL,

    CONSTRAINT "ProjectTaskChecklistItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTaskComment" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "content" TEXT NOT NULL,
    "mentionedMemberIds" JSONB,
    "isInternal" BOOLEAN NOT NULL DEFAULT false,
    "authoredById" UUID NOT NULL,
    "taskId" UUID NOT NULL,

    CONSTRAINT "ProjectTaskComment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectTaskDependency" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "dependencyType" "DependencyType" NOT NULL DEFAULT 'FINISH_TO_START',
    "lagDays" INTEGER DEFAULT 0,
    "predecessorTaskId" UUID NOT NULL,
    "successorTaskId" UUID NOT NULL,

    CONSTRAINT "ProjectTaskDependency_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ProjectType" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ProjectType_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomScanSession" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "projectId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "deletedByActorId" UUID,
    "auditCorrelationId" UUID,
    "deviceInfo" JSONB DEFAULT '{}',
    "status" "RoomScanStatus" NOT NULL DEFAULT 'PENDING',
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "location" JSONB DEFAULT '{}',
    "totalFiles" INTEGER NOT NULL DEFAULT 0,
    "notes" TEXT,
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomScanSession_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomScanFile" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "sessionId" UUID NOT NULL,
    "fileName" TEXT NOT NULL,
    "fileType" "RoomFileType" NOT NULL,
    "fileSizeMB" DECIMAL(10,2),
    "storagePath" TEXT NOT NULL,
    "checksum" TEXT,
    "uploadedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomScanFile_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomModel" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "sessionId" UUID,
    "projectId" UUID,
    "estimateId" UUID,
    "documentGroupId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "deletedByActorId" UUID,
    "auditCorrelationId" UUID,
    "modelName" TEXT NOT NULL,
    "modelType" "RoomModelType" NOT NULL,
    "modelUrl" TEXT,
    "polygonCount" INTEGER,
    "surfaceArea" DECIMAL(12,2),
    "volume" DECIMAL(12,2),
    "unit" "MeasurementUnit" NOT NULL DEFAULT 'METER',
    "generatedAt" TIMESTAMPTZ(6),
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomModel_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomMeasurement" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "sessionId" UUID,
    "modelId" UUID,
    "label" TEXT NOT NULL,
    "value" DECIMAL(12,3) NOT NULL,
    "unit" "MeasurementUnit" NOT NULL,
    "axis" "Axis",
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomMeasurement_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomObject" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "modelId" UUID NOT NULL,
    "objectType" "RoomObjectType" NOT NULL,
    "position" JSONB DEFAULT '{}',
    "dimensions" JSONB DEFAULT '{}',
    "material" TEXT,
    "confidence" DECIMAL(4,3),
    "detectedAt" TIMESTAMPTZ(6),
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomObject_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomSurface" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "modelId" UUID NOT NULL,
    "surfaceType" "RoomSurfaceType" NOT NULL,
    "area" DECIMAL(12,2),
    "material" TEXT,
    "textureUrl" TEXT,
    "colorHex" TEXT,
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomSurface_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomAnnotation" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "modelId" UUID NOT NULL,
    "createdByActorId" UUID,
    "label" TEXT NOT NULL,
    "description" TEXT,
    "position" JSONB DEFAULT '{}',
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomAnnotation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomExport" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "modelId" UUID NOT NULL,
    "documentGroupId" UUID,
    "createdByActorId" UUID,
    "exportType" "RoomExportType" NOT NULL,
    "status" "RoomProcessingStatus" NOT NULL DEFAULT 'QUEUED',
    "fileUrl" TEXT,
    "fileSizeMB" DECIMAL(10,2),
    "generatedAt" TIMESTAMPTZ(6),
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomExport_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomPlanPreset" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "presetType" "RoomPresetType" NOT NULL,
    "config" JSONB NOT NULL DEFAULT '{}',
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomPlanPreset_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RoomProcessingJob" (
    "id" UUID NOT NULL,
    "tenantId" UUID NOT NULL,
    "sessionId" UUID NOT NULL,
    "jobType" "RoomJobType" NOT NULL,
    "status" "RoomProcessingStatus" NOT NULL DEFAULT 'QUEUED',
    "progress" INTEGER NOT NULL DEFAULT 0,
    "auditCorrelationId" UUID,
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "errorMessage" TEXT,
    "metadata" JSONB DEFAULT '{}',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),

    CONSTRAINT "RoomProcessingJob_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PunchList" (
    "id" UUID NOT NULL,
    "status" "WorkItemStatus" NOT NULL DEFAULT 'OPEN',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "dueDate" DATE,
    "assigneeId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "PunchList_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PunchListItem" (
    "id" UUID NOT NULL,
    "status" "WorkItemStatus" NOT NULL DEFAULT 'OPEN',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "dueDate" DATE,
    "completedAt" TIMESTAMPTZ(6),
    "assigneeId" UUID,
    "punchListId" UUID NOT NULL,

    CONSTRAINT "PunchListItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PurchaseOrder" (
    "id" UUID NOT NULL,
    "status" "PurchaseOrderStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "poNumber" VARCHAR(50) NOT NULL,
    "orderDate" DATE NOT NULL,
    "expectedDate" DATE,
    "totalAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "vendorId" UUID NOT NULL,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",

    CONSTRAINT "PurchaseOrder_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PurchaseOrderApproval" (
    "id" UUID NOT NULL,
    "status" "ProcurementApprovalStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "purchaseOrderId" UUID NOT NULL,
    "approverId" UUID,
    "decision" "ProcurementApprovalStatus" NOT NULL DEFAULT 'PENDING',
    "approvedAt" TIMESTAMPTZ(6),
    "decisionAt" TIMESTAMPTZ(6),
    "comment" TEXT,
    "approvalLevel" INTEGER NOT NULL DEFAULT 1,
    "delegatedFrom" UUID,
    "requestedAmount" DECIMAL(12,2) NOT NULL,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',

    CONSTRAINT "PurchaseOrderApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "PurchaseOrderLine" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "description" VARCHAR(500) NOT NULL,
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitOfMeasure" "ProcurementUnitOfMeasure" NOT NULL DEFAULT 'EA',
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "lineTotal" DECIMAL(15,2) NOT NULL,
    "receiptTolerancePercent" DECIMAL(5,2),
    "priceTolerancePercent" DECIMAL(5,2),
    "itemCode" VARCHAR(50),
    "itemDescription" TEXT,
    "requestedDate" DATE,
    "promisedDate" DATE,
    "projectId" UUID,
    "budgetLineId" UUID,
    "costCode" VARCHAR(50),
    "purchaseOrderId" UUID NOT NULL,

    CONSTRAINT "PurchaseOrderLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Quote" (
    "id" UUID NOT NULL,
    "status" "QuoteStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "quoteNumber" CITEXT NOT NULL,
    "name" VARCHAR(255),
    "description" TEXT,
    "validUntil" DATE,
    "totalAmount" DECIMAL(15,2) NOT NULL,
    "subtotal" DECIMAL(15,2),
    "taxAmount" DECIMAL(15,2),
    "discountAmount" DECIMAL(15,2),
    "sentDate" DATE,
    "viewedDate" DATE,
    "acceptedDate" DATE,
    "clientNotes" TEXT,
    "internalNotes" TEXT,
    "specialRequirements" TEXT,
    "terms" TEXT,
    "accountId" UUID,
    "contactId" UUID,
    "leadId" UUID,

    CONSTRAINT "Quote_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "QuoteLineItem" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "total" DECIMAL(12,2) NOT NULL,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,
    "priceListItemId" UUID,
    "quoteId" UUID NOT NULL,

    CONSTRAINT "QuoteLineItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RFI" (
    "id" UUID NOT NULL,
    "status" "RFIStatus" NOT NULL DEFAULT 'SUBMITTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "number" TEXT NOT NULL,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "category" TEXT,
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "dueDate" DATE,
    "submitterId" UUID NOT NULL,
    "assigneeId" UUID,
    "projectId" UUID NOT NULL,

    CONSTRAINT "RFI_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RFIReply" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "message" TEXT NOT NULL,
    "replyType" "RFIReplyType" NOT NULL DEFAULT 'RESPONSE',
    "authorId" UUID NOT NULL,
    "rfiId" UUID NOT NULL,

    CONSTRAINT "RFIReply_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RFQLine" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "rfqId" UUID NOT NULL,
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "description" VARCHAR(500) NOT NULL,
    "quantity" DECIMAL(12,3) NOT NULL,
    "itemCode" VARCHAR(50),
    "itemDescription" TEXT,
    "itemCategory" VARCHAR(100),
    "unitOfMeasure" "ProcurementUnitOfMeasure" NOT NULL DEFAULT 'EA',
    "technicalSpecs" TEXT,
    "qualityStandard" VARCHAR(100),
    "deliveryTerms" VARCHAR(200),
    "specRevision" VARCHAR(20),
    "targetUnitPrice" DECIMAL(12,2),
    "maxUnitPrice" DECIMAL(12,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "projectId" UUID,
    "budgetLineId" UUID,
    "costCode" VARCHAR(50),
    "requiredDeliveryDate" DATE,
    "deliveryLocation" VARCHAR(200),
    "internalNotes" TEXT,
    "vendorNotes" TEXT,

    CONSTRAINT "RFQLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RFQResponse" (
    "id" UUID NOT NULL,
    "status" "RFQResponseStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "rfqId" UUID NOT NULL,
    "vendorId" UUID NOT NULL,
    "responseNumber" VARCHAR(50) NOT NULL,
    "submittedAt" TIMESTAMPTZ(6),
    "validUntil" DATE,
    "totalAmount" DECIMAL(15,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "baseCurrencyAmount" DECIMAL(15,2),
    "paymentTerms" "PaymentTerms",
    "deliveryTerms" VARCHAR(200),
    "warranty" TEXT,
    "leadTime" INTEGER,
    "minimumOrderQuantity" DECIMAL(12,3),
    "shippingCost" DECIMAL(12,2),
    "shippingTerms" VARCHAR(100),
    "originLocation" VARCHAR(200),
    "isAlternative" BOOLEAN NOT NULL DEFAULT false,
    "alternativeReason" TEXT,
    "vendorNotes" TEXT,
    "internalNotes" TEXT,
    "evaluationScore" DECIMAL(5,2),
    "evaluatedBy" UUID,
    "evaluatedAt" TIMESTAMPTZ(6),
    "isAwarded" BOOLEAN NOT NULL DEFAULT false,
    "awardedAt" TIMESTAMPTZ(6),
    "awardedBy" UUID,
    "awardReason" TEXT,

    CONSTRAINT "RFQResponse_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RFQResponseLine" (
    "id" UUID NOT NULL,
    "status" "ProcurementChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "rfqResponseId" UUID NOT NULL,
    "rfqLineId" UUID,
    "lineNumber" INTEGER NOT NULL DEFAULT 1,
    "itemDescription" VARCHAR(500) NOT NULL,
    "itemCode" VARCHAR(50),
    "quantity" DECIMAL(12,3) NOT NULL,
    "unitOfMeasure" "ProcurementUnitOfMeasure" NOT NULL DEFAULT 'EA',
    "unitPrice" DECIMAL(12,2) NOT NULL,
    "listPrice" DECIMAL(12,2),
    "discountPercent" DECIMAL(5,2),
    "discountAmount" DECIMAL(12,2),
    "netUnitPrice" DECIMAL(12,2) NOT NULL,
    "lineTotal" DECIMAL(15,2) NOT NULL,
    "taxAmount" DECIMAL(12,2),
    "taxRate" DECIMAL(5,4),
    "isTaxExempt" BOOLEAN NOT NULL DEFAULT false,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "exchangeRate" DECIMAL(10,6),
    "baseCurrencyAmount" DECIMAL(15,2),
    "deliveryDays" INTEGER,
    "deliveryDate" DATE,
    "shippingCost" DECIMAL(12,2),
    "originLocation" VARCHAR(200),
    "brand" VARCHAR(100),
    "model" VARCHAR(100),
    "partNumber" VARCHAR(100),
    "technicalSpecs" TEXT,
    "certifications" TEXT,
    "warranty" VARCHAR(200),
    "qualityGrade" "QualityGrade",
    "vendorPartNumber" VARCHAR(100),
    "vendorNotes" TEXT,
    "alternativeItem" BOOLEAN NOT NULL DEFAULT false,
    "alternativeReason" TEXT,
    "internalNotes" TEXT,
    "evaluationScore" DECIMAL(5,2),
    "isRecommended" BOOLEAN NOT NULL DEFAULT false,
    "isAwarded" BOOLEAN NOT NULL DEFAULT false,
    "awardedQuantity" DECIMAL(12,3),
    "purchaseOrderLineId" UUID,

    CONSTRAINT "RFQResponseLine_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ReasonCode" (
    "id" UUID NOT NULL,
    "status" "ReasonCodeStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "codeValue" VARCHAR(50) NOT NULL,
    "codeName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "codeType" "ReasonCodeType" NOT NULL DEFAULT 'GENERAL',
    "category" "ReasonCodeCategory" NOT NULL DEFAULT 'OTHER',
    "isSystemCode" BOOLEAN NOT NULL DEFAULT false,
    "severity" VARCHAR(20),
    "impact" VARCHAR(20),
    "applicableEntities" TEXT,
    "moduleScope" VARCHAR(50),
    "departmentScope" UUID,
    "requiresComments" BOOLEAN NOT NULL DEFAULT true,
    "requiresEvidence" BOOLEAN NOT NULL DEFAULT false,
    "autoActions" TEXT,
    "displayOrder" INTEGER NOT NULL DEFAULT 1,
    "colorCode" VARCHAR(7),
    "iconName" VARCHAR(50),
    "blocksApproval" BOOLEAN NOT NULL DEFAULT true,
    "allowOverride" BOOLEAN NOT NULL DEFAULT false,
    "overrideLevel" INTEGER,
    "usageCount" INTEGER NOT NULL DEFAULT 0,
    "lastUsedAt" TIMESTAMPTZ(6),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "retiredAt" TIMESTAMPTZ(6),
    "retiredReason" TEXT,
    "localizedNames" TEXT,
    "localizedDescs" TEXT,

    CONSTRAINT "ReasonCode_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Reconciliation" (
    "id" UUID NOT NULL,
    "status" "ReconciliationStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "reconciliationNumber" TEXT NOT NULL,
    "startDate" TIMESTAMPTZ(6) NOT NULL,
    "endDate" TIMESTAMPTZ(6) NOT NULL,
    "statementEndingBalance" DECIMAL(12,2) NOT NULL,
    "calculatedEndingBalance" DECIMAL(12,2),
    "difference" DECIMAL(12,2),
    "notes" TEXT,
    "bankAccountId" UUID NOT NULL,
    "reconciledById" UUID,
    "reconciledAt" TIMESTAMPTZ(6),
    "reviewedById" UUID,
    "reviewedAt" TIMESTAMPTZ(6),
    "reviewNotes" TEXT,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "Reconciliation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Refund" (
    "id" UUID NOT NULL,
    "status" "RefundStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "refundNumber" TEXT NOT NULL,
    "refundDate" TIMESTAMPTZ(6) NOT NULL,
    "amount" DECIMAL(12,2) NOT NULL,
    "currency" TEXT NOT NULL DEFAULT 'USD',
    "reason" TEXT,
    "referenceNumber" TEXT,
    "notes" TEXT,
    "paymentId" UUID NOT NULL,
    "processedById" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "metadata" JSONB,

    CONSTRAINT "Refund_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Region" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "Region_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Reimbursement" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "reimbursementCode" CITEXT NOT NULL,
    "reimbursementName" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "reimbursementType" VARCHAR(50) NOT NULL,
    "rate" DECIMAL(12,4),
    "amount" DECIMAL(12,4),
    "minimumAmount" DECIMAL(12,4),
    "maximumAmount" DECIMAL(12,4),
    "annualLimit" DECIMAL(12,4),
    "monthlyLimit" DECIMAL(12,4),
    "isTaxable" BOOLEAN NOT NULL DEFAULT false,
    "taxCategory" VARCHAR(50),
    "requiresReceipts" BOOLEAN NOT NULL DEFAULT true,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT true,
    "approvalLevel" INTEGER DEFAULT 1,
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "employeeGroup" VARCHAR(50),
    "department" VARCHAR(50),
    "jobTitle" VARCHAR(100),
    "glAccount" VARCHAR(50),
    "expenseAccount" VARCHAR(50),
    "costCenter" VARCHAR(50),

    CONSTRAINT "Reimbursement_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ReportDefinition" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "statusEnum" "TemplateStatus" DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "code" VARCHAR(50),
    "description" TEXT,
    "definition" JSONB,
    "tags" VARCHAR(255),
    "isPublished" BOOLEAN NOT NULL DEFAULT false,
    "publishedAt" TIMESTAMPTZ(6),

    CONSTRAINT "ReportDefinition_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RequestForQuote" (
    "id" UUID NOT NULL,
    "status" "RFQStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "rfqNumber" VARCHAR(50) NOT NULL,
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "publishedAt" TIMESTAMPTZ(6),
    "responsesDue" TIMESTAMPTZ(6) NOT NULL,
    "evaluationBy" TIMESTAMPTZ(6),
    "firstResponseAt" TIMESTAMPTZ(6),
    "projectId" UUID,
    "budgetTotal" DECIMAL(15,2),
    "requirements" TEXT,
    "termsConditions" TEXT,

    CONSTRAINT "RequestForQuote_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ResourceAllocation" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "resourceType" "ResourceType" NOT NULL DEFAULT 'HUMAN',
    "resourceId" UUID,
    "resourceName" VARCHAR(255) NOT NULL,
    "allocationType" "AllocationType" NOT NULL DEFAULT 'FULL_TIME',
    "allocationUnit" VARCHAR(20) NOT NULL,
    "allocatedAmount" DECIMAL(10,2) NOT NULL,
    "availableAmount" DECIMAL(10,2),
    "startDate" DATE NOT NULL,
    "endDate" DATE NOT NULL,
    "estimatedHours" DECIMAL(8,2),
    "actualHours" DECIMAL(8,2),
    "costPerUnit" DECIMAL(10,2),
    "budgetedCost" DECIMAL(12,2),
    "actualCost" DECIMAL(12,2),
    "assignedById" UUID NOT NULL,
    "assignedToId" UUID,
    "priority" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "allocationStatus" "AllocationStatus" NOT NULL DEFAULT 'PLANNED',
    "utilizationRate" DECIMAL(5,2),
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "scheduleId" UUID,
    "projectId" UUID,
    "taskId" UUID,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "ResourceAllocation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RetentionSchedule" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "RetentionSchedule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ReturnReminder" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "reminderNumber" VARCHAR(50) NOT NULL,
    "reminderType" VARCHAR(50) NOT NULL,
    "reminderDate" TIMESTAMPTZ(6) NOT NULL,
    "dueDate" DATE NOT NULL,
    "overdueDate" DATE,
    "reminderStatus" VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    "priority" VARCHAR(20) NOT NULL DEFAULT 'NORMAL',
    "urgency" VARCHAR(20) NOT NULL DEFAULT 'STANDARD',
    "assignedTo" UUID NOT NULL,
    "reminderFor" UUID NOT NULL,
    "escalatedTo" UUID,
    "assetId" UUID,
    "inventoryItemId" UUID,
    "referenceType" VARCHAR(50),
    "referenceId" UUID,
    "subject" VARCHAR(255) NOT NULL,
    "message" TEXT NOT NULL,
    "instructions" TEXT,
    "escalationLevel" INTEGER NOT NULL DEFAULT 0,
    "maxEscalations" INTEGER NOT NULL DEFAULT 3,
    "nextReminderDate" TIMESTAMPTZ(6),
    "completedDate" TIMESTAMPTZ(6),

    CONSTRAINT "ReturnReminder_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ReturnReminderAttempt" (
    "id" UUID NOT NULL,
    "status" "InventoryChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "attemptNumber" INTEGER NOT NULL DEFAULT 1,
    "attemptDate" TIMESTAMPTZ(6) NOT NULL,
    "attemptType" VARCHAR(50) NOT NULL,
    "attemptMethod" VARCHAR(50) NOT NULL,
    "attemptStatus" VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    "deliveryStatus" VARCHAR(50),
    "responseReceived" BOOLEAN NOT NULL DEFAULT false,
    "responseDate" TIMESTAMPTZ(6),
    "responseNotes" TEXT,
    "recipientEmail" CITEXT,
    "recipientPhone" VARCHAR(50),
    "messageSubject" VARCHAR(255),
    "messageBody" TEXT,
    "sentAt" TIMESTAMPTZ(6),
    "deliveredAt" TIMESTAMPTZ(6),
    "errorCode" VARCHAR(50),
    "errorMessage" TEXT,
    "returnReminderId" UUID NOT NULL,

    CONSTRAINT "ReturnReminderAttempt_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RiskFactor" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "RiskFactor_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Role" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "code" CITEXT NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "roleType" "RoleType" NOT NULL DEFAULT 'CUSTOM',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "priority" INTEGER NOT NULL DEFAULT 0,
    "parentRoleId" UUID,
    "inheritsPermissions" BOOLEAN NOT NULL DEFAULT true,
    "maxMembers" INTEGER,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "color" VARCHAR(7),
    "icon" VARCHAR(50),
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "Role_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "RolePermission" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "roleId" UUID NOT NULL,
    "permissionId" UUID NOT NULL,
    "memberId" UUID,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isInherited" BOOLEAN NOT NULL DEFAULT false,
    "isDenied" BOOLEAN NOT NULL DEFAULT false,
    "resourceType" VARCHAR(100),
    "resourceId" UUID,
    "contextData" JSONB,
    "validFrom" TIMESTAMPTZ(6),
    "validUntil" TIMESTAMPTZ(6),
    "conditions" JSONB,
    "assignedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "assignedByMemberId" UUID,
    "assignmentReason" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedByMemberId" UUID,
    "revokedAt" TIMESTAMPTZ(6),
    "revokedByMemberId" UUID,
    "revocationReason" TEXT,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "RolePermission_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ScenarioAssumption" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ScenarioAssumption_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ScenarioPlan" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ScenarioPlan_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ScenarioWhatIfRun" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ScenarioWhatIfRun_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Schedule" (
    "id" UUID NOT NULL,
    "status" "ScheduleStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "startDate" DATE NOT NULL,
    "endDate" DATE NOT NULL,
    "isBaseline" BOOLEAN NOT NULL DEFAULT false,
    "baselineDate" TIMESTAMPTZ(6),
    "projectId" UUID NOT NULL,

    CONSTRAINT "Schedule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ScheduleException" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "reason" VARCHAR(500) NOT NULL,
    "description" TEXT,
    "exceptionDate" DATE NOT NULL,
    "isWorkday" BOOLEAN NOT NULL DEFAULT false,
    "exceptionType" "ScheduleExceptionType" NOT NULL DEFAULT 'HOLIDAY',
    "affectedHours" DECIMAL(4,2),
    "isRecurring" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "scheduleId" UUID NOT NULL,

    CONSTRAINT "ScheduleException_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ScheduleRisk" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ScheduleRisk_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ServiceAccount" (
    "id" UUID NOT NULL,
    "status" "ServiceAccountStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "email" CITEXT,
    "accountType" "ServiceAccountType" NOT NULL DEFAULT 'API',
    "purpose" VARCHAR(255),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "lastUsedAt" TIMESTAMPTZ(6),
    "expiresAt" TIMESTAMPTZ(6),
    "allowedIpRanges" VARCHAR(50)[],
    "allowedDomains" VARCHAR(100)[],
    "rateLimitPerHour" INTEGER DEFAULT 1000,
    "rateLimitPerDay" INTEGER DEFAULT 10000,
    "ownerId" UUID NOT NULL,
    "managedByTeam" VARCHAR(100),
    "requiresMfa" BOOLEAN NOT NULL DEFAULT false,
    "monitoringEnabled" BOOLEAN NOT NULL DEFAULT true,
    "alertOnUsage" BOOLEAN NOT NULL DEFAULT false,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "ServiceAccount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ServiceAccountKey" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "serviceAccountId" UUID NOT NULL,
    "name" VARCHAR(100) NOT NULL,
    "keyId" VARCHAR(50) NOT NULL,
    "keyHash" VARCHAR(255) NOT NULL,
    "keyPrefix" VARCHAR(20) NOT NULL,
    "scopes" VARCHAR(100)[],
    "permissions" VARCHAR(100)[],
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "expiresAt" TIMESTAMPTZ(6),
    "lastUsedAt" TIMESTAMPTZ(6),
    "usageCount" INTEGER NOT NULL DEFAULT 0,
    "rateLimitPerHour" INTEGER,
    "rateLimitPerDay" INTEGER,
    "allowedIpRanges" VARCHAR(50)[],
    "rotatedFromKeyId" UUID,
    "rotatedAt" TIMESTAMPTZ(6),
    "createdById" UUID NOT NULL,
    "metadata" JSONB,

    CONSTRAINT "ServiceAccountKey_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ServiceType" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "ServiceType_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Session" (
    "id" UUID NOT NULL,
    "status" "SessionStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID NOT NULL,
    "memberId" UUID,
    "sessionToken" VARCHAR(255) NOT NULL,
    "hashedToken" VARCHAR(255) NOT NULL,
    "refreshToken" VARCHAR(255),
    "hashedRefreshToken" VARCHAR(255),
    "expiresAt" TIMESTAMPTZ(6) NOT NULL,
    "refreshExpiresAt" TIMESTAMPTZ(6),
    "lastAccessedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "deviceId" UUID,
    "deviceFingerprint" VARCHAR(255),
    "userAgent" TEXT,
    "ipAddress" VARCHAR(45),
    "location" JSONB,
    "isSecure" BOOLEAN NOT NULL DEFAULT true,
    "isMfaVerified" BOOLEAN NOT NULL DEFAULT false,
    "riskScore" INTEGER NOT NULL DEFAULT 0,
    "terminatedAt" TIMESTAMPTZ(6),
    "terminationReason" TEXT,
    "terminatedByMemberId" UUID,
    "activityCount" INTEGER NOT NULL DEFAULT 0,
    "lastActivityType" VARCHAR(100),
    "metadata" JSONB,

    CONSTRAINT "Session_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SignatureArtifact" (
    "id" UUID NOT NULL,
    "status" "ArtifactStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "envelopeId" UUID NOT NULL,
    "sessionId" UUID,
    "artifactType" "ArtifactType" NOT NULL,
    "artifactName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "fileObjectId" UUID NOT NULL,
    "fileName" VARCHAR(255) NOT NULL,
    "fileSize" BIGINT NOT NULL,
    "mimeType" VARCHAR(100) NOT NULL,
    "fileHash" VARCHAR(255),
    "generatedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "generatedBy" VARCHAR(100),
    "generationTime" INTEGER DEFAULT 0,
    "templateUsed" VARCHAR(100),
    "pageCount" INTEGER DEFAULT 0,
    "signatureCount" INTEGER DEFAULT 0,
    "initialCount" INTEGER DEFAULT 0,
    "fieldCount" INTEGER DEFAULT 0,
    "recipientCount" INTEGER DEFAULT 0,
    "artifactVersion" VARCHAR(20) NOT NULL DEFAULT '1.0',
    "isLatest" BOOLEAN NOT NULL DEFAULT true,
    "parentArtifactId" UUID,
    "isEncrypted" BOOLEAN NOT NULL DEFAULT false,
    "encryptionMethod" VARCHAR(50),
    "certificateInfo" TEXT,
    "tamperSeal" VARCHAR(255),
    "complianceFlags" VARCHAR(50)[],
    "providerArtifactId" VARCHAR(255),
    "providerUrl" VARCHAR(1000),
    "providerMetadata" TEXT,
    "syncStatus" VARCHAR(20) DEFAULT 'SYNCED',
    "lastSyncAt" TIMESTAMPTZ(6),
    "isPublic" BOOLEAN NOT NULL DEFAULT false,
    "accessUrl" VARCHAR(1000),
    "accessExpiry" TIMESTAMPTZ(6),
    "downloadCount" INTEGER NOT NULL DEFAULT 0,
    "lastDownloadAt" TIMESTAMPTZ(6),
    "retentionDate" TIMESTAMPTZ(6),
    "archivalDate" TIMESTAMPTZ(6),
    "isArchived" BOOLEAN NOT NULL DEFAULT false,
    "archivalLocation" VARCHAR(255),
    "disposalDate" TIMESTAMPTZ(6),

    CONSTRAINT "SignatureArtifact_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SignatureEvent" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "signatureType" VARCHAR(50) NOT NULL,
    "signedById" UUID NOT NULL,
    "signatureHash" VARCHAR(255) NOT NULL,
    "signatureData" JSONB,
    "ipAddress" VARCHAR(45),
    "userAgent" TEXT,
    "signedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "verificationMethod" VARCHAR(50),

    CONSTRAINT "SignatureEvent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SignatureIntent" (
    "id" UUID NOT NULL,
    "status" "SignatureIntentStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "sessionId" UUID NOT NULL,
    "recipientId" UUID NOT NULL,
    "intentType" "SignatureIntentType" NOT NULL,
    "signatureType" "SignatureType" NOT NULL DEFAULT 'ELECTRONIC',
    "action" VARCHAR(50) NOT NULL,
    "pageNumber" INTEGER,
    "positionX" DECIMAL(10,4),
    "positionY" DECIMAL(10,4),
    "width" DECIMAL(10,4),
    "height" DECIMAL(10,4),
    "signatureText" VARCHAR(255),
    "initialText" VARCHAR(10),
    "dateText" VARCHAR(50),
    "customText" VARCHAR(255),
    "checkboxChecked" BOOLEAN,
    "dropdownValue" VARCHAR(100),
    "reason" TEXT,
    "intentedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "completedAt" TIMESTAMPTZ(6),
    "processedAt" TIMESTAMPTZ(6),
    "isValid" BOOLEAN NOT NULL DEFAULT true,
    "validationHash" VARCHAR(255),
    "biometricData" TEXT,
    "pressurePoints" TEXT,
    "timeStamps" TEXT,
    "deviceType" VARCHAR(50),
    "inputMethod" VARCHAR(50),
    "deviceId" VARCHAR(255),
    "gpsLocation" VARCHAR(255),
    "networkInfo" VARCHAR(255),
    "providerIntentId" VARCHAR(255),
    "providerData" TEXT,
    "isError" BOOLEAN NOT NULL DEFAULT false,
    "errorMessage" TEXT,
    "errorCode" VARCHAR(50),
    "retryCount" INTEGER NOT NULL DEFAULT 0,
    "lastRetryAt" TIMESTAMPTZ(6),

    CONSTRAINT "SignatureIntent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SignatureSession" (
    "id" UUID NOT NULL,
    "status" "SignatureSessionStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "envelopeId" UUID NOT NULL,
    "recipientId" UUID NOT NULL,
    "sessionToken" VARCHAR(255) NOT NULL,
    "sessionUrl" VARCHAR(1000),
    "returnUrl" VARCHAR(500),
    "startedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "lastActivity" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "completedAt" TIMESTAMPTZ(6),
    "expiredAt" TIMESTAMPTZ(6),
    "expiresAt" TIMESTAMPTZ(6) NOT NULL,
    "ipAddress" VARCHAR(45),
    "userAgent" VARCHAR(500),
    "deviceInfo" VARCHAR(255),
    "location" VARCHAR(255),
    "timezone" VARCHAR(50),
    "authenticationAttempts" INTEGER NOT NULL DEFAULT 0,
    "authenticationSuccess" BOOLEAN NOT NULL DEFAULT false,
    "authenticationMethod" VARCHAR(50),
    "authenticationAt" TIMESTAMPTZ(6),
    "documentsViewed" INTEGER NOT NULL DEFAULT 0,
    "pagesViewed" INTEGER NOT NULL DEFAULT 0,
    "timeSpentSeconds" INTEGER NOT NULL DEFAULT 0,
    "activityLog" TEXT,
    "providerSessionId" VARCHAR(255),
    "providerUrl" VARCHAR(1000),
    "providerToken" VARCHAR(500),
    "errorCount" INTEGER NOT NULL DEFAULT 0,
    "lastError" TEXT,
    "lastErrorAt" TIMESTAMPTZ(6),
    "recoveryToken" VARCHAR(255),

    CONSTRAINT "SignatureSession_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SnapshotCube" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "code" VARCHAR(50),
    "description" TEXT,
    "grain" VARCHAR(50),
    "isMaterialized" BOOLEAN NOT NULL DEFAULT true,
    "latestPartitionAt" TIMESTAMPTZ(6),

    CONSTRAINT "SnapshotCube_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SnapshotCubePartition" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "cubeId" UUID NOT NULL,
    "partitionKey" VARCHAR(100) NOT NULL,
    "periodStart" DATE NOT NULL,
    "periodEnd" DATE,
    "recordCount" INTEGER,
    "storageUrl" VARCHAR(500),

    CONSTRAINT "SnapshotCubePartition_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "StateProvince" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "StateProvince_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Submittal" (
    "id" UUID NOT NULL,
    "status" "SubmittalStatus" NOT NULL DEFAULT 'SUBMITTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "submittedDate" DATE,
    "reviewDate" DATE,
    "projectId" UUID NOT NULL,

    CONSTRAINT "Submittal_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SubmittalApproval" (
    "id" UUID NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "decision" "SubmittalApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "approverId" UUID,
    "requestedAt" TIMESTAMPTZ(6),
    "decidedAt" TIMESTAMPTZ(6),
    "comments" TEXT,
    "submittalId" UUID NOT NULL,

    CONSTRAINT "SubmittalApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SubmittalItem" (
    "id" UUID NOT NULL,
    "status" "SubmittalItemStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "submittedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "dueDate" DATE,
    "reviewerId" UUID,
    "submittalId" UUID NOT NULL,

    CONSTRAINT "SubmittalItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SyncJob" (
    "id" UUID NOT NULL,
    "status" "SyncJobStatus" NOT NULL DEFAULT 'QUEUED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "integrationConnectionId" UUID NOT NULL,
    "jobName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "syncJobType" "SyncJobType" NOT NULL DEFAULT 'MANUAL_SYNC',
    "syncDirection" "SyncDirection" NOT NULL DEFAULT 'BIDIRECTIONAL',
    "jobPriority" "JobPriority" NOT NULL DEFAULT 'NORMAL',
    "scheduledAt" TIMESTAMPTZ(6),
    "startedAt" TIMESTAMPTZ(6),
    "completedAt" TIMESTAMPTZ(6),
    "estimatedDuration" INTEGER,
    "actualDuration" INTEGER,
    "cronExpression" VARCHAR(100),
    "isRecurring" BOOLEAN NOT NULL DEFAULT false,
    "nextRunAt" TIMESTAMPTZ(6),
    "lastRunAt" TIMESTAMPTZ(6),
    "maxRuns" INTEGER,
    "currentRunCount" INTEGER NOT NULL DEFAULT 0,
    "entityTypes" TEXT,
    "entityFilters" TEXT,
    "dateRangeFrom" TIMESTAMPTZ(6),
    "dateRangeTo" TIMESTAMPTZ(6),
    "batchSize" INTEGER DEFAULT 100,
    "maxRecords" INTEGER,
    "executionContext" TEXT,
    "configurationSnapshot" TEXT,
    "environmentVariables" TEXT,
    "processId" VARCHAR(100),
    "totalRecords" INTEGER DEFAULT 0,
    "processedRecords" INTEGER NOT NULL DEFAULT 0,
    "successfulRecords" INTEGER NOT NULL DEFAULT 0,
    "failedRecords" INTEGER NOT NULL DEFAULT 0,
    "skippedRecords" INTEGER NOT NULL DEFAULT 0,
    "progressPercentage" DECIMAL(5,2),
    "retryStrategy" "RetryStrategy" NOT NULL DEFAULT 'EXPONENTIAL',
    "maxRetries" INTEGER NOT NULL DEFAULT 3,
    "currentRetryCount" INTEGER NOT NULL DEFAULT 0,
    "retryDelaySeconds" INTEGER DEFAULT 60,
    "lastRetryAt" TIMESTAMPTZ(6),
    "dependsOnJobs" TEXT,
    "blockedByJobs" TEXT,
    "triggersJobs" TEXT,
    "parentJobId" UUID,
    "isParallelExecution" BOOLEAN NOT NULL DEFAULT false,
    "enableAlerts" BOOLEAN NOT NULL DEFAULT true,
    "alertOnFailure" BOOLEAN NOT NULL DEFAULT true,
    "alertOnSuccess" BOOLEAN NOT NULL DEFAULT false,
    "alertRecipients" TEXT,
    "slackWebhookUrl" VARCHAR(500),
    "memoryUsageMB" INTEGER,
    "cpuUsagePercent" DECIMAL(5,2),
    "networkBytesSent" BIGINT DEFAULT 0,
    "networkBytesReceived" BIGINT DEFAULT 0,
    "apiCallsCount" INTEGER NOT NULL DEFAULT 0,
    "logLevel" VARCHAR(20),
    "enableDetailedLogging" BOOLEAN NOT NULL DEFAULT false,
    "logRetentionDays" INTEGER DEFAULT 30,
    "debugMode" BOOLEAN NOT NULL DEFAULT false,
    "externalJobId" VARCHAR(255),
    "externalJobUrl" VARCHAR(500),
    "webhookUrl" VARCHAR(500),
    "callbackData" TEXT,
    "resultData" TEXT,
    "outputFiles" TEXT,
    "errorSummary" TEXT,
    "successSummary" TEXT,

    CONSTRAINT "SyncJob_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SyncLog" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "globalId" UUID NOT NULL,
    "auditCorrelationId" UUID,
    "dataClassification" VARCHAR(50) NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "syncJobId" UUID NOT NULL,
    "logLevel" "LogLevel" NOT NULL DEFAULT 'INFO',
    "logType" "LogType" NOT NULL DEFAULT 'EXECUTION',
    "logCategory" "LogCategory" NOT NULL DEFAULT 'SYSTEM',
    "message" TEXT NOT NULL,
    "detailedMessage" TEXT,
    "structuredData" TEXT,
    "exceptionDetails" TEXT,
    "stackTrace" TEXT,
    "httpMethod" VARCHAR(10),
    "requestUrl" VARCHAR(1000),
    "requestHeaders" TEXT,
    "requestBody" TEXT,
    "responseStatus" INTEGER,
    "responseHeaders" TEXT,
    "responseBody" TEXT,
    "responseSize" INTEGER,
    "executionStart" TIMESTAMPTZ(6),
    "executionEnd" TIMESTAMPTZ(6),
    "executionDurationMs" INTEGER,
    "memoryUsedMB" INTEGER,
    "cpuUsagePercent" DECIMAL(5,2),
    "recordsProcessed" INTEGER DEFAULT 0,
    "recordsSuccessful" INTEGER DEFAULT 0,
    "recordsFailed" INTEGER DEFAULT 0,
    "bytesProcessed" BIGINT DEFAULT 0,
    "itemsCreated" INTEGER DEFAULT 0,
    "itemsUpdated" INTEGER DEFAULT 0,
    "itemsDeleted" INTEGER DEFAULT 0,
    "externalSystemId" VARCHAR(255),
    "externalTransactionId" VARCHAR(255),
    "apiCallId" VARCHAR(255),
    "rateLimitRemaining" INTEGER,
    "rateLimitReset" TIMESTAMPTZ(6),
    "errorCode" VARCHAR(50),
    "errorType" VARCHAR(100),
    "errorSeverity" VARCHAR(20),
    "isRetriable" BOOLEAN,
    "retryAttempt" INTEGER DEFAULT 0,
    "maxRetries" INTEGER,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" VARCHAR(255),
    "correlationId" UUID,
    "sessionId" UUID,
    "userId" UUID,
    "batchId" UUID,
    "ipAddress" VARCHAR(45),
    "userAgent" VARCHAR(500),
    "containsPII" BOOLEAN NOT NULL DEFAULT false,
    "complianceFlags" TEXT,
    "sensitiveDataMasked" BOOLEAN NOT NULL DEFAULT true,
    "stepName" VARCHAR(100),
    "stepOrder" INTEGER,
    "totalSteps" INTEGER,
    "dependentJobIds" TEXT,
    "triggeredByEvent" VARCHAR(100),
    "environment" VARCHAR(50),
    "serverName" VARCHAR(100),
    "processId" INTEGER,
    "threadId" VARCHAR(50),
    "applicationVersion" VARCHAR(50),
    "tags" TEXT,
    "customFields" TEXT,
    "sourceFile" VARCHAR(255),
    "sourceFunction" VARCHAR(100),
    "sourceLineNumber" INTEGER,

    CONSTRAINT "SyncLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SyncState" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "SyncState_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SystemLog" (
    "id" UUID NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "timestamp" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "level" "LogLevel" NOT NULL DEFAULT 'INFO',
    "category" "LogCategory" NOT NULL DEFAULT 'SYSTEM',
    "type" "LogType" NOT NULL DEFAULT 'EXECUTION',
    "message" TEXT NOT NULL,
    "details" TEXT,
    "entityType" VARCHAR(100),
    "entityId" UUID,
    "requestId" UUID,
    "correlationId" UUID,
    "traceId" VARCHAR(64),
    "spanId" VARCHAR(64),
    "serviceName" VARCHAR(100),
    "environment" VARCHAR(20),
    "environmentEnum" "DeploymentEnvironment",
    "source" VARCHAR(100),
    "ipAddress" VARCHAR(45),
    "tags" VARCHAR(50)[],
    "metadata" JSONB,

    CONSTRAINT "SystemLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Task" (
    "id" UUID NOT NULL,
    "status" "WorkItemStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "taskType" "TaskType" NOT NULL DEFAULT 'OPERATIONAL',
    "priority" "TaskPriority" NOT NULL DEFAULT 'MEDIUM',
    "businessImpact" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "dueDate" DATE,
    "startDate" DATE,
    "completedAt" TIMESTAMPTZ(6),
    "estimatedHours" DECIMAL(8,2),
    "actualHours" DECIMAL(8,2),
    "approvalRequired" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "approvalSignatureEventId" UUID,
    "projectId" UUID,
    "scheduleId" UUID,

    CONSTRAINT "Task_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaskAssignment" (
    "id" UUID NOT NULL,
    "status" "TaskChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "assignmentRole" "AssignmentRole" NOT NULL DEFAULT 'ASSIGNEE',
    "notes" TEXT,
    "estimatedHours" DECIMAL(8,2),
    "actualHours" DECIMAL(8,2),
    "dailyHours" DECIMAL(4,2),
    "workloadWeight" DECIMAL(5,2),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "acceptedAt" TIMESTAMPTZ(6),
    "declinedAt" TIMESTAMPTZ(6),
    "startDate" DATE,
    "endDate" DATE,
    "signatureEventId" UUID,
    "taskId" UUID NOT NULL,
    "memberId" UUID NOT NULL,
    "projectId" UUID,

    CONSTRAINT "TaskAssignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaskAttachment" (
    "id" UUID NOT NULL,
    "status" "TaskChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "fileName" TEXT NOT NULL,
    "mimeType" TEXT,
    "fileSize" INTEGER,
    "uploadedById" UUID,
    "attachmentType" "TaskAttachmentType" NOT NULL DEFAULT 'DOCUMENT',
    "description" TEXT,
    "taskId" UUID NOT NULL,
    "fileObjectId" UUID,
    "documentGroupId" UUID,

    CONSTRAINT "TaskAttachment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaskChecklistItem" (
    "id" UUID NOT NULL,
    "status" "TaskChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "title" TEXT NOT NULL,
    "description" TEXT,
    "sortOrder" INTEGER NOT NULL DEFAULT 0,
    "isCompleted" BOOLEAN NOT NULL DEFAULT false,
    "completedAt" TIMESTAMPTZ(6),
    "completedById" UUID,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "requiresSignature" BOOLEAN NOT NULL DEFAULT false,
    "validatedAt" TIMESTAMPTZ(6),
    "validatedById" UUID,
    "validationSignatureEventId" UUID,
    "validationNotes" TEXT,
    "taskId" UUID NOT NULL,

    CONSTRAINT "TaskChecklistItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaskDependency" (
    "id" UUID NOT NULL,
    "status" "TaskChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "dependencyType" "DependencyType" NOT NULL DEFAULT 'FINISH_TO_START',
    "lagDays" INTEGER DEFAULT 0,
    "notes" TEXT,
    "predecessorId" UUID NOT NULL,
    "successorId" UUID NOT NULL,

    CONSTRAINT "TaskDependency_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaxJurisdiction" (
    "id" UUID NOT NULL,
    "status" "TaxJurisdictionStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'PUBLIC',
    "retentionPolicy" "RetentionPolicy",
    "jurisdictionCode" VARCHAR(20) NOT NULL,
    "jurisdictionName" VARCHAR(255) NOT NULL,
    "fullName" VARCHAR(500),
    "jurisdictionType" "TaxJurisdictionType" NOT NULL,
    "parentJurisdictionId" UUID,
    "countryCode" VARCHAR(2) NOT NULL,
    "stateCode" VARCHAR(10),
    "level" INTEGER NOT NULL DEFAULT 1,
    "taxAuthorityName" VARCHAR(255),
    "taxAuthorityCode" VARCHAR(50),
    "website" VARCHAR(500),
    "contactInfo" TEXT,
    "timeZone" VARCHAR(50),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "language" VARCHAR(5),
    "dateFormat" VARCHAR(20),
    "filingFrequency" VARCHAR(20),
    "dueDateDay" INTEGER,
    "extensionDays" INTEGER DEFAULT 0,

    CONSTRAINT "TaxJurisdiction_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TaxRate" (
    "id" UUID NOT NULL,
    "status" "TaxRateStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'PUBLIC',
    "retentionPolicy" "RetentionPolicy",
    "taxCode" VARCHAR(50) NOT NULL,
    "taxName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "taxType" "TaxRateType" NOT NULL,
    "calculationMethod" "TaxCalculationMethod" NOT NULL DEFAULT 'PERCENTAGE',
    "rate" DECIMAL(8,6) NOT NULL,
    "fixedAmount" DECIMAL(12,2),
    "minimumAmount" DECIMAL(12,2),
    "maximumAmount" DECIMAL(12,2),
    "taxJurisdictionId" UUID NOT NULL,
    "countryCode" VARCHAR(2) NOT NULL,
    "stateCode" VARCHAR(10),
    "cityCode" VARCHAR(10),
    "postalCode" VARCHAR(20),
    "effectiveFrom" DATE NOT NULL,
    "effectiveTo" DATE,
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "isInclusive" BOOLEAN NOT NULL DEFAULT false,
    "isReversed" BOOLEAN NOT NULL DEFAULT false,
    "isWithholding" BOOLEAN NOT NULL DEFAULT false,
    "compound" BOOLEAN NOT NULL DEFAULT false,
    "reportingCode" VARCHAR(50),
    "reportingCategory" VARCHAR(100),
    "glAccountId" UUID,

    CONSTRAINT "TaxRate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Actor" (
    "id" UUID NOT NULL,
    "status" "ActorStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "actorType" "ActorType" NOT NULL,
    "globalId" VARCHAR(255) NOT NULL,
    "displayName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "userId" UUID,
    "serviceAccountId" UUID,
    "apiKeyId" UUID,
    "systemProcessName" VARCHAR(100),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isSystem" BOOLEAN NOT NULL DEFAULT false,
    "canPerformActions" BOOLEAN NOT NULL DEFAULT true,
    "requiresMfa" BOOLEAN NOT NULL DEFAULT false,
    "lastActivityAt" TIMESTAMPTZ(6),
    "lastLoginAt" TIMESTAMPTZ(6),
    "lastIpAddress" INET,
    "sessionCount" INTEGER NOT NULL DEFAULT 0,
    "failedLoginAttempts" INTEGER NOT NULL DEFAULT 0,
    "lockedUntil" TIMESTAMPTZ(6),
    "riskScore" SMALLINT DEFAULT 0,
    "complianceLevel" VARCHAR(50),
    "auditFlags" TEXT[] DEFAULT ARRAY[]::TEXT[],
    "tags" TEXT[] DEFAULT ARRAY[]::TEXT[],
    "metadata" JSONB DEFAULT '{}',

    CONSTRAINT "Actor_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Tenant" (
    "id" UUID NOT NULL,
    "status" "TenantStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "name" VARCHAR(255) NOT NULL,
    "slug" CITEXT NOT NULL,
    "displayName" VARCHAR(255),
    "description" TEXT,
    "industry" VARCHAR(100),
    "website" VARCHAR(500),
    "deploymentType" "TenantDeploymentType" NOT NULL DEFAULT 'SHARED',
    "isolationLevel" "DataIsolationLevel" NOT NULL DEFAULT 'SHARED_DATABASE',
    "tier" "TenantTier" NOT NULL DEFAULT 'STARTER',
    "region" "TenantRegion" NOT NULL DEFAULT 'US_EAST_1',
    "migrationStatus" "MigrationStatus" NOT NULL DEFAULT 'NOT_STARTED',
    "maxUsers" INTEGER DEFAULT 10,
    "maxStorage" INTEGER DEFAULT 1024,
    "maxApiCalls" INTEGER DEFAULT 10000,
    "billingEmail" CITEXT,
    "subscriptionId" UUID,
    "trialEndsAt" TIMESTAMPTZ(6),
    "subscriptionEndsAt" TIMESTAMPTZ(6),
    "complianceLevel" TEXT DEFAULT 'STANDARD',
    "encryptionEnabled" BOOLEAN NOT NULL DEFAULT true,
    "backupEnabled" BOOLEAN NOT NULL DEFAULT true,

    CONSTRAINT "Tenant_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantAuditLog" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "action" "AuditAction" NOT NULL DEFAULT 'READ',
    "targetModel" VARCHAR(100) NOT NULL,
    "targetId" UUID,
    "targetName" VARCHAR(255),
    "actorId" UUID,
    "actorType" VARCHAR(50),
    "actorName" VARCHAR(255),
    "requestId" UUID,
    "sessionId" UUID,
    "ipAddress" VARCHAR(45),
    "userAgent" TEXT,
    "oldValues" JSONB,
    "newValues" JSONB,
    "changedFields" VARCHAR(100)[],
    "payloadHash" VARCHAR(64),
    "riskLevel" "ImpactLevel" NOT NULL DEFAULT 'LOW',
    "complianceFlags" VARCHAR(50)[],
    "metadata" JSONB,
    "tags" VARCHAR(50)[],
    "success" BOOLEAN NOT NULL DEFAULT true,
    "errorCode" VARCHAR(50),
    "errorMessage" TEXT,

    CONSTRAINT "TenantAuditLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantBillingAccount" (
    "id" UUID NOT NULL,
    "status" "BillingAccountStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "paymentProvider" "PaymentProvider" NOT NULL DEFAULT 'STRIPE',
    "providerCustomerId" VARCHAR(255),
    "providerAccountId" VARCHAR(255),
    "defaultPaymentMethodId" VARCHAR(255),
    "paymentMethodType" VARCHAR(50),
    "billingContactName" VARCHAR(255),
    "billingContactEmail" CITEXT,
    "billingContactPhone" VARCHAR(50),
    "billingAddressLine1" VARCHAR(255),
    "billingAddressLine2" VARCHAR(255),
    "billingCity" VARCHAR(100),
    "billingState" VARCHAR(100),
    "billingPostalCode" VARCHAR(20),
    "billingCountry" VARCHAR(2),
    "taxId" VARCHAR(50),
    "taxExempt" BOOLEAN NOT NULL DEFAULT false,
    "taxExemptReason" VARCHAR(255),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "invoiceDeliveryMethod" VARCHAR(20) NOT NULL DEFAULT 'email',
    "paymentTerms" INTEGER DEFAULT 30,
    "providerSettings" JSONB,
    "webhookEndpoints" VARCHAR(500)[],
    "verificationStatus" VARCHAR(20) NOT NULL DEFAULT 'pending',
    "verifiedAt" TIMESTAMPTZ(6),
    "lastVerificationCheck" TIMESTAMPTZ(6),

    CONSTRAINT "TenantBillingAccount_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantEvent" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "eventType" "EventType" NOT NULL DEFAULT 'TENANT_PROVISIONED',
    "aggregateType" VARCHAR(100) NOT NULL,
    "aggregateId" UUID NOT NULL,
    "sequence" INTEGER NOT NULL DEFAULT 1,
    "eventName" VARCHAR(255) NOT NULL,
    "eventDescription" TEXT,
    "occurredAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "payload" JSONB NOT NULL,
    "payloadSchema" VARCHAR(100),
    "payloadHash" VARCHAR(64),
    "actorId" UUID,
    "actorType" VARCHAR(50),
    "causationId" UUID,
    "correlationId" UUID,
    "streamId" UUID NOT NULL,
    "streamPosition" INTEGER NOT NULL DEFAULT 1,
    "expectedVersion" INTEGER,
    "processed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "projectionVersion" INTEGER DEFAULT 1,
    "metadata" JSONB,
    "tags" VARCHAR(50)[],
    "isSnapshot" BOOLEAN NOT NULL DEFAULT false,
    "snapshotVersion" INTEGER,

    CONSTRAINT "TenantEvent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantFeatureFlag" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "key" VARCHAR(100) NOT NULL,
    "name" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "enabled" BOOLEAN NOT NULL DEFAULT false,
    "rolloutPercentage" INTEGER NOT NULL DEFAULT 0,
    "scope" "FeatureFlagScope" NOT NULL DEFAULT 'TENANT',
    "targetUserIds" UUID[],
    "targetRoles" VARCHAR(50)[],
    "conditions" JSONB,
    "startDate" TIMESTAMPTZ(6),
    "endDate" TIMESTAMPTZ(6),
    "isTemporary" BOOLEAN NOT NULL DEFAULT false,
    "tags" VARCHAR(50)[],
    "environment" VARCHAR(20) NOT NULL DEFAULT 'production',
    "priority" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "TenantFeatureFlag_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantMetrics" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "metricDate" DATE NOT NULL,
    "metricHour" INTEGER DEFAULT 0,
    "activeUsersCount" INTEGER NOT NULL DEFAULT 0,
    "totalUsersCount" INTEGER NOT NULL DEFAULT 0,
    "newUsersCount" INTEGER NOT NULL DEFAULT 0,
    "loginCount" INTEGER NOT NULL DEFAULT 0,
    "sessionDuration" INTEGER,
    "storageUsedMB" INTEGER NOT NULL DEFAULT 0,
    "storageQuotaMB" INTEGER,
    "filesCount" INTEGER NOT NULL DEFAULT 0,
    "documentsCount" INTEGER NOT NULL DEFAULT 0,
    "apiCallsCount" INTEGER NOT NULL DEFAULT 0,
    "apiErrorsCount" INTEGER NOT NULL DEFAULT 0,
    "avgResponseTimeMs" INTEGER,
    "bandwidthUsedMB" INTEGER NOT NULL DEFAULT 0,
    "projectsCount" INTEGER NOT NULL DEFAULT 0,
    "activeProjectsCount" INTEGER NOT NULL DEFAULT 0,
    "tasksCount" INTEGER NOT NULL DEFAULT 0,
    "completedTasksCount" INTEGER NOT NULL DEFAULT 0,
    "revenueAmount" DECIMAL(15,2),
    "billingAmount" DECIMAL(15,2),
    "lastBillingCycleUsage" DECIMAL(15,2),
    "featuresUsedCount" INTEGER NOT NULL DEFAULT 0,
    "integrationsCount" INTEGER NOT NULL DEFAULT 0,
    "reportsGenerated" INTEGER NOT NULL DEFAULT 0,
    "supportTicketsCount" INTEGER NOT NULL DEFAULT 0,
    "avgResolutionTimeHours" INTEGER,
    "customerSatisfactionScore" DECIMAL(3,2),

    CONSTRAINT "TenantMetrics_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantPriceList" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "isDefault" BOOLEAN NOT NULL DEFAULT false,
    "activatedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "deactivatedAt" TIMESTAMPTZ(6),
    "priceListId" UUID NOT NULL,

    CONSTRAINT "TenantPriceList_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantPriceOverride" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "overridePrice" DECIMAL(12,4) NOT NULL,
    "discountPercent" DECIMAL(5,2),
    "reason" TEXT,
    "approvedBy" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "effectiveDate" DATE,
    "expiryDate" DATE,
    "priceListItemId" UUID NOT NULL,

    CONSTRAINT "TenantPriceOverride_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AccountInsurance" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "insuranceType" "InsuranceType" NOT NULL,
    "insuranceSubtype" VARCHAR(100),
    "policyNumber" VARCHAR(100) NOT NULL,
    "carrierName" VARCHAR(255) NOT NULL,
    "carrierAMRating" VARCHAR(10),
    "brokerName" VARCHAR(255),
    "brokerContact" VARCHAR(255),
    "coverageAmount" DECIMAL(15,2) NOT NULL,
    "deductible" DECIMAL(12,2),
    "aggregateLimit" DECIMAL(15,2),
    "perOccurrenceLimit" DECIMAL(15,2),
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE NOT NULL,
    "renewalDate" DATE,
    "annualPremium" DECIMAL(12,2),
    "paymentFrequency" VARCHAR(20),
    "lastPaymentDate" DATE,
    "nextPaymentDate" DATE,
    "isRequiredForWork" BOOLEAN NOT NULL DEFAULT true,
    "minimumRequired" DECIMAL(15,2),
    "certificateRequired" BOOLEAN NOT NULL DEFAULT true,
    "additionalInsured" TEXT,
    "waiverOfSubrogation" BOOLEAN NOT NULL DEFAULT false,
    "primaryNoncontrib" BOOLEAN NOT NULL DEFAULT false,
    "insuranceStatus" "InsuranceStatus" NOT NULL DEFAULT 'ACTIVE',
    "isValidated" BOOLEAN NOT NULL DEFAULT false,
    "validatedAt" TIMESTAMPTZ(6),
    "validatedBy" UUID,
    "renewalNoticeDate" DATE,
    "expirationWarningDays" INTEGER DEFAULT 30,
    "alertSent" BOOLEAN NOT NULL DEFAULT false,
    "alertSentDate" DATE,
    "certificateUrl" VARCHAR(500),
    "policyDocumentUrl" VARCHAR(500),
    "endorsementsUrl" VARCHAR(500),
    "notes" TEXT,
    "internalNotes" TEXT,
    "accountId" UUID NOT NULL,

    CONSTRAINT "AccountInsurance_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "QuoteApproval" (
    "id" UUID NOT NULL,
    "status" "ApprovalStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "approvalLevel" INTEGER NOT NULL DEFAULT 1,
    "approvalType" VARCHAR(50) NOT NULL,
    "reasonRequired" BOOLEAN NOT NULL DEFAULT false,
    "approvalReason" TEXT,
    "quoteTotalAmount" DECIMAL(15,2) NOT NULL,
    "discountAmount" DECIMAL(12,2),
    "discountPercentage" DECIMAL(5,2),
    "marginImpact" DECIMAL(5,2),
    "requestedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "approvedAt" TIMESTAMPTZ(6),
    "rejectedAt" TIMESTAMPTZ(6),
    "escalatedAt" TIMESTAMPTZ(6),
    "requiresJustification" BOOLEAN NOT NULL DEFAULT true,
    "justification" TEXT,
    "supportingDocuments" TEXT,
    "riskScore" INTEGER,
    "flaggedReason" TEXT,
    "decision" VARCHAR(20),
    "decisionReason" TEXT,
    "conditions" TEXT,
    "validUntil" DATE,
    "requestedById" UUID NOT NULL,
    "approvedById" UUID,
    "escalatedToId" UUID,
    "quoteId" UUID NOT NULL,

    CONSTRAINT "QuoteApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Territory" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "territoryCode" VARCHAR(20) NOT NULL,
    "territoryName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "territoryType" VARCHAR(50) NOT NULL,
    "coverageLevel" "CoverageLevel",
    "regions" TEXT,
    "cities" TEXT,
    "postalCodes" TEXT,
    "boundingBox" TEXT,
    "maxDistanceKm" DECIMAL(8,2),
    "serviceTypes" TEXT,
    "specializations" TEXT,
    "annualQuota" DECIMAL(15,2),
    "currentQuota" DECIMAL(15,2),
    "quotaPercent" DECIMAL(5,2),
    "averageProjectSize" DECIMAL(12,2),
    "totalProjects" INTEGER DEFAULT 0,
    "activeProjects" INTEGER DEFAULT 0,
    "managerId" UUID,
    "salesRepIds" TEXT,
    "crewLeaderIds" TEXT,
    "priority" INTEGER NOT NULL DEFAULT 5,
    "growthTarget" DECIMAL(5,2),
    "marketPenetration" DECIMAL(5,2),
    "competitiveLevel" VARCHAR(20),
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "seasonalActive" BOOLEAN,
    "preferredContacts" TEXT,
    "localPartners" TEXT,
    "permitRequirements" TEXT,
    "centralLocation" VARCHAR(255),
    "averageTravelTime" INTEGER,
    "fuelCostFactor" DECIMAL(5,2),
    "lodgingRequired" BOOLEAN NOT NULL DEFAULT false,
    "notes" TEXT,
    "strategicNotes" TEXT,

    CONSTRAINT "Territory_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CustomerSegment" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "segmentCode" VARCHAR(20) NOT NULL,
    "segmentName" VARCHAR(255) NOT NULL,
    "description" TEXT,
    "segmentType" "CustomerSegmentType" NOT NULL DEFAULT 'COMMERCIAL',
    "subSegment" VARCHAR(100),
    "minAnnualRevenue" DECIMAL(15,2),
    "maxAnnualRevenue" DECIMAL(15,2),
    "minProjectValue" DECIMAL(12,2),
    "maxProjectValue" DECIMAL(12,2),
    "avgProjectDuration" INTEGER,
    "serviceTypes" TEXT,
    "specialRequirements" TEXT,
    "paymentTerms" VARCHAR(50),
    "creditRequirements" VARCHAR(100),
    "totalCustomers" INTEGER DEFAULT 0,
    "activeCustomers" INTEGER DEFAULT 0,
    "averageProjectSize" DECIMAL(12,2),
    "averageMargin" DECIMAL(5,2),
    "customerLifeValue" DECIMAL(15,2),
    "churnRate" DECIMAL(5,2),
    "tenantPriceListId" UUID,
    "discountTier" VARCHAR(20),
    "maxDiscountPercent" DECIMAL(5,2),
    "salesApproach" VARCHAR(100),
    "marketingChannels" TEXT,
    "competitorsFaced" TEXT,
    "priority" INTEGER NOT NULL DEFAULT 5,
    "growthPotential" VARCHAR(20),
    "profitability" VARCHAR(20),
    "riskLevel" VARCHAR(20),
    "preferredTerritories" TEXT,
    "geographicFocus" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isTargetSegment" BOOLEAN NOT NULL DEFAULT true,
    "strategicImportance" VARCHAR(20),
    "investmentLevel" VARCHAR(20),
    "notes" TEXT,
    "strategicNotes" TEXT,

    CONSTRAINT "CustomerSegment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "CommissionRule" (
    "id" UUID NOT NULL,
    "status" "CRMChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "ruleName" VARCHAR(255) NOT NULL,
    "ruleCode" VARCHAR(20) NOT NULL,
    "description" TEXT,
    "commissionType" "CommissionType" NOT NULL DEFAULT 'PERCENTAGE',
    "salesRole" VARCHAR(50),
    "territoryIds" TEXT,
    "customerSegmentIds" TEXT,
    "productCategories" TEXT,
    "serviceTypes" TEXT,
    "baseRate" DECIMAL(8,4) NOT NULL,
    "bonusRate" DECIMAL(8,4),
    "minimumAmount" DECIMAL(12,2),
    "maximumAmount" DECIMAL(12,2),
    "tier1Threshold" DECIMAL(15,2),
    "tier1Rate" DECIMAL(8,4),
    "tier2Threshold" DECIMAL(15,2),
    "tier2Rate" DECIMAL(8,4),
    "tier3Threshold" DECIMAL(15,2),
    "tier3Rate" DECIMAL(8,4),
    "effectiveDate" DATE NOT NULL,
    "expirationDate" DATE,
    "payoutFrequency" VARCHAR(20) NOT NULL,
    "payoutDelay" INTEGER DEFAULT 30,
    "quotaRequired" BOOLEAN NOT NULL DEFAULT false,
    "minQuotaPercent" DECIMAL(5,2),
    "qualityMetrics" TEXT,
    "allowSplits" BOOLEAN NOT NULL DEFAULT false,
    "maxSplitPeople" INTEGER DEFAULT 2,
    "splitMethod" VARCHAR(20),
    "clawbackEnabled" BOOLEAN NOT NULL DEFAULT false,
    "clawbackPeriod" INTEGER,
    "clawbackConditions" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvalThreshold" DECIMAL(12,2),
    "autoApproveUnder" DECIMAL(12,2),
    "calculationBase" VARCHAR(50) NOT NULL DEFAULT 'GROSS_REVENUE',
    "excludeDiscounts" BOOLEAN NOT NULL DEFAULT false,
    "excludeTaxes" BOOLEAN NOT NULL DEFAULT true,
    "includeChangeOrders" BOOLEAN NOT NULL DEFAULT true,
    "maxMonthlyPayout" DECIMAL(15,2),
    "auditRequired" BOOLEAN NOT NULL DEFAULT false,
    "signOffRequired" BOOLEAN NOT NULL DEFAULT false,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "priority" INTEGER NOT NULL DEFAULT 5,
    "notes" TEXT,
    "internalNotes" TEXT,

    CONSTRAINT "CommissionRule_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantSettings" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "logoUrl" VARCHAR(500),
    "faviconUrl" VARCHAR(500),
    "primaryColor" VARCHAR(7),
    "secondaryColor" VARCHAR(7),
    "accentColor" VARCHAR(7),
    "displayName" VARCHAR(255),
    "tagline" VARCHAR(500),
    "customCss" TEXT,
    "customJs" TEXT,
    "supportEmail" CITEXT,
    "supportPhone" VARCHAR(50),
    "supportUrl" VARCHAR(500),
    "salesEmail" CITEXT,
    "salesPhone" VARCHAR(50),
    "timezone" VARCHAR(50) NOT NULL DEFAULT 'UTC',
    "locale" VARCHAR(10) NOT NULL DEFAULT 'en-US',
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "dateFormat" VARCHAR(20) NOT NULL DEFAULT 'MM/DD/YYYY',
    "timeFormat" VARCHAR(5) NOT NULL DEFAULT '12h',
    "emailNotifications" BOOLEAN NOT NULL DEFAULT true,
    "smsNotifications" BOOLEAN NOT NULL DEFAULT false,
    "pushNotifications" BOOLEAN NOT NULL DEFAULT true,
    "marketingEmails" BOOLEAN NOT NULL DEFAULT false,
    "maintenanceMode" BOOLEAN NOT NULL DEFAULT false,
    "publicSignup" BOOLEAN NOT NULL DEFAULT true,
    "ssoEnabled" BOOLEAN NOT NULL DEFAULT false,
    "mfaRequired" BOOLEAN NOT NULL DEFAULT false,
    "apiAccessEnabled" BOOLEAN NOT NULL DEFAULT true,
    "pmCanDeleteEstimate" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveEstimate" BOOLEAN NOT NULL DEFAULT false,
    "pmCanConvertEstimate" BOOLEAN NOT NULL DEFAULT false,
    "pmCanDeleteProject" BOOLEAN NOT NULL DEFAULT false,
    "pmCanDeleteTask" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveChangeOrder" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveInvoice" BOOLEAN NOT NULL DEFAULT false,
    "pmCanRejectInvoice" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveTimesheet" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveExpense" BOOLEAN NOT NULL DEFAULT false,
    "pmCanRejectExpense" BOOLEAN NOT NULL DEFAULT false,
    "pmCanManageMembers" BOOLEAN NOT NULL DEFAULT false,
    "pmCanAssignRoles" BOOLEAN NOT NULL DEFAULT false,
    "pmCanTerminateMembers" BOOLEAN NOT NULL DEFAULT false,
    "pmCanClosePunchListItem" BOOLEAN NOT NULL DEFAULT false,
    "pmCanApproveInspection" BOOLEAN NOT NULL DEFAULT false,
    "pmCanPublishDailyLog" BOOLEAN NOT NULL DEFAULT false,
    "pmCanPublishReport" BOOLEAN NOT NULL DEFAULT false,
    "pmCanAuthorizeInventory" BOOLEAN NOT NULL DEFAULT false,
    "pmCanManageExternalAccess" BOOLEAN NOT NULL DEFAULT false,
    "contractTemplateUrl" VARCHAR(500),
    "termsTemplateUrl" VARCHAR(500),
    "customSettings" JSONB,
    "pmCanAccessFinancials" BOOLEAN DEFAULT false,

    CONSTRAINT "TenantSettings_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantSubscription" (
    "id" UUID NOT NULL,
    "status" "SubscriptionStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "planId" VARCHAR(100) NOT NULL,
    "planName" VARCHAR(255) NOT NULL,
    "planDescription" TEXT,
    "interval" "SubscriptionInterval" NOT NULL DEFAULT 'MONTHLY',
    "intervalCount" INTEGER NOT NULL DEFAULT 1,
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "unitAmount" DECIMAL(15,2) NOT NULL,
    "quantity" INTEGER NOT NULL DEFAULT 1,
    "totalAmount" DECIMAL(15,2) NOT NULL,
    "currentPeriodStart" TIMESTAMPTZ(6) NOT NULL,
    "currentPeriodEnd" TIMESTAMPTZ(6) NOT NULL,
    "nextBillingDate" TIMESTAMPTZ(6),
    "isTrialing" BOOLEAN NOT NULL DEFAULT false,
    "trialStart" TIMESTAMPTZ(6),
    "trialEnd" TIMESTAMPTZ(6),
    "trialDays" INTEGER DEFAULT 0,
    "startedAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "activatedAt" TIMESTAMPTZ(6),
    "pausedAt" TIMESTAMPTZ(6),
    "resumedAt" TIMESTAMPTZ(6),
    "cancelAtPeriodEnd" BOOLEAN NOT NULL DEFAULT false,
    "canceledAt" TIMESTAMPTZ(6),
    "cancellationReason" VARCHAR(255),
    "canceledBy" UUID,
    "providerSubscriptionId" VARCHAR(255),
    "providerCustomerId" VARCHAR(255),
    "providerPlanId" VARCHAR(255),
    "usageBasedBilling" BOOLEAN NOT NULL DEFAULT false,
    "meteringEnabled" BOOLEAN NOT NULL DEFAULT false,
    "usageLimits" JSONB,
    "discountPercent" DECIMAL(5,2),
    "discountAmount" DECIMAL(15,2),
    "promoCode" VARCHAR(50),
    "discountEndsAt" TIMESTAMPTZ(6),
    "metadata" JSONB,
    "tags" VARCHAR(50)[],

    CONSTRAINT "TenantSubscription_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TenantUsageRecord" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "metric" "UsageMetric" NOT NULL DEFAULT 'API_CALLS',
    "quantity" DECIMAL(15,4) NOT NULL,
    "unit" VARCHAR(50) NOT NULL,
    "recordedAt" TIMESTAMPTZ(6) NOT NULL,
    "subscriptionId" UUID,
    "billingPeriodStart" TIMESTAMPTZ(6),
    "billingPeriodEnd" TIMESTAMPTZ(6),
    "resourceId" UUID,
    "resourceType" VARCHAR(100),
    "userId" UUID,
    "unitPrice" DECIMAL(15,4),
    "totalAmount" DECIMAL(15,2),
    "currency" VARCHAR(3) NOT NULL DEFAULT 'USD',
    "isAggregated" BOOLEAN NOT NULL DEFAULT false,
    "aggregationPeriod" VARCHAR(20),
    "sourceRecordIds" UUID[],
    "metadata" JSONB,
    "tags" VARCHAR(50)[],
    "processed" BOOLEAN NOT NULL DEFAULT false,
    "processedAt" TIMESTAMPTZ(6),
    "invoiceId" UUID,

    CONSTRAINT "TenantUsageRecord_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TermsTemplate" (
    "id" UUID NOT NULL,
    "status" "PlatformTenantChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "TermsTemplate_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Timesheet" (
    "id" UUID NOT NULL,
    "status" "TimesheetStatus" NOT NULL DEFAULT 'DRAFT',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "periodStartDate" DATE NOT NULL,
    "periodEndDate" DATE NOT NULL,
    "totalHours" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "totalRegularHours" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "totalOvertimeHours" DECIMAL(8,2) NOT NULL DEFAULT 0,
    "totalAmount" DECIMAL(12,2) NOT NULL DEFAULT 0,
    "submittedAt" TIMESTAMPTZ(6),
    "submittedById" UUID,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "projectId" UUID,
    "notes" TEXT,
    "isLocked" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "Timesheet_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TimesheetApproval" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "approvalNumber" VARCHAR(50) NOT NULL,
    "approvalLevel" INTEGER NOT NULL DEFAULT 1,
    "approvalType" "TimesheetApprovalType" NOT NULL DEFAULT 'STANDARD',
    "decision" "TimesheetApprovalDecision" NOT NULL DEFAULT 'PENDING',
    "decisionDate" TIMESTAMPTZ(6),
    "requestedAt" TIMESTAMPTZ(6),
    "dueDate" DATE,
    "approverId" UUID,
    "approverRole" VARCHAR(50),
    "delegatedFrom" UUID,
    "delegatedTo" UUID,
    "comment" TEXT,
    "conditions" TEXT,
    "rejectionReason" TEXT,
    "escalationLevel" INTEGER NOT NULL DEFAULT 0,
    "escalatedAt" TIMESTAMPTZ(6),
    "escalatedTo" UUID,
    "notificationSent" BOOLEAN NOT NULL DEFAULT false,
    "reminderCount" INTEGER NOT NULL DEFAULT 0,
    "hoursApproved" DECIMAL(8,2),
    "amountApproved" DECIMAL(12,4),
    "varianceNotes" TEXT,
    "timesheetId" UUID NOT NULL,

    CONSTRAINT "TimesheetApproval_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TimesheetEntry" (
    "id" UUID NOT NULL,
    "status" "TimePayrollChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "entryNumber" VARCHAR(50) NOT NULL,
    "workDate" DATE NOT NULL,
    "startTime" TIMESTAMPTZ(6),
    "endTime" TIMESTAMPTZ(6),
    "hoursWorked" DECIMAL(8,2) NOT NULL,
    "entryType" "TimesheetEntryType" NOT NULL DEFAULT 'REGULAR',
    "description" TEXT,
    "billable" BOOLEAN NOT NULL DEFAULT true,
    "billableRate" DECIMAL(12,4),
    "costRate" DECIMAL(12,4),
    "billableAmount" DECIMAL(12,4),
    "costAmount" DECIMAL(12,4),
    "costCodeId" UUID,
    "phaseId" UUID,
    "activityCode" VARCHAR(50),
    "entryStatus" "TimesheetEntryStatus" NOT NULL DEFAULT 'DRAFT',
    "submittedAt" TIMESTAMPTZ(6),
    "approvedAt" TIMESTAMPTZ(6),
    "approvedBy" UUID,
    "locationId" UUID,
    "equipmentId" UUID,
    "timesheetId" UUID NOT NULL,
    "taskId" UUID,
    "memberId" UUID,
    "budgetLineId" UUID,

    CONSTRAINT "TimesheetEntry_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TrainingEnrollment" (
    "id" UUID NOT NULL,
    "status" "TrainingStatus" NOT NULL DEFAULT 'ENROLLED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "workerId" UUID NOT NULL,
    "trainingId" UUID NOT NULL,
    "enrollmentDate" DATE NOT NULL,
    "startDate" DATE,
    "completionDate" DATE,
    "expirationDate" DATE,
    "score" DECIMAL(5,2),
    "passingScore" DECIMAL(5,2),
    "attemptCount" INTEGER NOT NULL DEFAULT 1,
    "cost" DECIMAL(10,2),
    "costCenter" VARCHAR(50),

    CONSTRAINT "TrainingEnrollment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "UnitOfMeasure" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "UnitOfMeasure_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "User" (
    "id" UUID NOT NULL,
    "status" "UserStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "email" CITEXT NOT NULL,
    "emailVerified" BOOLEAN NOT NULL DEFAULT false,
    "emailVerifiedAt" TIMESTAMPTZ(6),
    "firstName" VARCHAR(100),
    "lastName" VARCHAR(100),
    "displayName" VARCHAR(255),
    "avatarUrl" VARCHAR(500),
    "passwordHash" VARCHAR(255),
    "passwordSalt" VARCHAR(255),
    "lastPasswordChange" TIMESTAMPTZ(6),
    "lastLoginAt" TIMESTAMPTZ(6),
    "lastLoginIp" VARCHAR(45),
    "loginAttempts" INTEGER NOT NULL DEFAULT 0,
    "lockedAt" TIMESTAMPTZ(6),
    "lockedUntil" TIMESTAMPTZ(6),
    "mfaEnabled" BOOLEAN NOT NULL DEFAULT false,
    "mfaSecret" VARCHAR(255),
    "mfaBackupCodes" VARCHAR(20)[],
    "timezone" VARCHAR(50) NOT NULL DEFAULT 'UTC',
    "locale" VARCHAR(10) NOT NULL DEFAULT 'en-US',
    "invitedAt" TIMESTAMPTZ(6),
    "invitedByUserId" UUID,
    "onboardedAt" TIMESTAMPTZ(6),
    "suspendedAt" TIMESTAMPTZ(6),
    "suspendedReason" TEXT,
    "terminatedAt" TIMESTAMPTZ(6),
    "terminationReason" TEXT,
    "metadata" JSONB,

    CONSTRAINT "User_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "UserDevice" (
    "id" UUID NOT NULL,
    "status" "DeviceStatus" NOT NULL DEFAULT 'PENDING_VERIFICATION',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "userId" UUID NOT NULL,
    "memberId" UUID,
    "deviceFingerprint" VARCHAR(255) NOT NULL,
    "deviceId" VARCHAR(255),
    "deviceName" VARCHAR(255),
    "deviceType" "DeviceType" NOT NULL DEFAULT 'OTHER',
    "userAgent" TEXT,
    "browserName" VARCHAR(100),
    "browserVersion" VARCHAR(50),
    "osName" VARCHAR(100),
    "osVersion" VARCHAR(50),
    "appVersion" VARCHAR(50),
    "ipAddress" VARCHAR(45),
    "ipCountry" VARCHAR(10),
    "ipRegion" VARCHAR(100),
    "ipCity" VARCHAR(100),
    "screenResolution" VARCHAR(20),
    "colorDepth" INTEGER,
    "timezone" VARCHAR(50),
    "language" VARCHAR(10),
    "isTrusted" BOOLEAN NOT NULL DEFAULT false,
    "trustLevel" INTEGER NOT NULL DEFAULT 0,
    "riskLevel" "ImpactLevel" NOT NULL DEFAULT 'MEDIUM',
    "isVerified" BOOLEAN NOT NULL DEFAULT false,
    "verifiedAt" TIMESTAMPTZ(6),
    "verificationMethod" VARCHAR(50),
    "verificationCode" VARCHAR(10),
    "verificationExpiry" TIMESTAMPTZ(6),
    "firstSeenAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "lastSeenAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "lastUsedAt" TIMESTAMPTZ(6),
    "sessionCount" INTEGER NOT NULL DEFAULT 0,
    "compromisedAt" TIMESTAMPTZ(6),
    "compromiseReason" TEXT,
    "compromiseEvidence" JSONB,
    "revokedAt" TIMESTAMPTZ(6),
    "revokedReason" TEXT,
    "revokedByMemberId" UUID,
    "isManaged" BOOLEAN NOT NULL DEFAULT false,
    "managementProfile" VARCHAR(100),
    "complianceStatus" VARCHAR(50),
    "deviceMetadata" JSONB,
    "securityMetadata" JSONB,

    CONSTRAINT "UserDevice_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Vendor" (
    "id" UUID NOT NULL,
    "status" "VendorStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "vendorNumber" VARCHAR(50) NOT NULL,
    "vendorName" VARCHAR(255) NOT NULL,
    "displayName" VARCHAR(255),
    "vendorType" "VendorType" NOT NULL DEFAULT 'SUPPLIER',
    "primaryEmail" CITEXT,
    "primaryPhone" VARCHAR(50),
    "website" VARCHAR(500),
    "addressLine1" VARCHAR(255),
    "addressLine2" VARCHAR(255),
    "city" VARCHAR(100),
    "state" VARCHAR(50),
    "postalCode" VARCHAR(20),
    "country" VARCHAR(2) NOT NULL DEFAULT 'US',
    "paymentTerms" "PaymentTerms",
    "creditLimit" DECIMAL(15,2),
    "leadTimeDays" INTEGER DEFAULT 7,
    "riskRating" "VendorRiskRating",
    "complianceStatus" "VendorComplianceStatus" NOT NULL DEFAULT 'PENDING',
    "isPreferred" BOOLEAN NOT NULL DEFAULT false,
    "isApproved" BOOLEAN NOT NULL DEFAULT false,
    "approvedAt" TIMESTAMPTZ(6),
    "approvedById" UUID,
    "internalNotes" TEXT,

    CONSTRAINT "Vendor_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "VendorContact" (
    "id" UUID NOT NULL,
    "status" "VendorChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "contactType" "VendorContactType" NOT NULL DEFAULT 'PRIMARY',
    "firstName" VARCHAR(100) NOT NULL,
    "lastName" VARCHAR(100) NOT NULL,
    "title" VARCHAR(100),
    "department" VARCHAR(100),
    "email" CITEXT,
    "phone" VARCHAR(20),
    "mobile" VARCHAR(20),
    "fax" VARCHAR(20),
    "preferredMethod" "PreferredContactMethod" NOT NULL DEFAULT 'EMAIL',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isPrimary" BOOLEAN NOT NULL DEFAULT false,
    "lastContactedAt" TIMESTAMPTZ(6),
    "bounceFlag" BOOLEAN NOT NULL DEFAULT false,
    "notes" TEXT,
    "languageCode" VARCHAR(5) DEFAULT 'en',
    "timezone" VARCHAR(50) DEFAULT 'UTC',
    "vendorId" UUID NOT NULL,

    CONSTRAINT "VendorContact_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "VendorDocument" (
    "id" UUID NOT NULL,
    "status" "VendorChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "documentType" "VendorDocumentType" NOT NULL,
    "documentName" VARCHAR(255) NOT NULL,
    "fileName" VARCHAR(255) NOT NULL,
    "filePath" VARCHAR(500) NOT NULL,
    "fileUrl" VARCHAR(500) NOT NULL,
    "mimeType" VARCHAR(100),
    "fileSize" INTEGER,
    "checksum" VARCHAR(64),
    "documentNumber" VARCHAR(100),
    "issuer" VARCHAR(255),
    "issuedDate" DATE,
    "expirationDate" DATE,
    "isRequired" BOOLEAN NOT NULL DEFAULT false,
    "verificationStatus" "DocumentVerificationStatus" DEFAULT 'PENDING',
    "verifiedAt" TIMESTAMPTZ(6),
    "verifiedById" UUID,
    "description" TEXT,
    "notes" TEXT,
    "tags" VARCHAR(50)[],
    "vendorId" UUID NOT NULL,

    CONSTRAINT "VendorDocument_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WBSItem" (
    "id" UUID NOT NULL,
    "status" "ProjectChildStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "code" TEXT NOT NULL,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "level" INTEGER NOT NULL DEFAULT 1,
    "parentId" UUID,
    "projectId" UUID NOT NULL,
    "phaseId" UUID,

    CONSTRAINT "WBSItem_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Webhook" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "Webhook_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WebhookDelivery" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "WebhookDelivery_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WebhookEndpoint" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "WebhookEndpoint_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WebhookEvent" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "WebhookEvent_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WebhookLog" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "WebhookLog_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "WorkType" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,

    CONSTRAINT "WorkType_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Worker" (
    "id" UUID NOT NULL,
    "status" "WorkerStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "personId" UUID NOT NULL,
    "employeeNumber" VARCHAR(20) NOT NULL,
    "badgeNumber" VARCHAR(20),
    "hireDate" DATE NOT NULL,
    "originalHireDate" DATE,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isEligibleRehire" BOOLEAN NOT NULL DEFAULT true,
    "workerType" VARCHAR(20) NOT NULL DEFAULT 'EMPLOYEE',
    "exemptStatus" BOOLEAN NOT NULL DEFAULT false,
    "unionMember" BOOLEAN NOT NULL DEFAULT false,
    "workersCompClass" VARCHAR(50),
    "emergencyContactName" VARCHAR(200),
    "emergencyContactPhone" VARCHAR(50),

    CONSTRAINT "Worker_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "external_data_policies" (
    "id" UUID NOT NULL,
    "status" "ExternalDataPolicyStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "policyName" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "policyType" "ExternalDataPolicyType" NOT NULL DEFAULT 'ENTITY_BASED',
    "entityTypes" TEXT,
    "dataCategories" TEXT,
    "restrictionLevel" "DataRestrictionLevel" NOT NULL DEFAULT 'REVIEW_REQUIRED',
    "allowExternalShare" BOOLEAN NOT NULL DEFAULT false,
    "requireApproval" BOOLEAN NOT NULL DEFAULT true,
    "applyRedaction" BOOLEAN NOT NULL DEFAULT true,
    "applyWatermark" BOOLEAN NOT NULL DEFAULT true,
    "blockCompletely" BOOLEAN NOT NULL DEFAULT false,
    "businessJustification" TEXT,
    "complianceFramework" VARCHAR(100),
    "riskLevel" "PolicyRiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "conditionalRules" TEXT,
    "exceptionCriteria" TEXT,
    "approvalWorkflowId" UUID,
    "escalationRules" TEXT,
    "policyPriority" INTEGER NOT NULL DEFAULT 100,
    "executionOrder" INTEGER NOT NULL DEFAULT 1,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "totalApplications" INTEGER NOT NULL DEFAULT 0,
    "successfulBlocks" INTEGER NOT NULL DEFAULT 0,
    "failedApplications" INTEGER NOT NULL DEFAULT 0,
    "lastAppliedAt" TIMESTAMPTZ(6),

    CONSTRAINT "external_data_policies_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "external_share_audits" (
    "id" UUID NOT NULL,
    "status" "ExternalShareAuditStatus" NOT NULL DEFAULT 'LOGGED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'AUDIT',
    "retentionPolicy" "RetentionPolicy",
    "eventType" "ExternalShareEventType" NOT NULL DEFAULT 'DOCUMENT_ACCESS',
    "eventCategory" VARCHAR(50) NOT NULL,
    "eventDescription" TEXT,
    "resourceType" VARCHAR(100) NOT NULL,
    "resourceId" UUID,
    "resourceName" VARCHAR(500),
    "resourcePath" TEXT,
    "resourceSize" INTEGER,
    "internalUserId" UUID,
    "externalUserId" UUID,
    "externalUserEmail" VARCHAR(255),
    "externalUserName" VARCHAR(255),
    "accessMethod" "AccessMethod" NOT NULL DEFAULT 'DIRECT_LINK',
    "sessionId" UUID,
    "ipAddress" VARCHAR(45),
    "userAgent" TEXT,
    "deviceFingerprint" VARCHAR(255),
    "geolocation" VARCHAR(100),
    "policyId" UUID,
    "redactionRuleId" UUID,
    "watermarkPolicyId" UUID,
    "securityLevel" "SecurityLevel" NOT NULL DEFAULT 'STANDARD',
    "accessGrantedAt" TIMESTAMPTZ(6),
    "accessDuration" INTEGER,
    "accessCount" INTEGER NOT NULL DEFAULT 1,
    "downloadAttempted" BOOLEAN NOT NULL DEFAULT false,
    "downloadCompleted" BOOLEAN NOT NULL DEFAULT false,
    "policiesApplied" TEXT,
    "redactionApplied" BOOLEAN NOT NULL DEFAULT false,
    "watermarkApplied" BOOLEAN NOT NULL DEFAULT false,
    "accessBlocked" BOOLEAN NOT NULL DEFAULT false,
    "approvalRequired" BOOLEAN NOT NULL DEFAULT false,
    "riskScore" DOUBLE PRECISION DEFAULT 0.0,
    "anomalyDetected" BOOLEAN NOT NULL DEFAULT false,
    "complianceFlags" TEXT,
    "businessJustification" TEXT,
    "projectId" UUID,
    "businessEntityType" VARCHAR(100),
    "businessEntityId" UUID,
    "shareChannel" VARCHAR(50),
    "integrationId" UUID,
    "externalSystemId" VARCHAR(100),
    "responseCode" VARCHAR(10),
    "responseMessage" TEXT,
    "errorCode" VARCHAR(50),
    "errorMessage" TEXT,
    "requestHeaders" TEXT,
    "responseHeaders" TEXT,
    "networkPath" TEXT,
    "processingTime" INTEGER,
    "alertGenerated" BOOLEAN NOT NULL DEFAULT false,
    "alertLevel" VARCHAR(20),

    CONSTRAINT "external_share_audits_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "redaction_rules" (
    "id" UUID NOT NULL,
    "status" "RedactionRuleStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "ruleName" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "ruleType" "RedactionRuleType" NOT NULL DEFAULT 'PATTERN_BASED',
    "patternRegex" TEXT,
    "keywords" TEXT,
    "contextClues" TEXT,
    "useAIDetection" BOOLEAN NOT NULL DEFAULT false,
    "aiModelProvider" VARCHAR(50),
    "confidenceThreshold" DOUBLE PRECISION DEFAULT 0.8,
    "dataTypes" TEXT,
    "documentTypes" TEXT,
    "contentSources" TEXT,
    "redactionMethod" "RedactionMethod" NOT NULL DEFAULT 'REPLACE_WITH_MASK',
    "maskCharacter" VARCHAR(5) DEFAULT '*',
    "preserveFormat" BOOLEAN NOT NULL DEFAULT true,
    "preserveLength" BOOLEAN NOT NULL DEFAULT true,
    "replacementText" VARCHAR(100),
    "dynamicReplacement" BOOLEAN NOT NULL DEFAULT false,
    "policyId" UUID,
    "riskLevel" "RedactionRiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "complianceType" VARCHAR(50),
    "executionOrder" INTEGER NOT NULL DEFAULT 100,
    "processingTime" INTEGER,
    "accuracy" DOUBLE PRECISION,
    "totalApplications" INTEGER NOT NULL DEFAULT 0,
    "successfulRedactions" INTEGER NOT NULL DEFAULT 0,
    "falsePositives" INTEGER NOT NULL DEFAULT 0,
    "falseNegatives" INTEGER NOT NULL DEFAULT 0,
    "lastAppliedAt" TIMESTAMPTZ(6),
    "requiresReview" BOOLEAN NOT NULL DEFAULT false,
    "autoApprove" BOOLEAN NOT NULL DEFAULT true,
    "feedbackWeight" DOUBLE PRECISION NOT NULL DEFAULT 1.0,
    "isActive" BOOLEAN NOT NULL DEFAULT true,

    CONSTRAINT "redaction_rules_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "watermark_policies" (
    "id" UUID NOT NULL,
    "status" "WatermarkPolicyStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "policyName" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "watermarkType" "WatermarkType" NOT NULL DEFAULT 'VISIBLE_TEXT',
    "documentTypes" TEXT,
    "contentTypes" TEXT,
    "entityTypes" TEXT,
    "watermarkText" TEXT,
    "fontSize" INTEGER DEFAULT 12,
    "fontColor" VARCHAR(10) DEFAULT '#808080',
    "opacity" DOUBLE PRECISION DEFAULT 0.3,
    "rotation" INTEGER DEFAULT 45,
    "position" "WatermarkPosition" NOT NULL DEFAULT 'CENTER',
    "xOffset" INTEGER DEFAULT 0,
    "yOffset" INTEGER DEFAULT 0,
    "repeatPattern" BOOLEAN NOT NULL DEFAULT false,
    "tileSpacing" INTEGER DEFAULT 100,
    "isDigitalWatermark" BOOLEAN NOT NULL DEFAULT false,
    "digitalPayload" TEXT,
    "steganographicKey" VARCHAR(128),
    "includeTenantName" BOOLEAN NOT NULL DEFAULT true,
    "includeUserInfo" BOOLEAN NOT NULL DEFAULT true,
    "includeTimestamp" BOOLEAN NOT NULL DEFAULT true,
    "includeDocumentId" BOOLEAN NOT NULL DEFAULT true,
    "includeIPAddress" BOOLEAN NOT NULL DEFAULT false,
    "legalDisclaimer" TEXT,
    "copyrightNotice" TEXT,
    "confidentialityLevel" VARCHAR(50),
    "policyId" UUID,
    "triggerConditions" TEXT,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "applyOnCreation" BOOLEAN NOT NULL DEFAULT false,
    "applyOnShare" BOOLEAN NOT NULL DEFAULT true,
    "applyOnDownload" BOOLEAN NOT NULL DEFAULT true,
    "applyOnExport" BOOLEAN NOT NULL DEFAULT true,
    "processingPriority" INTEGER NOT NULL DEFAULT 100,
    "maxFileSize" INTEGER DEFAULT 50000000,
    "timeoutSeconds" INTEGER DEFAULT 30,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "totalApplications" INTEGER NOT NULL DEFAULT 0,
    "successfulWatermarks" INTEGER NOT NULL DEFAULT 0,
    "failedApplications" INTEGER NOT NULL DEFAULT 0,
    "averageProcessingTime" INTEGER,
    "lastAppliedAt" TIMESTAMPTZ(6),

    CONSTRAINT "watermark_policies_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_alert_deliveries" (
    "id" UUID NOT NULL,
    "status" "DeliveryStatus" NOT NULL DEFAULT 'PENDING',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'AUDIT',
    "retentionPolicy" "RetentionPolicy",
    "alertId" UUID NOT NULL,
    "watchId" UUID,
    "deliverySequence" INTEGER NOT NULL DEFAULT 1,
    "deliveryChannel" "DeliveryChannel" NOT NULL,
    "targetType" "DeliveryTargetType" NOT NULL,
    "targetId" UUID,
    "targetChannelId" UUID,
    "targetMemberId" UUID,
    "targetIdentifier" VARCHAR(255),
    "messageTitle" VARCHAR(300),
    "messageContent" TEXT,
    "messageFormat" VARCHAR(20) NOT NULL DEFAULT 'TEXT',
    "attachmentCount" INTEGER NOT NULL DEFAULT 0,
    "scheduledAt" TIMESTAMPTZ(6),
    "deliveredAt" TIMESTAMPTZ(6),
    "deliveryDuration" INTEGER,
    "attemptCount" INTEGER NOT NULL DEFAULT 1,
    "deliveryStatus" "DeliveryStatus" NOT NULL DEFAULT 'PENDING',
    "deliveryCode" VARCHAR(50),
    "deliveryMessage" TEXT,
    "readAt" TIMESTAMPTZ(6),
    "acknowledgedAt" TIMESTAMPTZ(6),
    "responseTime" INTEGER,
    "engagementScore" DOUBLE PRECISION DEFAULT 0.0,
    "errorCode" VARCHAR(50),
    "errorMessage" TEXT,
    "retryCount" INTEGER NOT NULL DEFAULT 0,
    "nextRetryAt" TIMESTAMPTZ(6),
    "providerMessageId" VARCHAR(255),
    "providerMetadata" TEXT,
    "recipientTimezone" VARCHAR(50),
    "recipientLocalTime" TIMESTAMPTZ(6),
    "deviceType" VARCHAR(50),

    CONSTRAINT "weather_alert_deliveries_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_alerts" (
    "id" UUID NOT NULL,
    "status" "WeatherAlertStatus" NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'OPERATIONAL',
    "retentionPolicy" "RetentionPolicy",
    "severity" "WeatherSeverity" NOT NULL DEFAULT 'MEDIUM',
    "alertType" "WeatherAlertType" NOT NULL,
    "probabilityPct" INTEGER NOT NULL DEFAULT 0,
    "confidencePct" INTEGER NOT NULL DEFAULT 0,
    "entityType" "WeatherEntityType" NOT NULL,
    "entityId" UUID NOT NULL,
    "projectId" UUID,
    "taskId" UUID,
    "latitude" DECIMAL(10,8) NOT NULL,
    "longitude" DECIMAL(11,8) NOT NULL,
    "geoRadiusM" INTEGER DEFAULT 1000,
    "locationName" VARCHAR(255),
    "issuedAt" TIMESTAMPTZ(6) NOT NULL,
    "validFrom" TIMESTAMPTZ(6) NOT NULL,
    "validTo" TIMESTAMPTZ(6) NOT NULL,
    "leadTimeMinutes" INTEGER NOT NULL DEFAULT 0,
    "sourceProvider" "WeatherSource" NOT NULL DEFAULT 'OPENWEATHER',
    "sourceAlertId" VARCHAR(100),
    "sourcePayload" TEXT,
    "actionHint" "WeatherActionHint" NOT NULL DEFAULT 'MONITOR',
    "recommendationText" TEXT,
    "riskLevel" "WeatherRiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "businessImpactScore" DOUBLE PRECISION DEFAULT 0.0,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "approvalRequestId" UUID,
    "escalationLevel" INTEGER NOT NULL DEFAULT 0,
    "ackStatus" "AckStatus" NOT NULL DEFAULT 'NONE',
    "ackByMemberId" UUID,
    "ackAt" TIMESTAMPTZ(6),
    "closedAt" TIMESTAMPTZ(6),
    "closeReason" VARCHAR(100),
    "notifiedCount" INTEGER NOT NULL DEFAULT 0,
    "deliverySuccessRate" DOUBLE PRECISION DEFAULT 1.0,
    "snoozedUntil" TIMESTAMPTZ(6),
    "duplicateOfAlertId" UUID,
    "mlModelVersion" VARCHAR(50),
    "predictionAccuracy" DOUBLE PRECISION,
    "actualImpactScore" DOUBLE PRECISION,

    CONSTRAINT "weather_alerts_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_forecast_cache" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'PUBLIC',
    "retentionPolicy" "RetentionPolicy",
    "latitude" DECIMAL(10,8) NOT NULL,
    "longitude" DECIMAL(11,8) NOT NULL,
    "geohash" VARCHAR(12) NOT NULL,
    "locationName" VARCHAR(255),
    "forecastTime" TIMESTAMPTZ(6) NOT NULL,
    "issueTime" TIMESTAMPTZ(6) NOT NULL,
    "validFrom" TIMESTAMPTZ(6) NOT NULL,
    "validTo" TIMESTAMPTZ(6) NOT NULL,
    "providerCode" VARCHAR(50) NOT NULL,
    "providerDataId" VARCHAR(100),
    "dataHash" VARCHAR(64) NOT NULL,
    "weatherPayload" TEXT NOT NULL,
    "rawPayload" TEXT,
    "dataVersion" VARCHAR(10) NOT NULL DEFAULT '1.0',
    "cacheKey" VARCHAR(255) NOT NULL,
    "expiresAt" TIMESTAMPTZ(6) NOT NULL,
    "lastAccessAt" TIMESTAMPTZ(6),
    "accessCount" INTEGER NOT NULL DEFAULT 0,
    "ingestDuration" INTEGER,
    "payloadSize" INTEGER,
    "compressionRatio" DOUBLE PRECISION,
    "confidenceScore" DOUBLE PRECISION DEFAULT 0.8,
    "dataCompleteness" DOUBLE PRECISION DEFAULT 1.0,
    "anomalyDetected" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "weather_forecast_cache_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_incidents" (
    "id" UUID NOT NULL,
    "status" "IncidentStatus" NOT NULL DEFAULT 'REPORTED',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'CONFIDENTIAL',
    "retentionPolicy" "RetentionPolicy",
    "incidentTitle" VARCHAR(300) NOT NULL,
    "incidentType" "WeatherIncidentType" NOT NULL DEFAULT 'DELAY',
    "severity" "IncidentSeverity" NOT NULL DEFAULT 'MODERATE',
    "priority" "IncidentPriority" NOT NULL DEFAULT 'MEDIUM',
    "relatedAlertId" UUID,
    "weatherCondition" "WeatherAlertType" NOT NULL,
    "weatherSeverity" "WeatherSeverity" NOT NULL,
    "entityType" "WeatherEntityType" NOT NULL,
    "entityId" UUID NOT NULL,
    "projectId" UUID,
    "taskId" UUID,
    "occurredAt" TIMESTAMPTZ(6) NOT NULL,
    "discoveredAt" TIMESTAMPTZ(6) NOT NULL,
    "reportedAt" TIMESTAMPTZ(6),
    "resolvedAt" TIMESTAMPTZ(6),
    "impactHours" DECIMAL(8,2),
    "impactCost" DECIMAL(12,2),
    "indirectCost" DECIMAL(12,2),
    "recoveryTime" INTEGER,
    "workersAffected" INTEGER DEFAULT 0,
    "safetyIncident" BOOLEAN NOT NULL DEFAULT false,
    "injuryCount" INTEGER DEFAULT 0,
    "equipmentDamaged" BOOLEAN NOT NULL DEFAULT false,
    "assetDamageCount" INTEGER DEFAULT 0,
    "assetDamageCost" DECIMAL(12,2),
    "deliveryDelay" BOOLEAN NOT NULL DEFAULT false,
    "clientImpact" BOOLEAN NOT NULL DEFAULT false,
    "qualityIssue" BOOLEAN NOT NULL DEFAULT false,
    "reworkRequired" BOOLEAN NOT NULL DEFAULT false,
    "responseActions" TEXT,
    "mitigationCost" DECIMAL(12,2),
    "preventionCost" DECIMAL(12,2),
    "description" TEXT,
    "rootCause" TEXT,
    "lessonsLearned" TEXT,
    "recommendations" TEXT,
    "reportedByMemberId" UUID NOT NULL,
    "verifiedByMemberId" UUID,
    "approvedByMemberId" UUID,
    "insuranceClaimId" VARCHAR(100),
    "externalTicketId" VARCHAR(100),
    "regulatoryReportId" VARCHAR(100),
    "alertAccuracy" DOUBLE PRECISION,
    "responseEffectiveness" DOUBLE PRECISION,
    "preventionOpportunity" TEXT,

    CONSTRAINT "weather_incidents_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_providers" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "providerCode" VARCHAR(50) NOT NULL,
    "providerName" VARCHAR(200) NOT NULL,
    "providerType" "WeatherSource" NOT NULL DEFAULT 'OPENWEATHER',
    "baseUrl" VARCHAR(500) NOT NULL,
    "authType" VARCHAR(50) NOT NULL DEFAULT 'API_KEY',
    "credentialsConfig" TEXT,
    "requestLimits" TEXT,
    "capabilities" TEXT NOT NULL,
    "supportedRegions" TEXT,
    "maxForecastDays" INTEGER NOT NULL DEFAULT 7,
    "updateFrequency" INTEGER NOT NULL DEFAULT 60,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "priority" INTEGER NOT NULL DEFAULT 100,
    "reliabilityPct" DOUBLE PRECISION NOT NULL DEFAULT 99.0,
    "accuracyScore" DOUBLE PRECISION NOT NULL DEFAULT 0.85,
    "averageLatencyMs" INTEGER NOT NULL DEFAULT 1000,
    "totalRequests" INTEGER NOT NULL DEFAULT 0,
    "successfulRequests" INTEGER NOT NULL DEFAULT 0,
    "failedRequests" INTEGER NOT NULL DEFAULT 0,
    "averageResponseSize" INTEGER,
    "healthStatus" VARCHAR(20) NOT NULL DEFAULT 'HEALTHY',
    "lastHealthCheck" TIMESTAMPTZ(6),
    "consecutiveFailures" INTEGER NOT NULL DEFAULT 0,
    "failureThreshold" INTEGER NOT NULL DEFAULT 5,
    "costPerRequest" DECIMAL(8,6),
    "monthlyCostLimit" DECIMAL(10,2),
    "currentMonthlyCost" DECIMAL(10,2) NOT NULL DEFAULT 0,

    CONSTRAINT "weather_providers_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_risk_factors" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "policyName" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "industry" "WeatherIndustry" NOT NULL,
    "activityCode" VARCHAR(100),
    "activityName" VARCHAR(200),
    "jurisdiction" VARCHAR(100),
    "alertType" "WeatherAlertType" NOT NULL,
    "weatherMetric" "WeatherMetric" NOT NULL,
    "thresholdOperator" "ThresholdOperator" NOT NULL DEFAULT 'GREATER_THAN_EQUAL',
    "thresholdValue1" DECIMAL(8,2) NOT NULL,
    "thresholdValue2" DECIMAL(8,2),
    "measurementUnit" VARCHAR(20) NOT NULL,
    "riskLevel" "WeatherRiskLevel" NOT NULL DEFAULT 'MEDIUM',
    "severity" "WeatherSeverity" NOT NULL DEFAULT 'MEDIUM',
    "actionHint" "WeatherActionHint" NOT NULL DEFAULT 'MONITOR',
    "businessImpactWeight" DOUBLE PRECISION NOT NULL DEFAULT 1.0,
    "leadTimeMin" INTEGER DEFAULT 60,
    "postEventBufferMin" INTEGER DEFAULT 30,
    "requiresApproval" BOOLEAN NOT NULL DEFAULT false,
    "escalationThreshold" INTEGER DEFAULT 2,
    "effectiveFrom" DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "effectiveTo" DATE,
    "seasonalApplicable" TEXT,
    "timeOfDayRestrictions" TEXT,
    "applicationCount" INTEGER NOT NULL DEFAULT 0,
    "accuracyRate" DOUBLE PRECISION,
    "falsePositiveRate" DOUBLE PRECISION,
    "lastUsedAt" TIMESTAMPTZ(6),
    "mlModelId" VARCHAR(100),
    "confidenceScore" DOUBLE PRECISION DEFAULT 0.8,
    "trainingDataPoints" INTEGER DEFAULT 0,

    CONSTRAINT "weather_risk_factors_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "weather_watches" (
    "id" UUID NOT NULL,
    "status" TEXT NOT NULL DEFAULT 'ACTIVE',
    "version" INTEGER NOT NULL DEFAULT 1,
    "createdAt" TIMESTAMPTZ(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ(6) NOT NULL,
    "tenantId" UUID NOT NULL,
    "deletedAt" TIMESTAMPTZ(6),
    "deletedByActorId" UUID,
    "createdByActorId" UUID,
    "updatedByActorId" UUID,
    "auditCorrelationId" UUID,
    "dataClassification" TEXT NOT NULL DEFAULT 'INTERNAL',
    "retentionPolicy" "RetentionPolicy",
    "watchName" VARCHAR(200) NOT NULL,
    "description" TEXT,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "entityType" "WeatherEntityType" NOT NULL,
    "entityId" UUID NOT NULL,
    "projectId" UUID,
    "taskId" UUID,
    "minSeverity" "WeatherSeverity" NOT NULL DEFAULT 'LOW',
    "alertTypes" TEXT NOT NULL,
    "riskLevels" TEXT NOT NULL,
    "notifyRoles" TEXT,
    "notifyMembers" TEXT,
    "escalationRoles" TEXT,
    "deliveryChannels" TEXT NOT NULL,
    "primaryChannelId" UUID,
    "escalationChannelId" UUID,
    "quietHours" TEXT,
    "timezone" VARCHAR(50),
    "businessHoursOnly" BOOLEAN NOT NULL DEFAULT false,
    "snoozeUntil" TIMESTAMPTZ(6),
    "maxAlertsPerHour" INTEGER NOT NULL DEFAULT 5,
    "cooldownMinutes" INTEGER NOT NULL DEFAULT 15,
    "overrideRiskPolicyId" UUID,
    "customThresholds" TEXT,
    "alertsReceived" INTEGER NOT NULL DEFAULT 0,
    "alertsAcknowledged" INTEGER NOT NULL DEFAULT 0,
    "averageResponseTime" INTEGER,
    "lastAlertAt" TIMESTAMPTZ(6),
    "seasonalActive" TEXT,
    "validFrom" DATE,
    "validTo" DATE,

    CONSTRAINT "weather_watches_pkey" PRIMARY KEY ("id")
);

-- CreateIndex
CREATE INDEX "AIAction_createdAt_idx" ON "AIAction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIAction_tenantId_actionType_idx" ON "AIAction"("tenantId", "actionType");

-- CreateIndex
CREATE INDEX "AIAction_tenantId_category_idx" ON "AIAction"("tenantId", "category");

-- CreateIndex
CREATE INDEX "AIAction_tenantId_isActive_idx" ON "AIAction"("tenantId", "isActive");

-- CreateIndex
CREATE UNIQUE INDEX "AIAction_tenantId_id_key" ON "AIAction"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIActionRun_createdAt_idx" ON "AIActionRun" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIActionRun_tenantId_actionId_idx" ON "AIActionRun"("tenantId", "actionId");

-- CreateIndex
CREATE INDEX "AIActionRun_tenantId_startedAt_idx" ON "AIActionRun"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "AIActionRun_tenantId_status_idx" ON "AIActionRun"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AIActionRun_tenantId_id_key" ON "AIActionRun"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIAssistantProfile_createdAt_idx" ON "AIAssistantProfile" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIAssistantProfile_tenantId_assistantType_idx" ON "AIAssistantProfile"("tenantId", "assistantType");

-- CreateIndex
CREATE INDEX "AIAssistantProfile_tenantId_businessArea_idx" ON "AIAssistantProfile"("tenantId", "businessArea");

-- CreateIndex
CREATE INDEX "AIAssistantProfile_tenantId_isActive_idx" ON "AIAssistantProfile"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "AIAssistantProfile_tenantId_lastUsedAt_idx" ON "AIAssistantProfile"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIAssistantProfile_tenantId_id_key" ON "AIAssistantProfile"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AIAssistantProfile_tenantId_name_key" ON "AIAssistantProfile"("tenantId", "name");

-- CreateIndex
CREATE INDEX "AIDocumentChunk_createdAt_idx" ON "AIDocumentChunk" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIDocumentChunk_tenantId_chunkType_idx" ON "AIDocumentChunk"("tenantId", "chunkType");

-- CreateIndex
CREATE INDEX "AIDocumentChunk_tenantId_documentIndexId_idx" ON "AIDocumentChunk"("tenantId", "documentIndexId");

-- CreateIndex
CREATE INDEX "AIDocumentChunk_tenantId_qualityScore_idx" ON "AIDocumentChunk"("tenantId", "qualityScore");

-- CreateIndex
CREATE UNIQUE INDEX "AIDocumentChunk_tenantId_documentIndexId_chunkIndex_key" ON "AIDocumentChunk"("tenantId", "documentIndexId", "chunkIndex");

-- CreateIndex
CREATE UNIQUE INDEX "AIDocumentChunk_tenantId_id_key" ON "AIDocumentChunk"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_createdAt_idx" ON "AIDocumentIndex" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_tenantId_businessEntityType_businessEntityI_idx" ON "AIDocumentIndex"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_tenantId_documentType_idx" ON "AIDocumentIndex"("tenantId", "documentType");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_tenantId_indexedAt_idx" ON "AIDocumentIndex"("tenantId", "indexedAt");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_tenantId_language_idx" ON "AIDocumentIndex"("tenantId", "language");

-- CreateIndex
CREATE INDEX "AIDocumentIndex_tenantId_status_idx" ON "AIDocumentIndex"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AIDocumentIndex_tenantId_documentId_key" ON "AIDocumentIndex"("tenantId", "documentId");

-- CreateIndex
CREATE UNIQUE INDEX "AIDocumentIndex_tenantId_id_key" ON "AIDocumentIndex"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIEmbedding_createdAt_idx" ON "AIEmbedding" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIEmbedding_tenantId_businessEntityType_businessEntityId_idx" ON "AIEmbedding"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "AIEmbedding_tenantId_chunkId_idx" ON "AIEmbedding"("tenantId", "chunkId");

-- CreateIndex
CREATE INDEX "AIEmbedding_tenantId_embeddingModel_idx" ON "AIEmbedding"("tenantId", "embeddingModel");

-- CreateIndex
CREATE INDEX "AIEmbedding_tenantId_generatedAt_idx" ON "AIEmbedding"("tenantId", "generatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIEmbedding_tenantId_id_key" ON "AIEmbedding"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIInsight_artifactId_idx" ON "AIInsight"("artifactId");

-- CreateIndex
CREATE INDEX "AIInsight_createdAt_idx" ON "AIInsight" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIInsight_jobId_idx" ON "AIInsight"("jobId");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_alertSent_idx" ON "AIInsight"("tenantId", "alertSent");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_businessEntityType_businessEntityId_idx" ON "AIInsight"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_category_idx" ON "AIInsight"("tenantId", "category");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_confidenceScore_idx" ON "AIInsight"("tenantId", "confidenceScore");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_impactScore_idx" ON "AIInsight"("tenantId", "impactScore");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_insightType_idx" ON "AIInsight"("tenantId", "insightType");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_priorityScore_idx" ON "AIInsight"("tenantId", "priorityScore");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_processedAt_idx" ON "AIInsight"("tenantId", "processedAt");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_reviewedAt_idx" ON "AIInsight"("tenantId", "reviewedAt");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_riskLevel_idx" ON "AIInsight"("tenantId", "riskLevel");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_severity_idx" ON "AIInsight"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "AIInsight_tenantId_status_idx" ON "AIInsight"("tenantId", "status");

-- CreateIndex
CREATE INDEX "AIInsight_updatedAt_idx" ON "AIInsight" USING BRIN ("updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIInsight_tenantId_id_key" ON "AIInsight"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIInsightFeedback_createdAt_idx" ON "AIInsightFeedback" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIInsightFeedback_providedById_idx" ON "AIInsightFeedback"("providedById");

-- CreateIndex
CREATE INDEX "AIInsightFeedback_tenantId_feedbackType_idx" ON "AIInsightFeedback"("tenantId", "feedbackType");

-- CreateIndex
CREATE INDEX "AIInsightFeedback_tenantId_insightId_idx" ON "AIInsightFeedback"("tenantId", "insightId");

-- CreateIndex
CREATE INDEX "AIInsightFeedback_tenantId_rating_idx" ON "AIInsightFeedback"("tenantId", "rating");

-- CreateIndex
CREATE UNIQUE INDEX "AIInsightFeedback_tenantId_id_key" ON "AIInsightFeedback"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIJob_createdAt_idx" ON "AIJob" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIJob_parentJobId_idx" ON "AIJob"("parentJobId");

-- CreateIndex
CREATE INDEX "AIJob_promptTemplateId_idx" ON "AIJob"("promptTemplateId");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_batchId_idx" ON "AIJob"("tenantId", "batchId");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_businessEntityType_businessEntityId_idx" ON "AIJob"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_completedAt_idx" ON "AIJob"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_correlationId_idx" ON "AIJob"("tenantId", "correlationId");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_dataClassification_idx" ON "AIJob"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_isRecurring_nextExecutionAt_idx" ON "AIJob"("tenantId", "isRecurring", "nextExecutionAt");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_jobType_idx" ON "AIJob"("tenantId", "jobType");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_modelProvider_idx" ON "AIJob"("tenantId", "modelProvider");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_priority_idx" ON "AIJob"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_queuedAt_idx" ON "AIJob"("tenantId", "queuedAt");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_scheduledFor_idx" ON "AIJob"("tenantId", "scheduledFor");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_securityLevel_idx" ON "AIJob"("tenantId", "securityLevel");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_startedAt_idx" ON "AIJob"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_status_idx" ON "AIJob"("tenantId", "status");

-- CreateIndex
CREATE INDEX "AIJob_tenantId_workflowId_idx" ON "AIJob"("tenantId", "workflowId");

-- CreateIndex
CREATE INDEX "AIJob_updatedAt_idx" ON "AIJob" USING BRIN ("updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIJob_tenantId_id_key" ON "AIJob"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AIJobArtifact_contentHash_idx" ON "AIJobArtifact"("contentHash");

-- CreateIndex
CREATE INDEX "AIJobArtifact_createdAt_idx" ON "AIJobArtifact" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_artifactType_idx" ON "AIJobArtifact"("tenantId", "artifactType");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_businessEntityType_businessEntityId_idx" ON "AIJobArtifact"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_dataClassification_idx" ON "AIJobArtifact"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_isLatestVersion_idx" ON "AIJobArtifact"("tenantId", "isLatestVersion");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_jobId_idx" ON "AIJobArtifact"("tenantId", "jobId");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_lastAccessedAt_idx" ON "AIJobArtifact"("tenantId", "lastAccessedAt");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_securityLevel_idx" ON "AIJobArtifact"("tenantId", "securityLevel");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_storageClass_idx" ON "AIJobArtifact"("tenantId", "storageClass");

-- CreateIndex
CREATE INDEX "AIJobArtifact_tenantId_validationStatus_idx" ON "AIJobArtifact"("tenantId", "validationStatus");

-- CreateIndex
CREATE INDEX "AIJobArtifact_updatedAt_idx" ON "AIJobArtifact" USING BRIN ("updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIJobArtifact_tenantId_id_key" ON "AIJobArtifact"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AIJobArtifact_tenantId_jobId_name_artifactVersion_key" ON "AIJobArtifact"("tenantId", "jobId", "name", "artifactVersion");

-- CreateIndex
CREATE INDEX "AIPlaybook_createdAt_idx" ON "AIPlaybook" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_category_idx" ON "AIPlaybook"("tenantId", "category");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_isActive_idx" ON "AIPlaybook"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_isLatestVersion_idx" ON "AIPlaybook"("tenantId", "isLatestVersion");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_publishedAt_idx" ON "AIPlaybook"("tenantId", "publishedAt");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_status_idx" ON "AIPlaybook"("tenantId", "status");

-- CreateIndex
CREATE INDEX "AIPlaybook_tenantId_triggerType_idx" ON "AIPlaybook"("tenantId", "triggerType");

-- CreateIndex
CREATE UNIQUE INDEX "AIPlaybook_tenantId_id_key" ON "AIPlaybook"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AIPlaybook_tenantId_name_majorVersion_minorVersion_patchVer_key" ON "AIPlaybook"("tenantId", "name", "majorVersion", "minorVersion", "patchVersion");

-- CreateIndex
CREATE INDEX "AIPlaybookStep_createdAt_idx" ON "AIPlaybookStep" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIPlaybookStep_tenantId_playbookId_idx" ON "AIPlaybookStep"("tenantId", "playbookId");

-- CreateIndex
CREATE INDEX "AIPlaybookStep_tenantId_stepType_idx" ON "AIPlaybookStep"("tenantId", "stepType");

-- CreateIndex
CREATE UNIQUE INDEX "AIPlaybookStep_tenantId_id_key" ON "AIPlaybookStep"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AIPlaybookStep_tenantId_playbookId_stepNumber_key" ON "AIPlaybookStep"("tenantId", "playbookId", "stepNumber");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_createdAt_idx" ON "AIPromptTemplate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_experimentId_idx" ON "AIPromptTemplate"("experimentId");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_averageRating_idx" ON "AIPromptTemplate"("tenantId", "averageRating");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_businessDomain_idx" ON "AIPromptTemplate"("tenantId", "businessDomain");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_category_idx" ON "AIPromptTemplate"("tenantId", "category");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_complianceLevel_idx" ON "AIPromptTemplate"("tenantId", "complianceLevel");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_dataClassification_idx" ON "AIPromptTemplate"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_isLatestVersion_idx" ON "AIPromptTemplate"("tenantId", "isLatestVersion");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_isPublic_idx" ON "AIPromptTemplate"("tenantId", "isPublic");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_lastExecutedAt_idx" ON "AIPromptTemplate"("tenantId", "lastExecutedAt");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_modelProvider_idx" ON "AIPromptTemplate"("tenantId", "modelProvider");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_primaryLanguage_idx" ON "AIPromptTemplate"("tenantId", "primaryLanguage");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_publishedAt_idx" ON "AIPromptTemplate"("tenantId", "publishedAt");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_status_idx" ON "AIPromptTemplate"("tenantId", "status");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_templateType_idx" ON "AIPromptTemplate"("tenantId", "templateType");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_tenantId_totalExecutions_idx" ON "AIPromptTemplate"("tenantId", "totalExecutions");

-- CreateIndex
CREATE INDEX "AIPromptTemplate_updatedAt_idx" ON "AIPromptTemplate" USING BRIN ("updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "AIPromptTemplate_tenantId_id_key" ON "AIPromptTemplate"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AIPromptTemplate_tenantId_name_majorVersion_minorVersion_pa_key" ON "AIPromptTemplate"("tenantId", "name", "majorVersion", "minorVersion", "patchVersion");

-- CreateIndex
CREATE UNIQUE INDEX "APBill_globalId_key" ON "APBill"("globalId");

-- CreateIndex
CREATE INDEX "APBill_createdAt_idx" ON "APBill" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "APBill_tenantId_auditCorrelationId_idx" ON "APBill"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "APBill_tenantId_dataClassification_idx" ON "APBill"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "APBill_tenantId_deletedAt_idx" ON "APBill"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "APBill_tenantId_dueDate_idx" ON "APBill"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "APBill_tenantId_status_idx" ON "APBill"("tenantId", "status");

-- CreateIndex
CREATE INDEX "APBill_tenantId_vendorId_idx" ON "APBill"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "APBill_tenantId_id_key" ON "APBill"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "APBill_tenantId_vendorId_billNumber_key" ON "APBill"("tenantId", "vendorId", "billNumber");

-- CreateIndex
CREATE INDEX "APBillLine_createdAt_idx" ON "APBillLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_apBillId_idx" ON "APBillLine"("tenantId", "apBillId");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_auditCorrelationId_idx" ON "APBillLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_costCode_idx" ON "APBillLine"("tenantId", "costCode");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_dataClassification_idx" ON "APBillLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_deletedAt_idx" ON "APBillLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_glAccountCode_idx" ON "APBillLine"("tenantId", "glAccountCode");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_goodsReceiptLineId_idx" ON "APBillLine"("tenantId", "goodsReceiptLineId");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_itemCode_idx" ON "APBillLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_projectId_idx" ON "APBillLine"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_purchaseOrderLineId_idx" ON "APBillLine"("tenantId", "purchaseOrderLineId");

-- CreateIndex
CREATE INDEX "APBillLine_tenantId_status_idx" ON "APBillLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "APBillLine_tenantId_apBillId_lineNumber_key" ON "APBillLine"("tenantId", "apBillId", "lineNumber");

-- CreateIndex
CREATE UNIQUE INDEX "APBillLine_tenantId_id_key" ON "APBillLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AbsenceBalance_tenantId_auditCorrelationId_idx" ON "AbsenceBalance"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AbsenceBalance_tenantId_balanceYear_idx" ON "AbsenceBalance"("tenantId", "balanceYear");

-- CreateIndex
CREATE INDEX "AbsenceBalance_tenantId_dataClassification_idx" ON "AbsenceBalance"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AbsenceBalance_tenantId_leaveType_idx" ON "AbsenceBalance"("tenantId", "leaveType");

-- CreateIndex
CREATE INDEX "AbsenceBalance_tenantId_workerId_idx" ON "AbsenceBalance"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "AbsenceBalance_tenantId_id_key" ON "AbsenceBalance"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AbsenceBalance_tenantId_workerId_leaveType_balanceYear_key" ON "AbsenceBalance"("tenantId", "workerId", "leaveType", "balanceYear");

-- CreateIndex
CREATE INDEX "Account_createdAt_idx" ON "Account" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Account_globalId_idx" ON "Account"("globalId");

-- CreateIndex
CREATE INDEX "Account_tenantId_accountType_idx" ON "Account"("tenantId", "accountType");

-- CreateIndex
CREATE INDEX "Account_tenantId_auditCorrelationId_idx" ON "Account"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Account_tenantId_dataClassification_idx" ON "Account"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Account_tenantId_deletedAt_idx" ON "Account"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Account_tenantId_industry_idx" ON "Account"("tenantId", "industry");

-- CreateIndex
CREATE INDEX "Account_tenantId_leadId_idx" ON "Account"("tenantId", "leadId");

-- CreateIndex
CREATE INDEX "Account_tenantId_status_idx" ON "Account"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Account_tenantId_accountNumber_key" ON "Account"("tenantId", "accountNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Account_tenantId_id_key" ON "Account"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AccountAddress_createdAt_idx" ON "AccountAddress" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_accountId_idx" ON "AccountAddress"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_addressType_idx" ON "AccountAddress"("tenantId", "addressType");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_auditCorrelationId_idx" ON "AccountAddress"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_city_state_idx" ON "AccountAddress"("tenantId", "city", "state");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_country_idx" ON "AccountAddress"("tenantId", "country");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_dataClassification_idx" ON "AccountAddress"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_deletedAt_idx" ON "AccountAddress"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isActive_idx" ON "AccountAddress"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isBillingDefault_idx" ON "AccountAddress"("tenantId", "isBillingDefault");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isDefault_idx" ON "AccountAddress"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isJobSite_idx" ON "AccountAddress"("tenantId", "isJobSite");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isPrimary_idx" ON "AccountAddress"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isShippingDefault_idx" ON "AccountAddress"("tenantId", "isShippingDefault");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_isValidated_idx" ON "AccountAddress"("tenantId", "isValidated");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_latitude_longitude_idx" ON "AccountAddress"("tenantId", "latitude", "longitude");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_postalCode_idx" ON "AccountAddress"("tenantId", "postalCode");

-- CreateIndex
CREATE INDEX "AccountAddress_tenantId_status_idx" ON "AccountAddress"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AccountAddress_tenantId_id_key" ON "AccountAddress"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "unique_primary_address_per_type" ON "AccountAddress"("tenantId", "accountId", "addressType", "isPrimary");

-- CreateIndex
CREATE INDEX "Activity_createdAt_idx" ON "Activity" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Activity_tenantId_accountId_idx" ON "Activity"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_activityType_idx" ON "Activity"("tenantId", "activityType");

-- CreateIndex
CREATE INDEX "Activity_tenantId_auditCorrelationId_idx" ON "Activity"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_contactId_idx" ON "Activity"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_dataClassification_idx" ON "Activity"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Activity_tenantId_deletedAt_idx" ON "Activity"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Activity_tenantId_dueDate_idx" ON "Activity"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "Activity_tenantId_leadId_idx" ON "Activity"("tenantId", "leadId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_opportunityId_idx" ON "Activity"("tenantId", "opportunityId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_priority_idx" ON "Activity"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Activity_tenantId_quoteId_idx" ON "Activity"("tenantId", "quoteId");

-- CreateIndex
CREATE INDEX "Activity_tenantId_scheduledAt_idx" ON "Activity"("tenantId", "scheduledAt");

-- CreateIndex
CREATE INDEX "Activity_tenantId_status_idx" ON "Activity"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Activity_tenantId_id_key" ON "Activity"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ActivityAttachment_createdAt_idx" ON "ActivityAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ActivityAttachment_tenantId_activityId_idx" ON "ActivityAttachment"("tenantId", "activityId");

-- CreateIndex
CREATE INDEX "ActivityAttachment_tenantId_auditCorrelationId_idx" ON "ActivityAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ActivityAttachment_tenantId_dataClassification_idx" ON "ActivityAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ActivityAttachment_tenantId_deletedAt_idx" ON "ActivityAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ActivityAttachment_tenantId_status_idx" ON "ActivityAttachment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ActivityAttachment_tenantId_id_key" ON "ActivityAttachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Allowance_createdAt_idx" ON "Allowance" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_allowanceType_idx" ON "Allowance"("tenantId", "allowanceType");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_auditCorrelationId_idx" ON "Allowance"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_dataClassification_idx" ON "Allowance"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_deletedAt_idx" ON "Allowance"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_effectiveDate_idx" ON "Allowance"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_employeeGroup_idx" ON "Allowance"("tenantId", "employeeGroup");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_isActive_idx" ON "Allowance"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Allowance_tenantId_status_idx" ON "Allowance"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Allowance_tenantId_allowanceCode_key" ON "Allowance"("tenantId", "allowanceCode");

-- CreateIndex
CREATE UNIQUE INDEX "Allowance_tenantId_id_key" ON "Allowance"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AnomalyCase_createdAt_idx" ON "AnomalyCase" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_anomalySignalId_idx" ON "AnomalyCase"("tenantId", "anomalySignalId");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_assignedTo_idx" ON "AnomalyCase"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_auditCorrelationId_idx" ON "AnomalyCase"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_businessImpact_idx" ON "AnomalyCase"("tenantId", "businessImpact");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_category_idx" ON "AnomalyCase"("tenantId", "category");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_dataClassification_idx" ON "AnomalyCase"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_deletedAt_idx" ON "AnomalyCase"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_fraudPolicyId_idx" ON "AnomalyCase"("tenantId", "fraudPolicyId");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_parentCaseId_idx" ON "AnomalyCase"("tenantId", "parentCaseId");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_priority_idx" ON "AnomalyCase"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_resolvedAt_idx" ON "AnomalyCase"("tenantId", "resolvedAt");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_riskScore_idx" ON "AnomalyCase"("tenantId", "riskScore");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_severity_idx" ON "AnomalyCase"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_slaDeadline_idx" ON "AnomalyCase"("tenantId", "slaDeadline");

-- CreateIndex
CREATE INDEX "AnomalyCase_tenantId_status_idx" ON "AnomalyCase"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalyCase_tenantId_id_key" ON "AnomalyCase"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalyCase_tenantId_caseNumber_key" ON "AnomalyCase"("tenantId", "caseNumber");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_createdAt_idx" ON "AnomalyCaseAction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_actionType_idx" ON "AnomalyCaseAction"("tenantId", "actionType");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_anomalyCaseId_idx" ON "AnomalyCaseAction"("tenantId", "anomalyCaseId");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_auditCorrelationId_idx" ON "AnomalyCaseAction"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_dataClassification_idx" ON "AnomalyCaseAction"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_deletedAt_idx" ON "AnomalyCaseAction"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_executedAt_idx" ON "AnomalyCaseAction"("tenantId", "executedAt");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_executedBy_idx" ON "AnomalyCaseAction"("tenantId", "executedBy");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_isAutomated_idx" ON "AnomalyCaseAction"("tenantId", "isAutomated");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_requiresApproval_idx" ON "AnomalyCaseAction"("tenantId", "requiresApproval");

-- CreateIndex
CREATE INDEX "AnomalyCaseAction_tenantId_resultStatus_idx" ON "AnomalyCaseAction"("tenantId", "resultStatus");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalyCaseAction_tenantId_id_key" ON "AnomalyCaseAction"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AnomalySignal_createdAt_idx" ON "AnomalySignal" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_anomalyType_idx" ON "AnomalySignal"("tenantId", "anomalyType");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_auditCorrelationId_idx" ON "AnomalySignal"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_confidence_idx" ON "AnomalySignal"("tenantId", "confidence");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_dataClassification_idx" ON "AnomalySignal"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_deletedAt_idx" ON "AnomalySignal"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_detectedAt_idx" ON "AnomalySignal"("tenantId", "detectedAt");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_entityId_idx" ON "AnomalySignal"("tenantId", "entityId");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_entityType_idx" ON "AnomalySignal"("tenantId", "entityType");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_isProcessed_idx" ON "AnomalySignal"("tenantId", "isProcessed");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_parentSignalId_idx" ON "AnomalySignal"("tenantId", "parentSignalId");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_requiresInvestigation_idx" ON "AnomalySignal"("tenantId", "requiresInvestigation");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_severity_idx" ON "AnomalySignal"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "AnomalySignal_tenantId_status_idx" ON "AnomalySignal"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalySignal_tenantId_id_key" ON "AnomalySignal"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_createdAt_idx" ON "AnomalySignalFeature" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_anomalySignalId_idx" ON "AnomalySignalFeature"("tenantId", "anomalySignalId");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_auditCorrelationId_idx" ON "AnomalySignalFeature"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_contributionScore_idx" ON "AnomalySignalFeature"("tenantId", "contributionScore");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_dataClassification_idx" ON "AnomalySignalFeature"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_deletedAt_idx" ON "AnomalySignalFeature"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_featureType_idx" ON "AnomalySignalFeature"("tenantId", "featureType");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_importance_idx" ON "AnomalySignalFeature"("tenantId", "importance");

-- CreateIndex
CREATE INDEX "AnomalySignalFeature_tenantId_isAnomalous_idx" ON "AnomalySignalFeature"("tenantId", "isAnomalous");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalySignalFeature_tenantId_id_key" ON "AnomalySignalFeature"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AnomalySignalFeature_tenantId_anomalySignalId_name_key" ON "AnomalySignalFeature"("tenantId", "anomalySignalId", "name");

-- CreateIndex
CREATE UNIQUE INDEX "ApiKey_hashedKey_key" ON "ApiKey"("hashedKey");

-- CreateIndex
CREATE INDEX "ApiKey_createdAt_idx" ON "ApiKey" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ApiKey_revokedByMemberId_idx" ON "ApiKey"("revokedByMemberId");

-- CreateIndex
CREATE INDEX "ApiKey_rotatedFromKeyId_idx" ON "ApiKey"("rotatedFromKeyId");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_auditCorrelationId_idx" ON "ApiKey"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_dataClassification_idx" ON "ApiKey"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_deletedAt_idx" ON "ApiKey"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_environment_idx" ON "ApiKey"("tenantId", "environment");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_expiresAt_idx" ON "ApiKey"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_isActive_idx" ON "ApiKey"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_lastUsedAt_idx" ON "ApiKey"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_memberId_idx" ON "ApiKey"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_scope_idx" ON "ApiKey"("tenantId", "scope");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_serviceAccountId_idx" ON "ApiKey"("tenantId", "serviceAccountId");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_status_idx" ON "ApiKey"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_suspiciousActivity_idx" ON "ApiKey"("tenantId", "suspiciousActivity");

-- CreateIndex
CREATE INDEX "ApiKey_tenantId_userId_idx" ON "ApiKey"("tenantId", "userId");

-- CreateIndex
CREATE UNIQUE INDEX "ApiKey_tenantId_id_key" ON "ApiKey"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ApiKey_tenantId_name_key" ON "ApiKey"("tenantId", "name");

-- CreateIndex
CREATE INDEX "ApprovalDecision_createdAt_idx" ON "ApprovalDecision" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ApprovalDecision_level_idx" ON "ApprovalDecision"("level");

-- CreateIndex
CREATE INDEX "ApprovalDecision_sequenceNumber_idx" ON "ApprovalDecision"("sequenceNumber");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_approvalRequestId_idx" ON "ApprovalDecision"("tenantId", "approvalRequestId");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_approverId_idx" ON "ApprovalDecision"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_assignedAt_idx" ON "ApprovalDecision"("tenantId", "assignedAt");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_auditCorrelationId_idx" ON "ApprovalDecision"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_dataClassification_idx" ON "ApprovalDecision"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_decisionAt_idx" ON "ApprovalDecision"("tenantId", "decisionAt");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_decisionType_idx" ON "ApprovalDecision"("tenantId", "decisionType");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_decision_idx" ON "ApprovalDecision"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_delegatedFromId_idx" ON "ApprovalDecision"("tenantId", "delegatedFromId");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_deletedAt_idx" ON "ApprovalDecision"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_dueDate_idx" ON "ApprovalDecision"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_isDelegated_idx" ON "ApprovalDecision"("tenantId", "isDelegated");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_reasonCodeId_idx" ON "ApprovalDecision"("tenantId", "reasonCodeId");

-- CreateIndex
CREATE INDEX "ApprovalDecision_tenantId_status_idx" ON "ApprovalDecision"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalDecision_tenantId_approvalRequestId_sequenceNumber_key" ON "ApprovalDecision"("tenantId", "approvalRequestId", "sequenceNumber");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalDecision_tenantId_id_key" ON "ApprovalDecision"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ApprovalRequest_createdAt_idx" ON "ApprovalRequest" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ApprovalRequest_entityAmount_idx" ON "ApprovalRequest"("entityAmount");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_approvalRuleId_idx" ON "ApprovalRequest"("tenantId", "approvalRuleId");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_auditCorrelationId_idx" ON "ApprovalRequest"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_completedAt_idx" ON "ApprovalRequest"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_currentApprover_idx" ON "ApprovalRequest"("tenantId", "currentApprover");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_dataClassification_idx" ON "ApprovalRequest"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_deletedAt_idx" ON "ApprovalRequest"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_dueDate_idx" ON "ApprovalRequest"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_entityId_idx" ON "ApprovalRequest"("tenantId", "entityId");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_entityType_idx" ON "ApprovalRequest"("tenantId", "entityType");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_priority_idx" ON "ApprovalRequest"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_source_idx" ON "ApprovalRequest"("tenantId", "source");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_status_idx" ON "ApprovalRequest"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_submittedAt_idx" ON "ApprovalRequest"("tenantId", "submittedAt");

-- CreateIndex
CREATE INDEX "ApprovalRequest_tenantId_submittedById_idx" ON "ApprovalRequest"("tenantId", "submittedById");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalRequest_tenantId_id_key" ON "ApprovalRequest"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalRequest_tenantId_requestNumber_key" ON "ApprovalRequest"("tenantId", "requestNumber");

-- CreateIndex
CREATE INDEX "ApprovalRule_amountThreshold_idx" ON "ApprovalRule"("amountThreshold");

-- CreateIndex
CREATE INDEX "ApprovalRule_createdAt_idx" ON "ApprovalRule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_auditCorrelationId_idx" ON "ApprovalRule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_customerId_idx" ON "ApprovalRule"("tenantId", "customerId");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_dataClassification_idx" ON "ApprovalRule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_deletedAt_idx" ON "ApprovalRule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_departmentId_idx" ON "ApprovalRule"("tenantId", "departmentId");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_effectiveFrom_idx" ON "ApprovalRule"("tenantId", "effectiveFrom");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_effectiveTo_idx" ON "ApprovalRule"("tenantId", "effectiveTo");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_entityType_idx" ON "ApprovalRule"("tenantId", "entityType");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_isActive_idx" ON "ApprovalRule"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_priority_idx" ON "ApprovalRule"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_projectId_idx" ON "ApprovalRule"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_ruleType_idx" ON "ApprovalRule"("tenantId", "ruleType");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_scope_idx" ON "ApprovalRule"("tenantId", "scope");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_status_idx" ON "ApprovalRule"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ApprovalRule_tenantId_vendorId_idx" ON "ApprovalRule"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalRule_tenantId_id_key" ON "ApprovalRule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ApprovalRule_tenantId_ruleName_key" ON "ApprovalRule"("tenantId", "ruleName");

-- CreateIndex
CREATE INDEX "Asset_createdAt_idx" ON "Asset" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Asset_tenantId_assetType_idx" ON "Asset"("tenantId", "assetType");

-- CreateIndex
CREATE INDEX "Asset_tenantId_assignedTo_idx" ON "Asset"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "Asset_tenantId_auditCorrelationId_idx" ON "Asset"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Asset_tenantId_category_idx" ON "Asset"("tenantId", "category");

-- CreateIndex
CREATE INDEX "Asset_tenantId_condition_idx" ON "Asset"("tenantId", "condition");

-- CreateIndex
CREATE INDEX "Asset_tenantId_dataClassification_idx" ON "Asset"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Asset_tenantId_deletedAt_idx" ON "Asset"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Asset_tenantId_locationId_idx" ON "Asset"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "Asset_tenantId_nextServiceDate_idx" ON "Asset"("tenantId", "nextServiceDate");

-- CreateIndex
CREATE INDEX "Asset_tenantId_status_idx" ON "Asset"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Asset_tenantId_warrantyExpiration_idx" ON "Asset"("tenantId", "warrantyExpiration");

-- CreateIndex
CREATE UNIQUE INDEX "Asset_tenantId_assetNumber_key" ON "Asset"("tenantId", "assetNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Asset_tenantId_id_key" ON "Asset"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AssetAssignment_createdAt_idx" ON "AssetAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_assetId_idx" ON "AssetAssignment"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_assignedTo_idx" ON "AssetAssignment"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_assignmentDate_idx" ON "AssetAssignment"("tenantId", "assignmentDate");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_assignmentStatus_idx" ON "AssetAssignment"("tenantId", "assignmentStatus");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_auditCorrelationId_idx" ON "AssetAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_dataClassification_idx" ON "AssetAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_deletedAt_idx" ON "AssetAssignment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_expectedReturnDate_idx" ON "AssetAssignment"("tenantId", "expectedReturnDate");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_isActive_idx" ON "AssetAssignment"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "AssetAssignment_tenantId_status_idx" ON "AssetAssignment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AssetAssignment_tenantId_assignmentNumber_key" ON "AssetAssignment"("tenantId", "assignmentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "AssetAssignment_tenantId_id_key" ON "AssetAssignment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AssetDepreciation_createdAt_idx" ON "AssetDepreciation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_assetId_idx" ON "AssetDepreciation"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_auditCorrelationId_idx" ON "AssetDepreciation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_dataClassification_idx" ON "AssetDepreciation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_deletedAt_idx" ON "AssetDepreciation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_fiscalYear_idx" ON "AssetDepreciation"("tenantId", "fiscalYear");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_isPosted_idx" ON "AssetDepreciation"("tenantId", "isPosted");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_periodStartDate_idx" ON "AssetDepreciation"("tenantId", "periodStartDate");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_postedDate_idx" ON "AssetDepreciation"("tenantId", "postedDate");

-- CreateIndex
CREATE INDEX "AssetDepreciation_tenantId_status_idx" ON "AssetDepreciation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AssetDepreciation_tenantId_assetId_fiscalYear_fiscalPeriod_key" ON "AssetDepreciation"("tenantId", "assetId", "fiscalYear", "fiscalPeriod");

-- CreateIndex
CREATE UNIQUE INDEX "AssetDepreciation_tenantId_id_key" ON "AssetDepreciation"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AssetDocument_createdAt_idx" ON "AssetDocument" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_accessLevel_idx" ON "AssetDocument"("tenantId", "accessLevel");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_assetId_idx" ON "AssetDocument"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_auditCorrelationId_idx" ON "AssetDocument"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_dataClassification_idx" ON "AssetDocument"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_deletedAt_idx" ON "AssetDocument"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_documentDate_idx" ON "AssetDocument"("tenantId", "documentDate");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_documentType_idx" ON "AssetDocument"("tenantId", "documentType");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_expirationDate_idx" ON "AssetDocument"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_isConfidential_idx" ON "AssetDocument"("tenantId", "isConfidential");

-- CreateIndex
CREATE INDEX "AssetDocument_tenantId_status_idx" ON "AssetDocument"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AssetDocument_tenantId_documentNumber_key" ON "AssetDocument"("tenantId", "documentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "AssetDocument_tenantId_id_key" ON "AssetDocument"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AssetMaintenance_createdAt_idx" ON "AssetMaintenance" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_assetId_idx" ON "AssetMaintenance"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_auditCorrelationId_idx" ON "AssetMaintenance"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_dataClassification_idx" ON "AssetMaintenance"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_deletedAt_idx" ON "AssetMaintenance"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_maintenanceDate_idx" ON "AssetMaintenance"("tenantId", "maintenanceDate");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_maintenanceStatus_idx" ON "AssetMaintenance"("tenantId", "maintenanceStatus");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_maintenanceType_idx" ON "AssetMaintenance"("tenantId", "maintenanceType");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_nextMaintenanceDate_idx" ON "AssetMaintenance"("tenantId", "nextMaintenanceDate");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_performedBy_idx" ON "AssetMaintenance"("tenantId", "performedBy");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_priority_idx" ON "AssetMaintenance"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_scheduledDate_idx" ON "AssetMaintenance"("tenantId", "scheduledDate");

-- CreateIndex
CREATE INDEX "AssetMaintenance_tenantId_status_idx" ON "AssetMaintenance"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AssetMaintenance_tenantId_id_key" ON "AssetMaintenance"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AssetMaintenance_tenantId_maintenanceNumber_key" ON "AssetMaintenance"("tenantId", "maintenanceNumber");

-- CreateIndex
CREATE INDEX "AssetMeterReading_createdAt_idx" ON "AssetMeterReading" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_assetId_idx" ON "AssetMeterReading"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_auditCorrelationId_idx" ON "AssetMeterReading"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_dataClassification_idx" ON "AssetMeterReading"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_deletedAt_idx" ON "AssetMeterReading"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_maintenanceNeeded_idx" ON "AssetMeterReading"("tenantId", "maintenanceNeeded");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_meterType_idx" ON "AssetMeterReading"("tenantId", "meterType");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_readBy_idx" ON "AssetMeterReading"("tenantId", "readBy");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_readingDate_idx" ON "AssetMeterReading"("tenantId", "readingDate");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_readingType_idx" ON "AssetMeterReading"("tenantId", "readingType");

-- CreateIndex
CREATE INDEX "AssetMeterReading_tenantId_status_idx" ON "AssetMeterReading"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AssetMeterReading_tenantId_id_key" ON "AssetMeterReading"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AssetMeterReading_tenantId_readingNumber_key" ON "AssetMeterReading"("tenantId", "readingNumber");

-- CreateIndex
CREATE INDEX "Attachment_createdAt_idx" ON "Attachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_attachedById_idx" ON "Attachment"("tenantId", "attachedById");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_attachmentType_idx" ON "Attachment"("tenantId", "attachmentType");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_auditCorrelationId_idx" ON "Attachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_dataClassification_idx" ON "Attachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_deletedAt_idx" ON "Attachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_fileObjectId_idx" ON "Attachment"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_isApproved_idx" ON "Attachment"("tenantId", "isApproved");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_isLatestVersion_idx" ON "Attachment"("tenantId", "isLatestVersion");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_isPublic_idx" ON "Attachment"("tenantId", "isPublic");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_parentAttachmentId_idx" ON "Attachment"("tenantId", "parentAttachmentId");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_requiresApproval_idx" ON "Attachment"("tenantId", "requiresApproval");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_status_idx" ON "Attachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Attachment_tenantId_versionNumber_idx" ON "Attachment"("tenantId", "versionNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Attachment_tenantId_id_key" ON "Attachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AttachmentLink_createdAt_idx" ON "AttachmentLink" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_attachmentId_idx" ON "AttachmentLink"("tenantId", "attachmentId");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_auditCorrelationId_idx" ON "AttachmentLink"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_dataClassification_idx" ON "AttachmentLink"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_deletedAt_idx" ON "AttachmentLink"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_displayOrder_idx" ON "AttachmentLink"("tenantId", "displayOrder");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_entityId_idx" ON "AttachmentLink"("tenantId", "entityId");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_entityType_idx" ON "AttachmentLink"("tenantId", "entityType");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_isPrimary_idx" ON "AttachmentLink"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_isRequired_idx" ON "AttachmentLink"("tenantId", "isRequired");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_linkType_idx" ON "AttachmentLink"("tenantId", "linkType");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_linkedById_idx" ON "AttachmentLink"("tenantId", "linkedById");

-- CreateIndex
CREATE INDEX "AttachmentLink_tenantId_status_idx" ON "AttachmentLink"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AttachmentLink_tenantId_entityType_entityId_attachmentId_key" ON "AttachmentLink"("tenantId", "entityType", "entityId", "attachmentId");

-- CreateIndex
CREATE UNIQUE INDEX "AttachmentLink_tenantId_id_key" ON "AttachmentLink"("tenantId", "id");

-- CreateIndex
CREATE INDEX "AuthFactor_createdAt_idx" ON "AuthFactor" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_auditCorrelationId_idx" ON "AuthFactor"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_dataClassification_idx" ON "AuthFactor"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_deletedAt_idx" ON "AuthFactor"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_emailAddress_idx" ON "AuthFactor"("tenantId", "emailAddress");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_factorType_idx" ON "AuthFactor"("tenantId", "factorType");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_isDefault_idx" ON "AuthFactor"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_isVerified_idx" ON "AuthFactor"("tenantId", "isVerified");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_lastUsedAt_idx" ON "AuthFactor"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_memberId_idx" ON "AuthFactor"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_phoneNumber_idx" ON "AuthFactor"("tenantId", "phoneNumber");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_status_idx" ON "AuthFactor"("tenantId", "status");

-- CreateIndex
CREATE INDEX "AuthFactor_tenantId_userId_idx" ON "AuthFactor"("tenantId", "userId");

-- CreateIndex
CREATE UNIQUE INDEX "AuthFactor_userId_factorType_name_key" ON "AuthFactor"("userId", "factorType", "name");

-- CreateIndex
CREATE UNIQUE INDEX "AuthFactor_tenantId_userId_factorType_name_key" ON "AuthFactor"("tenantId", "userId", "factorType", "name");

-- CreateIndex
CREATE INDEX "BankAccount_createdAt_idx" ON "BankAccount" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_accountName_idx" ON "BankAccount"("tenantId", "accountName");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_accountNumber_idx" ON "BankAccount"("tenantId", "accountNumber");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_auditCorrelationId_idx" ON "BankAccount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_bankName_idx" ON "BankAccount"("tenantId", "bankName");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_createdAt_idx" ON "BankAccount"("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_createdByActorId_idx" ON "BankAccount"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_dataClassification_idx" ON "BankAccount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_isPrimary_idx" ON "BankAccount"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_isVerified_idx" ON "BankAccount"("tenantId", "isVerified");

-- CreateIndex
CREATE INDEX "BankAccount_tenantId_status_idx" ON "BankAccount"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "BankAccount_tenantId_id_key" ON "BankAccount"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_amount_idx" ON "BankStatementLine"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_auditCorrelationId_idx" ON "BankStatementLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_bankAccountId_idx" ON "BankStatementLine"("tenantId", "bankAccountId");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_createdByActorId_idx" ON "BankStatementLine"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_dataClassification_idx" ON "BankStatementLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_isReconciled_idx" ON "BankStatementLine"("tenantId", "isReconciled");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_reconciliationId_idx" ON "BankStatementLine"("tenantId", "reconciliationId");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_referenceNumber_idx" ON "BankStatementLine"("tenantId", "referenceNumber");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_status_idx" ON "BankStatementLine"("tenantId", "status");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_status_transactionDate_idx" ON "BankStatementLine"("tenantId", "status", "transactionDate");

-- CreateIndex
CREATE INDEX "BankStatementLine_tenantId_transactionDate_idx" ON "BankStatementLine"("tenantId", "transactionDate");

-- CreateIndex
CREATE INDEX "BankStatementLine_transactionDate_idx" ON "BankStatementLine" USING BRIN ("transactionDate");

-- CreateIndex
CREATE UNIQUE INDEX "BankStatementLine_tenantId_id_key" ON "BankStatementLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BenefitDependent_createdAt_idx" ON "BenefitDependent" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_auditCorrelationId_idx" ON "BenefitDependent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_benefitEnrollmentId_idx" ON "BenefitDependent"("tenantId", "benefitEnrollmentId");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_coverageStartDate_idx" ON "BenefitDependent"("tenantId", "coverageStartDate");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_dataClassification_idx" ON "BenefitDependent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_isActive_idx" ON "BenefitDependent"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_isDisabled_idx" ON "BenefitDependent"("tenantId", "isDisabled");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_isStudent_idx" ON "BenefitDependent"("tenantId", "isStudent");

-- CreateIndex
CREATE INDEX "BenefitDependent_tenantId_relationshipType_idx" ON "BenefitDependent"("tenantId", "relationshipType");

-- CreateIndex
CREATE UNIQUE INDEX "BenefitDependent_tenantId_benefitEnrollmentId_firstName_las_key" ON "BenefitDependent"("tenantId", "benefitEnrollmentId", "firstName", "lastName", "dateOfBirth");

-- CreateIndex
CREATE UNIQUE INDEX "BenefitDependent_tenantId_id_key" ON "BenefitDependent"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_createdAt_idx" ON "BenefitEnrollment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_auditCorrelationId_idx" ON "BenefitEnrollment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_benefitType_idx" ON "BenefitEnrollment"("tenantId", "benefitType");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_dataClassification_idx" ON "BenefitEnrollment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_effectiveDate_idx" ON "BenefitEnrollment"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_endDate_idx" ON "BenefitEnrollment"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_enrollmentStatus_idx" ON "BenefitEnrollment"("tenantId", "enrollmentStatus");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_insuranceCarrier_idx" ON "BenefitEnrollment"("tenantId", "insuranceCarrier");

-- CreateIndex
CREATE INDEX "BenefitEnrollment_tenantId_workerId_idx" ON "BenefitEnrollment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "BenefitEnrollment_tenantId_id_key" ON "BenefitEnrollment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "BenefitEnrollment_tenantId_workerId_benefitType_benefitPlan_key" ON "BenefitEnrollment"("tenantId", "workerId", "benefitType", "benefitPlanCode", "effectiveDate");

-- CreateIndex
CREATE INDEX "Bid_tenantId_auditCorrelationId_idx" ON "Bid"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Bid_tenantId_dataClassification_idx" ON "Bid"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Bid_tenantId_dueDate_idx" ON "Bid"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "Bid_tenantId_estimateId_idx" ON "Bid"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "Bid_tenantId_name_idx" ON "Bid"("tenantId", "name");

-- CreateIndex
CREATE INDEX "Bid_tenantId_opportunityId_idx" ON "Bid"("tenantId", "opportunityId");

-- CreateIndex
CREATE INDEX "Bid_tenantId_status_dueDate_idx" ON "Bid"("tenantId", "status", "dueDate");

-- CreateIndex
CREATE UNIQUE INDEX "Bid_tenantId_id_key" ON "Bid"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BidComparison_createdAt_idx" ON "BidComparison" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_auditCorrelationId_idx" ON "BidComparison"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_bidId_idx" ON "BidComparison"("tenantId", "bidId");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_criterion_idx" ON "BidComparison"("tenantId", "criterion");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_dataClassification_idx" ON "BidComparison"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_deletedAt_idx" ON "BidComparison"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_ranking_idx" ON "BidComparison"("tenantId", "ranking");

-- CreateIndex
CREATE INDEX "BidComparison_tenantId_status_idx" ON "BidComparison"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "BidComparison_tenantId_id_key" ON "BidComparison"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_auditCorrelationId_idx" ON "BidInvitation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_bidId_idx" ON "BidInvitation"("tenantId", "bidId");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_dataClassification_idx" ON "BidInvitation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_inviteeEmail_idx" ON "BidInvitation"("tenantId", "inviteeEmail");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_respondedAt_idx" ON "BidInvitation"("tenantId", "respondedAt");

-- CreateIndex
CREATE INDEX "BidInvitation_tenantId_status_idx" ON "BidInvitation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "BidInvitation_tenantId_id_key" ON "BidInvitation"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_amount_idx" ON "BidSubmission"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_auditCorrelationId_idx" ON "BidSubmission"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_bidId_idx" ON "BidSubmission"("tenantId", "bidId");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_dataClassification_idx" ON "BidSubmission"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_invitationId_idx" ON "BidSubmission"("tenantId", "invitationId");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_status_idx" ON "BidSubmission"("tenantId", "status");

-- CreateIndex
CREATE INDEX "BidSubmission_tenantId_submittedAt_idx" ON "BidSubmission"("tenantId", "submittedAt");

-- CreateIndex
CREATE UNIQUE INDEX "BidSubmission_tenantId_id_key" ON "BidSubmission"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "BidSubmission_tenantId_bidId_invitationId_key" ON "BidSubmission"("tenantId", "bidId", "invitationId");

-- CreateIndex
CREATE INDEX "BillApproval_createdAt_idx" ON "BillApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_apBillId_idx" ON "BillApproval"("tenantId", "apBillId");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_approvedAt_idx" ON "BillApproval"("tenantId", "approvedAt");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_approverId_idx" ON "BillApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_auditCorrelationId_idx" ON "BillApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_dataClassification_idx" ON "BillApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_decision_idx" ON "BillApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_requestedAmount_idx" ON "BillApproval"("tenantId", "requestedAmount");

-- CreateIndex
CREATE INDEX "BillApproval_tenantId_status_idx" ON "BillApproval"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "BillApproval_tenantId_apBillId_approvalLevel_key" ON "BillApproval"("tenantId", "apBillId", "approvalLevel");

-- CreateIndex
CREATE UNIQUE INDEX "BillApproval_tenantId_id_key" ON "BillApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "BillPayment_createdAt_idx" ON "BillPayment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_apBillId_idx" ON "BillPayment"("tenantId", "apBillId");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_appliedAt_idx" ON "BillPayment"("tenantId", "appliedAt");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_auditCorrelationId_idx" ON "BillPayment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_dataClassification_idx" ON "BillPayment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_deletedAt_idx" ON "BillPayment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_glBatchId_idx" ON "BillPayment"("tenantId", "glBatchId");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_isReversed_idx" ON "BillPayment"("tenantId", "isReversed");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_paymentId_idx" ON "BillPayment"("tenantId", "paymentId");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_reversedById_idx" ON "BillPayment"("tenantId", "reversedById");

-- CreateIndex
CREATE INDEX "BillPayment_tenantId_status_idx" ON "BillPayment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "BillPayment_tenantId_apBillId_paymentId_sequenceNumber_key" ON "BillPayment"("tenantId", "apBillId", "paymentId", "sequenceNumber");

-- CreateIndex
CREATE UNIQUE INDEX "BillPayment_tenantId_id_key" ON "BillPayment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Certification_createdAt_idx" ON "Certification" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Certification_tenantId_auditCorrelationId_idx" ON "Certification"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Certification_tenantId_category_idx" ON "Certification"("tenantId", "category");

-- CreateIndex
CREATE INDEX "Certification_tenantId_certificationName_idx" ON "Certification"("tenantId", "certificationName");

-- CreateIndex
CREATE INDEX "Certification_tenantId_dataClassification_idx" ON "Certification"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Certification_tenantId_expirationDate_idx" ON "Certification"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "Certification_tenantId_isActive_idx" ON "Certification"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Certification_tenantId_isExpired_idx" ON "Certification"("tenantId", "isExpired");

-- CreateIndex
CREATE INDEX "Certification_tenantId_isRegulatory_idx" ON "Certification"("tenantId", "isRegulatory");

-- CreateIndex
CREATE INDEX "Certification_tenantId_issuingOrganization_idx" ON "Certification"("tenantId", "issuingOrganization");

-- CreateIndex
CREATE INDEX "Certification_tenantId_requiresRenewal_idx" ON "Certification"("tenantId", "requiresRenewal");

-- CreateIndex
CREATE INDEX "Certification_tenantId_status_idx" ON "Certification"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Certification_tenantId_workerId_idx" ON "Certification"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "Certification_tenantId_id_key" ON "Certification"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Certification_tenantId_workerId_certificationCode_issuedDat_key" ON "Certification"("tenantId", "workerId", "certificationCode", "issuedDate");

-- CreateIndex
CREATE UNIQUE INDEX "ChangeOrder_globalId_key" ON "ChangeOrder"("globalId");

-- CreateIndex
CREATE INDEX "ChangeOrder_createdAt_idx" ON "ChangeOrder" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_auditCorrelationId_idx" ON "ChangeOrder"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_dataClassification_idx" ON "ChangeOrder"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_estimateId_idx" ON "ChangeOrder"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_invoiceId_idx" ON "ChangeOrder"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_projectId_idx" ON "ChangeOrder"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_status_idx" ON "ChangeOrder"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ChangeOrder_tenantId_totalDelta_idx" ON "ChangeOrder"("tenantId", "totalDelta");

-- CreateIndex
CREATE UNIQUE INDEX "ChangeOrder_tenantId_id_key" ON "ChangeOrder"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_createdAt_idx" ON "ChangeOrderApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_approverId_idx" ON "ChangeOrderApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_auditCorrelationId_idx" ON "ChangeOrderApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_changeOrderId_idx" ON "ChangeOrderApproval"("tenantId", "changeOrderId");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_dataClassification_idx" ON "ChangeOrderApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_decidedAt_idx" ON "ChangeOrderApproval"("tenantId", "decidedAt");

-- CreateIndex
CREATE INDEX "ChangeOrderApproval_tenantId_decision_idx" ON "ChangeOrderApproval"("tenantId", "decision");

-- CreateIndex
CREATE UNIQUE INDEX "ChangeOrderApproval_tenantId_id_key" ON "ChangeOrderApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_createdAt_idx" ON "ChangeOrderDocument" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_tenantId_auditCorrelationId_idx" ON "ChangeOrderDocument"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_tenantId_changeOrderId_idx" ON "ChangeOrderDocument"("tenantId", "changeOrderId");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_tenantId_dataClassification_idx" ON "ChangeOrderDocument"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_tenantId_type_idx" ON "ChangeOrderDocument"("tenantId", "type");

-- CreateIndex
CREATE INDEX "ChangeOrderDocument_tenantId_uploadedBy_idx" ON "ChangeOrderDocument"("tenantId", "uploadedBy");

-- CreateIndex
CREATE UNIQUE INDEX "ChangeOrderDocument_tenantId_id_key" ON "ChangeOrderDocument"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_createdAt_idx" ON "ChangeOrderLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_tenantId_auditCorrelationId_idx" ON "ChangeOrderLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_tenantId_changeOrderId_idx" ON "ChangeOrderLine"("tenantId", "changeOrderId");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_tenantId_dataClassification_idx" ON "ChangeOrderLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_tenantId_deletedAt_idx" ON "ChangeOrderLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ChangeOrderLine_tenantId_status_idx" ON "ChangeOrderLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ChangeOrderLine_tenantId_id_key" ON "ChangeOrderLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Channel_contextType_contextId_idx" ON "Channel"("contextType", "contextId");

-- CreateIndex
CREATE INDEX "Channel_createdAt_idx" ON "Channel" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Channel_tenantId_auditCorrelationId_idx" ON "Channel"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Channel_tenantId_channelType_idx" ON "Channel"("tenantId", "channelType");

-- CreateIndex
CREATE INDEX "Channel_tenantId_dataClassification_idx" ON "Channel"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Channel_tenantId_deletedAt_idx" ON "Channel"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Channel_tenantId_departmentId_idx" ON "Channel"("tenantId", "departmentId");

-- CreateIndex
CREATE INDEX "Channel_tenantId_isReadOnly_idx" ON "Channel"("tenantId", "isReadOnly");

-- CreateIndex
CREATE INDEX "Channel_tenantId_lastActivityAt_idx" ON "Channel"("tenantId", "lastActivityAt");

-- CreateIndex
CREATE INDEX "Channel_tenantId_lastMessageAt_idx" ON "Channel"("tenantId", "lastMessageAt");

-- CreateIndex
CREATE INDEX "Channel_tenantId_memberCount_idx" ON "Channel"("tenantId", "memberCount");

-- CreateIndex
CREATE INDEX "Channel_tenantId_opportunityId_idx" ON "Channel"("tenantId", "opportunityId");

-- CreateIndex
CREATE INDEX "Channel_tenantId_ownerId_idx" ON "Channel"("tenantId", "ownerId");

-- CreateIndex
CREATE INDEX "Channel_tenantId_projectId_idx" ON "Channel"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Channel_tenantId_status_idx" ON "Channel"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Channel_tenantId_visibility_idx" ON "Channel"("tenantId", "visibility");

-- CreateIndex
CREATE UNIQUE INDEX "Channel_tenantId_channelName_key" ON "Channel"("tenantId", "channelName");

-- CreateIndex
CREATE UNIQUE INDEX "Channel_tenantId_id_key" ON "Channel"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ChannelMember_createdAt_idx" ON "ChannelMember" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_auditCorrelationId_idx" ON "ChannelMember"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_channelId_idx" ON "ChannelMember"("tenantId", "channelId");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_dataClassification_idx" ON "ChannelMember"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_deletedAt_idx" ON "ChannelMember"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_isMuted_idx" ON "ChannelMember"("tenantId", "isMuted");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_joinedAt_idx" ON "ChannelMember"("tenantId", "joinedAt");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_lastActiveAt_idx" ON "ChannelMember"("tenantId", "lastActiveAt");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_memberId_idx" ON "ChannelMember"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_memberRole_idx" ON "ChannelMember"("tenantId", "memberRole");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_memberStatus_idx" ON "ChannelMember"("tenantId", "memberStatus");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_notificationLevel_idx" ON "ChannelMember"("tenantId", "notificationLevel");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_status_idx" ON "ChannelMember"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ChannelMember_tenantId_unreadCount_idx" ON "ChannelMember"("tenantId", "unreadCount");

-- CreateIndex
CREATE INDEX "idx_channel_member_tenant" ON "ChannelMember"("tenantId", "memberId");

-- CreateIndex
CREATE UNIQUE INDEX "ChannelMember_tenantId_channelId_memberId_key" ON "ChannelMember"("tenantId", "channelId", "memberId");

-- CreateIndex
CREATE UNIQUE INDEX "ChannelMember_tenantId_id_key" ON "ChannelMember"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Chargeback_chargebackNumber_key" ON "Chargeback"("chargebackNumber");

-- CreateIndex
CREATE INDEX "Chargeback_receivedDate_idx" ON "Chargeback" USING BRIN ("receivedDate");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_amount_idx" ON "Chargeback"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_assignedToId_idx" ON "Chargeback"("tenantId", "assignedToId");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_auditCorrelationId_idx" ON "Chargeback"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_chargebackNumber_idx" ON "Chargeback"("tenantId", "chargebackNumber");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_createdByActorId_idx" ON "Chargeback"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_dataClassification_idx" ON "Chargeback"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_disputeId_idx" ON "Chargeback"("tenantId", "disputeId");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_paymentId_idx" ON "Chargeback"("tenantId", "paymentId");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_receivedDate_idx" ON "Chargeback"("tenantId", "receivedDate");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_resolvedById_idx" ON "Chargeback"("tenantId", "resolvedById");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_status_idx" ON "Chargeback"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Chargeback_tenantId_status_receivedDate_idx" ON "Chargeback"("tenantId", "status", "receivedDate");

-- CreateIndex
CREATE UNIQUE INDEX "Chargeback_tenantId_id_key" ON "Chargeback"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_createdAt_idx" ON "ChargebackEvidence" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_auditCorrelationId_idx" ON "ChargebackEvidence"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_chargebackId_idx" ON "ChargebackEvidence"("tenantId", "chargebackId");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_dataClassification_idx" ON "ChargebackEvidence"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_deletedAt_idx" ON "ChargebackEvidence"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_status_idx" ON "ChargebackEvidence"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ChargebackEvidence_tenantId_uploadedById_idx" ON "ChargebackEvidence"("tenantId", "uploadedById");

-- CreateIndex
CREATE UNIQUE INDEX "ChargebackEvidence_tenantId_id_key" ON "ChargebackEvidence"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ClockInClockOut_createdAt_idx" ON "ClockInClockOut" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_auditCorrelationId_idx" ON "ClockInClockOut"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_clockDate_idx" ON "ClockInClockOut"("tenantId", "clockDate");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_clockInTime_idx" ON "ClockInClockOut"("tenantId", "clockInTime");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_clockOutTime_idx" ON "ClockInClockOut"("tenantId", "clockOutTime");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_dataClassification_idx" ON "ClockInClockOut"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_deletedAt_idx" ON "ClockInClockOut"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_employeeId_idx" ON "ClockInClockOut"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_isValidated_idx" ON "ClockInClockOut"("tenantId", "isValidated");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_status_idx" ON "ClockInClockOut"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ClockInClockOut_tenantId_timesheetId_idx" ON "ClockInClockOut"("tenantId", "timesheetId");

-- CreateIndex
CREATE UNIQUE INDEX "ClockInClockOut_tenantId_clockNumber_key" ON "ClockInClockOut"("tenantId", "clockNumber");

-- CreateIndex
CREATE UNIQUE INDEX "ClockInClockOut_tenantId_id_key" ON "ClockInClockOut"("tenantId", "id");

-- CreateIndex
CREATE INDEX "CompensationComponent_createdAt_idx" ON "CompensationComponent" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_auditCorrelationId_idx" ON "CompensationComponent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_compensationPlanId_idx" ON "CompensationComponent"("tenantId", "compensationPlanId");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_componentType_idx" ON "CompensationComponent"("tenantId", "componentType");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_dataClassification_idx" ON "CompensationComponent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_effectiveDate_idx" ON "CompensationComponent"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_isActive_idx" ON "CompensationComponent"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "CompensationComponent_tenantId_isTaxable_idx" ON "CompensationComponent"("tenantId", "isTaxable");

-- CreateIndex
CREATE UNIQUE INDEX "CompensationComponent_tenantId_compensationPlanId_component_key" ON "CompensationComponent"("tenantId", "compensationPlanId", "componentCode", "effectiveDate");

-- CreateIndex
CREATE UNIQUE INDEX "CompensationComponent_tenantId_id_key" ON "CompensationComponent"("tenantId", "id");

-- CreateIndex
CREATE INDEX "CompensationPlan_createdAt_idx" ON "CompensationPlan" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_auditCorrelationId_idx" ON "CompensationPlan"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_compensationType_idx" ON "CompensationPlan"("tenantId", "compensationType");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_currency_idx" ON "CompensationPlan"("tenantId", "currency");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_dataClassification_idx" ON "CompensationPlan"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_effectiveDate_idx" ON "CompensationPlan"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_isActive_idx" ON "CompensationPlan"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_payFrequency_idx" ON "CompensationPlan"("tenantId", "payFrequency");

-- CreateIndex
CREATE INDEX "CompensationPlan_tenantId_workerId_idx" ON "CompensationPlan"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "CompensationPlan_tenantId_id_key" ON "CompensationPlan"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "CompensationPlan_tenantId_workerId_effectiveDate_key" ON "CompensationPlan"("tenantId", "workerId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Contact_createdAt_idx" ON "Contact" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Contact_globalId_idx" ON "Contact"("globalId");

-- CreateIndex
CREATE INDEX "Contact_tenantId_accountId_idx" ON "Contact"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Contact_tenantId_auditCorrelationId_idx" ON "Contact"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Contact_tenantId_dataClassification_idx" ON "Contact"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Contact_tenantId_deletedAt_idx" ON "Contact"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Contact_tenantId_department_idx" ON "Contact"("tenantId", "department");

-- CreateIndex
CREATE INDEX "Contact_tenantId_email_idx" ON "Contact"("tenantId", "email");

-- CreateIndex
CREATE INDEX "Contact_tenantId_isPrimary_idx" ON "Contact"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "Contact_tenantId_status_idx" ON "Contact"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Contact_tenantId_id_key" ON "Contact"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Contact_tenantId_accountId_email_key" ON "Contact"("tenantId", "accountId", "email");

-- CreateIndex
CREATE INDEX "Contract_createdAt_idx" ON "Contract" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Contract_tenantId_accountId_idx" ON "Contract"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Contract_tenantId_auditCorrelationId_idx" ON "Contract"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Contract_tenantId_contractType_idx" ON "Contract"("tenantId", "contractType");

-- CreateIndex
CREATE INDEX "Contract_tenantId_dataClassification_idx" ON "Contract"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Contract_tenantId_deletedAt_idx" ON "Contract"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Contract_tenantId_endDate_idx" ON "Contract"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "Contract_tenantId_startDate_idx" ON "Contract"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "Contract_tenantId_status_idx" ON "Contract"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Contract_tenantId_contractNumber_key" ON "Contract"("tenantId", "contractNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Contract_tenantId_id_key" ON "Contract"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ContractTemplate_createdAt_idx" ON "ContractTemplate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ContractTemplate_tenantId_deletedAt_idx" ON "ContractTemplate"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ContractTemplate_tenantId_status_idx" ON "ContractTemplate"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ContractTemplate_tenantId_id_key" ON "ContractTemplate"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "CostCenter_costCenterCode_key" ON "CostCenter"("costCenterCode");

-- CreateIndex
CREATE INDEX "CostCenter_createdAt_idx" ON "CostCenter" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_auditCorrelationId_idx" ON "CostCenter"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_budgetAmount_idx" ON "CostCenter"("tenantId", "budgetAmount");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_costCenterName_idx" ON "CostCenter"("tenantId", "costCenterName");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_dataClassification_idx" ON "CostCenter"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_effectiveDate_idx" ON "CostCenter"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_managerId_idx" ON "CostCenter"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_parentCostCenterId_idx" ON "CostCenter"("tenantId", "parentCostCenterId");

-- CreateIndex
CREATE INDEX "CostCenter_tenantId_varianceAmount_idx" ON "CostCenter"("tenantId", "varianceAmount");

-- CreateIndex
CREATE UNIQUE INDEX "CostCenter_tenantId_costCenterCode_key" ON "CostCenter"("tenantId", "costCenterCode");

-- CreateIndex
CREATE UNIQUE INDEX "CostCenter_tenantId_id_key" ON "CostCenter"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "CreditMemo_globalId_key" ON "CreditMemo"("globalId");

-- CreateIndex
CREATE INDEX "CreditMemo_createdAt_idx" ON "CreditMemo" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_accountId_idx" ON "CreditMemo"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_approvedByMemberId_idx" ON "CreditMemo"("tenantId", "approvedByMemberId");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_auditCorrelationId_idx" ON "CreditMemo"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_contactId_idx" ON "CreditMemo"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_creditMemoDate_idx" ON "CreditMemo"("tenantId", "creditMemoDate");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_currency_idx" ON "CreditMemo"("tenantId", "currency");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_currencyEnum_idx" ON "CreditMemo"("tenantId", "currencyEnum");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_dataClassification_idx" ON "CreditMemo"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_deletedAt_idx" ON "CreditMemo"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_remainingAmount_idx" ON "CreditMemo"("tenantId", "remainingAmount");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_sourceInvoiceId_idx" ON "CreditMemo"("tenantId", "sourceInvoiceId");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_status_idx" ON "CreditMemo"("tenantId", "status");

-- CreateIndex
CREATE INDEX "CreditMemo_tenantId_totalAmount_idx" ON "CreditMemo"("tenantId", "totalAmount");

-- CreateIndex
CREATE UNIQUE INDEX "CreditMemo_tenantId_creditMemoNumber_key" ON "CreditMemo"("tenantId", "creditMemoNumber");

-- CreateIndex
CREATE UNIQUE INDEX "CreditMemo_tenantId_id_key" ON "CreditMemo"("tenantId", "id");

-- CreateIndex
CREATE INDEX "CreditMemoLine_createdAt_idx" ON "CreditMemoLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_auditCorrelationId_idx" ON "CreditMemoLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_costCode_idx" ON "CreditMemoLine"("tenantId", "costCode");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_creditMemoId_idx" ON "CreditMemoLine"("tenantId", "creditMemoId");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_dataClassification_idx" ON "CreditMemoLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_deletedAt_idx" ON "CreditMemoLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_glAccountCode_idx" ON "CreditMemoLine"("tenantId", "glAccountCode");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_itemCode_idx" ON "CreditMemoLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_itemType_idx" ON "CreditMemoLine"("tenantId", "itemType");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_sourceType_idx" ON "CreditMemoLine"("tenantId", "sourceType");

-- CreateIndex
CREATE INDEX "CreditMemoLine_tenantId_status_idx" ON "CreditMemoLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "CreditMemoLine_tenantId_creditMemoId_lineNumber_key" ON "CreditMemoLine"("tenantId", "creditMemoId", "lineNumber");

-- CreateIndex
CREATE UNIQUE INDEX "CreditMemoLine_tenantId_id_key" ON "CreditMemoLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "CurrencyRate_auditCorrelationId_idx" ON "CurrencyRate"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "CurrencyRate_autoUpdate_idx" ON "CurrencyRate"("autoUpdate");

-- CreateIndex
CREATE INDEX "CurrencyRate_createdAt_idx" ON "CurrencyRate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CurrencyRate_dataClassification_idx" ON "CurrencyRate"("dataClassification");

-- CreateIndex
CREATE INDEX "CurrencyRate_dataQuality_idx" ON "CurrencyRate"("dataQuality");

-- CreateIndex
CREATE INDEX "CurrencyRate_deletedAt_idx" ON "CurrencyRate"("deletedAt");

-- CreateIndex
CREATE INDEX "CurrencyRate_effectiveFrom_idx" ON "CurrencyRate"("effectiveFrom");

-- CreateIndex
CREATE INDEX "CurrencyRate_fromCurrency_toCurrency_idx" ON "CurrencyRate"("fromCurrency", "toCurrency");

-- CreateIndex
CREATE INDEX "CurrencyRate_isDefault_idx" ON "CurrencyRate"("isDefault");

-- CreateIndex
CREATE INDEX "CurrencyRate_lastUpdated_idx" ON "CurrencyRate"("lastUpdated");

-- CreateIndex
CREATE INDEX "CurrencyRate_providerName_idx" ON "CurrencyRate"("providerName");

-- CreateIndex
CREATE INDEX "CurrencyRate_rateDate_idx" ON "CurrencyRate"("rateDate");

-- CreateIndex
CREATE INDEX "CurrencyRate_source_idx" ON "CurrencyRate"("source");

-- CreateIndex
CREATE INDEX "CurrencyRate_status_idx" ON "CurrencyRate"("status");

-- CreateIndex
CREATE UNIQUE INDEX "CurrencyRate_fromCurrency_toCurrency_effectiveFrom_rateType_key" ON "CurrencyRate"("fromCurrency", "toCurrency", "effectiveFrom", "rateType");

-- CreateIndex
CREATE INDEX "DailyLog_createdAt_idx" ON "DailyLog" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_auditCorrelationId_idx" ON "DailyLog"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_authorId_idx" ON "DailyLog"("tenantId", "authorId");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_dataClassification_idx" ON "DailyLog"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_deletedAt_idx" ON "DailyLog"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_logDate_idx" ON "DailyLog"("tenantId", "logDate");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_projectId_idx" ON "DailyLog"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "DailyLog_tenantId_status_idx" ON "DailyLog"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DailyLog_tenantId_id_key" ON "DailyLog"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DailyLog_tenantId_projectId_logDate_key" ON "DailyLog"("tenantId", "projectId", "logDate");

-- CreateIndex
CREATE INDEX "DashboardDefinition_createdAt_idx" ON "DashboardDefinition" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_auditCorrelationId_idx" ON "DashboardDefinition"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_dataClassification_idx" ON "DashboardDefinition"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_deletedAt_idx" ON "DashboardDefinition"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_isPublished_idx" ON "DashboardDefinition"("tenantId", "isPublished");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_publishedAt_idx" ON "DashboardDefinition"("tenantId", "publishedAt");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_status_idx" ON "DashboardDefinition"("tenantId", "status");

-- CreateIndex
CREATE INDEX "DashboardDefinition_tenantId_statusEnum_idx" ON "DashboardDefinition"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "DashboardDefinition_tenantId_id_key" ON "DashboardDefinition"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DashboardDefinition_tenantId_code_key" ON "DashboardDefinition"("tenantId", "code");

-- CreateIndex
CREATE INDEX "Deduction_createdAt_idx" ON "Deduction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_auditCorrelationId_idx" ON "Deduction"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_dataClassification_idx" ON "Deduction"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_deductionType_idx" ON "Deduction"("tenantId", "deductionType");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_deletedAt_idx" ON "Deduction"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_effectiveDate_idx" ON "Deduction"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_employeeGroup_idx" ON "Deduction"("tenantId", "employeeGroup");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_isActive_idx" ON "Deduction"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_isStatutory_idx" ON "Deduction"("tenantId", "isStatutory");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_priority_idx" ON "Deduction"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Deduction_tenantId_status_idx" ON "Deduction"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Deduction_tenantId_deductionCode_key" ON "Deduction"("tenantId", "deductionCode");

-- CreateIndex
CREATE UNIQUE INDEX "Deduction_tenantId_id_key" ON "Deduction"("tenantId", "id");

-- CreateIndex
CREATE INDEX "DelegationConstraint_createdAt_idx" ON "DelegationConstraint" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_auditCorrelationId_idx" ON "DelegationConstraint"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_constraintType_idx" ON "DelegationConstraint"("tenantId", "constraintType");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_dataClassification_idx" ON "DelegationConstraint"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_delegationGrantId_idx" ON "DelegationConstraint"("tenantId", "delegationGrantId");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_deletedAt_idx" ON "DelegationConstraint"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_isActive_idx" ON "DelegationConstraint"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_isEnforced_idx" ON "DelegationConstraint"("tenantId", "isEnforced");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_priority_idx" ON "DelegationConstraint"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_validFrom_idx" ON "DelegationConstraint"("tenantId", "validFrom");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_validTo_idx" ON "DelegationConstraint"("tenantId", "validTo");

-- CreateIndex
CREATE INDEX "DelegationConstraint_tenantId_violationAction_idx" ON "DelegationConstraint"("tenantId", "violationAction");

-- CreateIndex
CREATE UNIQUE INDEX "DelegationConstraint_tenantId_id_key" ON "DelegationConstraint"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DelegationConstraint_tenantId_delegationGrantId_name_key" ON "DelegationConstraint"("tenantId", "delegationGrantId", "name");

-- CreateIndex
CREATE INDEX "DelegationGrant_createdAt_idx" ON "DelegationGrant" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_approvedAt_idx" ON "DelegationGrant"("tenantId", "approvedAt");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_auditCorrelationId_idx" ON "DelegationGrant"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_currentDepth_idx" ON "DelegationGrant"("tenantId", "currentDepth");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_dataClassification_idx" ON "DelegationGrant"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_delegateeId_idx" ON "DelegationGrant"("tenantId", "delegateeId");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_delegatorId_idx" ON "DelegationGrant"("tenantId", "delegatorId");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_delegationType_idx" ON "DelegationGrant"("tenantId", "delegationType");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_deletedAt_idx" ON "DelegationGrant"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_effectiveFrom_idx" ON "DelegationGrant"("tenantId", "effectiveFrom");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_effectiveTo_idx" ON "DelegationGrant"("tenantId", "effectiveTo");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_parentDelegationId_idx" ON "DelegationGrant"("tenantId", "parentDelegationId");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_resourceType_idx" ON "DelegationGrant"("tenantId", "resourceType");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_riskLevel_idx" ON "DelegationGrant"("tenantId", "riskLevel");

-- CreateIndex
CREATE INDEX "DelegationGrant_tenantId_status_idx" ON "DelegationGrant"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DelegationGrant_tenantId_id_key" ON "DelegationGrant"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DelegationGrant_tenantId_name_key" ON "DelegationGrant"("tenantId", "name");

-- CreateIndex
CREATE UNIQUE INDEX "Department_departmentCode_key" ON "Department"("departmentCode");

-- CreateIndex
CREATE INDEX "Department_createdAt_idx" ON "Department" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Department_tenantId_approvedByActorId_idx" ON "Department"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "Department_tenantId_assistantManagerId_idx" ON "Department"("tenantId", "assistantManagerId");

-- CreateIndex
CREATE INDEX "Department_tenantId_auditCorrelationId_idx" ON "Department"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Department_tenantId_budgetAmount_idx" ON "Department"("tenantId", "budgetAmount");

-- CreateIndex
CREATE INDEX "Department_tenantId_budgetOwnerId_idx" ON "Department"("tenantId", "budgetOwnerId");

-- CreateIndex
CREATE INDEX "Department_tenantId_budgetVariance_idx" ON "Department"("tenantId", "budgetVariance");

-- CreateIndex
CREATE INDEX "Department_tenantId_costCenterId_idx" ON "Department"("tenantId", "costCenterId");

-- CreateIndex
CREATE INDEX "Department_tenantId_dataClassification_idx" ON "Department"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Department_tenantId_departmentLevel_idx" ON "Department"("tenantId", "departmentLevel");

-- CreateIndex
CREATE INDEX "Department_tenantId_departmentName_idx" ON "Department"("tenantId", "departmentName");

-- CreateIndex
CREATE INDEX "Department_tenantId_effectiveDate_idx" ON "Department"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Department_tenantId_employeeCount_idx" ON "Department"("tenantId", "employeeCount");

-- CreateIndex
CREATE INDEX "Department_tenantId_isActive_idx" ON "Department"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Department_tenantId_managerId_idx" ON "Department"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "Department_tenantId_parentDepartmentId_idx" ON "Department"("tenantId", "parentDepartmentId");

-- CreateIndex
CREATE INDEX "Department_tenantId_primaryLocationId_idx" ON "Department"("tenantId", "primaryLocationId");

-- CreateIndex
CREATE INDEX "Department_tenantId_region_idx" ON "Department"("tenantId", "region");

-- CreateIndex
CREATE UNIQUE INDEX "Department_tenantId_departmentCode_key" ON "Department"("tenantId", "departmentCode");

-- CreateIndex
CREATE UNIQUE INDEX "Department_tenantId_id_key" ON "Department"("tenantId", "id");

-- CreateIndex
CREATE INDEX "DirectChat_contextType_contextId_idx" ON "DirectChat"("contextType", "contextId");

-- CreateIndex
CREATE INDEX "DirectChat_createdAt_idx" ON "DirectChat" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_auditCorrelationId_idx" ON "DirectChat"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_chatType_idx" ON "DirectChat"("tenantId", "chatType");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_dataClassification_idx" ON "DirectChat"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_deletedAt_idx" ON "DirectChat"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_isEncrypted_idx" ON "DirectChat"("tenantId", "isEncrypted");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_isMonitored_idx" ON "DirectChat"("tenantId", "isMonitored");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_lastActivityAt_idx" ON "DirectChat"("tenantId", "lastActivityAt");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_lastMessageAt_idx" ON "DirectChat"("tenantId", "lastMessageAt");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_participant1Id_idx" ON "DirectChat"("tenantId", "participant1Id");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_participant2Id_idx" ON "DirectChat"("tenantId", "participant2Id");

-- CreateIndex
CREATE INDEX "DirectChat_tenantId_status_idx" ON "DirectChat"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DirectChat_tenantId_id_key" ON "DirectChat"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DirectChat_tenantId_participant1Id_participant2Id_key" ON "DirectChat"("tenantId", "participant1Id", "participant2Id");

-- CreateIndex
CREATE INDEX "DirectMessage_createdAt_idx" ON "DirectMessage" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_auditCorrelationId_idx" ON "DirectMessage"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_createdAt_idx" ON "DirectMessage"("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_dataClassification_idx" ON "DirectMessage"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_deletedAt_idx" ON "DirectMessage"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_deliveredAt_idx" ON "DirectMessage"("tenantId", "deliveredAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_directChatId_idx" ON "DirectMessage"("tenantId", "directChatId");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_isFlagged_idx" ON "DirectMessage"("tenantId", "isFlagged");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_isImportant_idx" ON "DirectMessage"("tenantId", "isImportant");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_messageStatus_idx" ON "DirectMessage"("tenantId", "messageStatus");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_messageType_idx" ON "DirectMessage"("tenantId", "messageType");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_readAt_idx" ON "DirectMessage"("tenantId", "readAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_receiverId_idx" ON "DirectMessage"("tenantId", "receiverId");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_scheduledAt_idx" ON "DirectMessage"("tenantId", "scheduledAt");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_senderId_idx" ON "DirectMessage"("tenantId", "senderId");

-- CreateIndex
CREATE INDEX "DirectMessage_tenantId_status_idx" ON "DirectMessage"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DirectMessage_tenantId_id_key" ON "DirectMessage"("tenantId", "id");

-- CreateIndex
CREATE INDEX "DirectMessageRead_createdAt_idx" ON "DirectMessageRead" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_auditCorrelationId_idx" ON "DirectMessageRead"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_complianceTracked_idx" ON "DirectMessageRead"("tenantId", "complianceTracked");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_dataClassification_idx" ON "DirectMessageRead"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_deletedAt_idx" ON "DirectMessageRead"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_deliveredAt_idx" ON "DirectMessageRead"("tenantId", "deliveredAt");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_directMessageId_idx" ON "DirectMessageRead"("tenantId", "directMessageId");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_memberId_idx" ON "DirectMessageRead"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_readAt_idx" ON "DirectMessageRead"("tenantId", "readAt");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_readStatus_idx" ON "DirectMessageRead"("tenantId", "readStatus");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_sensitiveContent_idx" ON "DirectMessageRead"("tenantId", "sensitiveContent");

-- CreateIndex
CREATE INDEX "DirectMessageRead_tenantId_status_idx" ON "DirectMessageRead"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DirectMessageRead_tenantId_directMessageId_memberId_key" ON "DirectMessageRead"("tenantId", "directMessageId", "memberId");

-- CreateIndex
CREATE UNIQUE INDEX "DirectMessageRead_tenantId_id_key" ON "DirectMessageRead"("tenantId", "id");

-- CreateIndex
CREATE INDEX "DistributedLock_createdAt_idx" ON "DistributedLock" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_auditCorrelationId_idx" ON "DistributedLock"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_dataClassification_idx" ON "DistributedLock"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_deletedAt_idx" ON "DistributedLock"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_expiresAt_idx" ON "DistributedLock"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_heartbeatAt_idx" ON "DistributedLock"("tenantId", "heartbeatAt");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_isActive_idx" ON "DistributedLock"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_lockedBy_idx" ON "DistributedLock"("tenantId", "lockedBy");

-- CreateIndex
CREATE INDEX "DistributedLock_tenantId_resourceType_idx" ON "DistributedLock"("tenantId", "resourceType");

-- CreateIndex
CREATE UNIQUE INDEX "DistributedLock_tenantId_id_key" ON "DistributedLock"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DistributedLock_tenantId_lockToken_key" ON "DistributedLock"("tenantId", "lockToken");

-- CreateIndex
CREATE UNIQUE INDEX "DistributedLock_tenantId_resourceId_key" ON "DistributedLock"("tenantId", "resourceId");

-- CreateIndex
CREATE INDEX "DocumentGroup_createdAt_idx" ON "DocumentGroup" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DocumentGroup_tenantId_deletedAt_idx" ON "DocumentGroup"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DocumentGroup_tenantId_status_idx" ON "DocumentGroup"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DocumentGroup_tenantId_id_key" ON "DocumentGroup"("tenantId", "id");

-- CreateIndex
CREATE INDEX "DunningNotice_createdAt_idx" ON "DunningNotice" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_assignedToMemberId_idx" ON "DunningNotice"("tenantId", "assignedToMemberId");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_auditCorrelationId_idx" ON "DunningNotice"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_dataClassification_idx" ON "DunningNotice"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_deletedAt_idx" ON "DunningNotice"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_deliveryStatus_idx" ON "DunningNotice"("tenantId", "deliveryStatus");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_dunningLevel_idx" ON "DunningNotice"("tenantId", "dunningLevel");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_invoiceId_idx" ON "DunningNotice"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_paymentDeadline_idx" ON "DunningNotice"("tenantId", "paymentDeadline");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_sentDate_idx" ON "DunningNotice"("tenantId", "sentDate");

-- CreateIndex
CREATE INDEX "DunningNotice_tenantId_status_idx" ON "DunningNotice"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "DunningNotice_tenantId_id_key" ON "DunningNotice"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "DunningNotice_tenantId_invoiceId_dunningSequence_key" ON "DunningNotice"("tenantId", "invoiceId", "dunningSequence");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_createdAt_idx" ON "ESignatureEnvelope" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_auditCorrelationId_idx" ON "ESignatureEnvelope"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_completedAt_idx" ON "ESignatureEnvelope"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_dataClassification_idx" ON "ESignatureEnvelope"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_deletedAt_idx" ON "ESignatureEnvelope"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_deliveredAt_idx" ON "ESignatureEnvelope"("tenantId", "deliveredAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_entityType_entityId_idx" ON "ESignatureEnvelope"("tenantId", "entityType", "entityId");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_expiredAt_idx" ON "ESignatureEnvelope"("tenantId", "expiredAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_projectId_idx" ON "ESignatureEnvelope"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_providerEnvelopeId_idx" ON "ESignatureEnvelope"("tenantId", "providerEnvelopeId");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_providerName_idx" ON "ESignatureEnvelope"("tenantId", "providerName");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_senderMemberId_idx" ON "ESignatureEnvelope"("tenantId", "senderMemberId");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_sentAt_idx" ON "ESignatureEnvelope"("tenantId", "sentAt");

-- CreateIndex
CREATE INDEX "ESignatureEnvelope_tenantId_status_idx" ON "ESignatureEnvelope"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ESignatureEnvelope_tenantId_envelopeNumber_key" ON "ESignatureEnvelope"("tenantId", "envelopeNumber");

-- CreateIndex
CREATE UNIQUE INDEX "ESignatureEnvelope_tenantId_id_key" ON "ESignatureEnvelope"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_createdAt_idx" ON "ESignatureRecipient" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_auditCorrelationId_idx" ON "ESignatureRecipient"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_dataClassification_idx" ON "ESignatureRecipient"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_deletedAt_idx" ON "ESignatureRecipient"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_email_idx" ON "ESignatureRecipient"("tenantId", "email");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_envelopeId_idx" ON "ESignatureRecipient"("tenantId", "envelopeId");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_memberId_idx" ON "ESignatureRecipient"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_providerRecipientId_idx" ON "ESignatureRecipient"("tenantId", "providerRecipientId");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_recipientType_idx" ON "ESignatureRecipient"("tenantId", "recipientType");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_sentAt_idx" ON "ESignatureRecipient"("tenantId", "sentAt");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_signedAt_idx" ON "ESignatureRecipient"("tenantId", "signedAt");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_signingOrder_idx" ON "ESignatureRecipient"("tenantId", "signingOrder");

-- CreateIndex
CREATE INDEX "ESignatureRecipient_tenantId_status_idx" ON "ESignatureRecipient"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ESignatureRecipient_tenantId_envelopeId_email_key" ON "ESignatureRecipient"("tenantId", "envelopeId", "email");

-- CreateIndex
CREATE UNIQUE INDEX "ESignatureRecipient_tenantId_id_key" ON "ESignatureRecipient"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Employment_createdAt_idx" ON "Employment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Employment_tenantId_auditCorrelationId_idx" ON "Employment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Employment_tenantId_dataClassification_idx" ON "Employment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Employment_tenantId_employmentStatus_idx" ON "Employment"("tenantId", "employmentStatus");

-- CreateIndex
CREATE INDEX "Employment_tenantId_employmentType_idx" ON "Employment"("tenantId", "employmentType");

-- CreateIndex
CREATE INDEX "Employment_tenantId_endDate_idx" ON "Employment"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "Employment_tenantId_managerId_idx" ON "Employment"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "Employment_tenantId_startDate_idx" ON "Employment"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "Employment_tenantId_workerId_idx" ON "Employment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "Employment_tenantId_id_key" ON "Employment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Employment_tenantId_workerId_startDate_key" ON "Employment"("tenantId", "workerId", "startDate");

-- CreateIndex
CREATE INDEX "ErrorReport_createdAt_idx" ON "ErrorReport" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_ackStatus_idx" ON "ErrorReport"("tenantId", "ackStatus");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_auditCorrelationId_idx" ON "ErrorReport"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_dataClassification_idx" ON "ErrorReport"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_priority_idx" ON "ErrorReport"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_resolvedAt_idx" ON "ErrorReport"("tenantId", "resolvedAt");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_runId_idx" ON "ErrorReport"("tenantId", "runId");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_severity_idx" ON "ErrorReport"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_status_idx" ON "ErrorReport"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ErrorReport_tenantId_systemLogId_idx" ON "ErrorReport"("tenantId", "systemLogId");

-- CreateIndex
CREATE UNIQUE INDEX "ErrorReport_tenantId_id_key" ON "ErrorReport"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_globalId_key" ON "Estimate"("globalId");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_approvalTokenHash_key" ON "Estimate"("approvalTokenHash");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_publicViewTokenHash_key" ON "Estimate"("publicViewTokenHash");

-- CreateIndex
CREATE INDEX "Estimate_createdAt_idx" ON "Estimate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_approvedInvoiceId_idx" ON "Estimate"("tenantId", "approvedInvoiceId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_approvedProjectId_idx" ON "Estimate"("tenantId", "approvedProjectId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_auditCorrelationId_idx" ON "Estimate"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_clientAccountId_idx" ON "Estimate"("tenantId", "clientAccountId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_clientContactId_idx" ON "Estimate"("tenantId", "clientContactId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_contractTemplateId_idx" ON "Estimate"("tenantId", "contractTemplateId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_dataClassification_idx" ON "Estimate"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_deletedAt_idx" ON "Estimate"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_documentGroupId_idx" ON "Estimate"("tenantId", "documentGroupId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_grandTotal_idx" ON "Estimate"("tenantId", "grandTotal");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_serviceLocation_idx" ON "Estimate"("tenantId", "serviceLocation");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_status_createdAt_idx" ON "Estimate"("tenantId", "status", "createdAt");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_status_idx" ON "Estimate"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_termsTemplateId_idx" ON "Estimate"("tenantId", "termsTemplateId");

-- CreateIndex
CREATE INDEX "Estimate_tenantId_validUntil_idx" ON "Estimate"("tenantId", "validUntil");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_tenantId_approvedInvoiceId_key" ON "Estimate"("tenantId", "approvedInvoiceId");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_tenantId_approvedProjectId_key" ON "Estimate"("tenantId", "approvedProjectId");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_tenantId_estimateNumber_key" ON "Estimate"("tenantId", "estimateNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Estimate_tenantId_id_key" ON "Estimate"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_approvalRequestId_idx" ON "EstimateApproval"("tenantId", "approvalRequestId");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_approverId_idx" ON "EstimateApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_auditCorrelationId_idx" ON "EstimateApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_dataClassification_idx" ON "EstimateApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_decision_createdAt_idx" ON "EstimateApproval"("tenantId", "decision", "createdAt");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_decision_idx" ON "EstimateApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_estimateId_idx" ON "EstimateApproval"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_requestedAt_idx" ON "EstimateApproval"("tenantId", "requestedAt");

-- CreateIndex
CREATE INDEX "EstimateApproval_tenantId_status_idx" ON "EstimateApproval"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateApproval_tenantId_id_key" ON "EstimateApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_auditCorrelationId_idx" ON "EstimateAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_dataClassification_idx" ON "EstimateAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_documentGroupId_idx" ON "EstimateAttachment"("tenantId", "documentGroupId");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_estimateId_idx" ON "EstimateAttachment"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_estimateId_sortOrder_idx" ON "EstimateAttachment"("tenantId", "estimateId", "sortOrder");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_fileName_idx" ON "EstimateAttachment"("tenantId", "fileName");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_fileObjectId_idx" ON "EstimateAttachment"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_mimeType_idx" ON "EstimateAttachment"("tenantId", "mimeType");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_status_idx" ON "EstimateAttachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateAttachment_tenantId_uploadedBy_idx" ON "EstimateAttachment"("tenantId", "uploadedBy");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateAttachment_tenantId_id_key" ON "EstimateAttachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateComment_createdAt_idx" ON "EstimateComment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_auditCorrelationId_idx" ON "EstimateComment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_authorId_idx" ON "EstimateComment"("tenantId", "authorId");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_dataClassification_idx" ON "EstimateComment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_deletedAt_idx" ON "EstimateComment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_estimateId_idx" ON "EstimateComment"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_isInternal_idx" ON "EstimateComment"("tenantId", "isInternal");

-- CreateIndex
CREATE INDEX "EstimateComment_tenantId_status_idx" ON "EstimateComment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateComment_tenantId_id_key" ON "EstimateComment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateDiscount_tenantId_auditCorrelationId_idx" ON "EstimateDiscount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateDiscount_tenantId_dataClassification_idx" ON "EstimateDiscount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateDiscount_tenantId_estimateId_idx" ON "EstimateDiscount"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateDiscount_tenantId_status_idx" ON "EstimateDiscount"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateDiscount_tenantId_type_idx" ON "EstimateDiscount"("tenantId", "type");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateDiscount_tenantId_id_key" ON "EstimateDiscount"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_createdAt_idx" ON "EstimateHistoryEvent" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_actorId_idx" ON "EstimateHistoryEvent"("tenantId", "actorId");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_auditCorrelationId_idx" ON "EstimateHistoryEvent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_dataClassification_idx" ON "EstimateHistoryEvent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_deletedAt_idx" ON "EstimateHistoryEvent"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_estimateId_idx" ON "EstimateHistoryEvent"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_estimateId_timestamp_idx" ON "EstimateHistoryEvent"("tenantId", "estimateId", "timestamp");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_eventType_idx" ON "EstimateHistoryEvent"("tenantId", "eventType");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_status_idx" ON "EstimateHistoryEvent"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateHistoryEvent_tenantId_timestamp_idx" ON "EstimateHistoryEvent"("tenantId", "timestamp");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateHistoryEvent_tenantId_id_key" ON "EstimateHistoryEvent"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateLineItem_priceListItemId_idx" ON "EstimateLineItem"("priceListItemId");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_auditCorrelationId_idx" ON "EstimateLineItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_dataClassification_idx" ON "EstimateLineItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_estimateId_idx" ON "EstimateLineItem"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_estimateId_sortOrder_idx" ON "EstimateLineItem"("tenantId", "estimateId", "sortOrder");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_name_idx" ON "EstimateLineItem"("tenantId", "name");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_purchaseOrderLineId_idx" ON "EstimateLineItem"("tenantId", "purchaseOrderLineId");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_status_idx" ON "EstimateLineItem"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_taskId_idx" ON "EstimateLineItem"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "EstimateLineItem_tenantId_unitPrice_idx" ON "EstimateLineItem"("tenantId", "unitPrice");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateLineItem_tenantId_id_key" ON "EstimateLineItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateRevision_tenantId_auditCorrelationId_idx" ON "EstimateRevision"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateRevision_tenantId_createdAt_idx" ON "EstimateRevision"("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "EstimateRevision_tenantId_dataClassification_idx" ON "EstimateRevision"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateRevision_tenantId_estimateId_idx" ON "EstimateRevision"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateRevision_tenantId_status_idx" ON "EstimateRevision"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateRevision_tenantId_id_key" ON "EstimateRevision"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_auditCorrelationId_idx" ON "EstimateTax"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_dataClassification_idx" ON "EstimateTax"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_estimateId_idx" ON "EstimateTax"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_rate_idx" ON "EstimateTax"("tenantId", "rate");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_status_idx" ON "EstimateTax"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateTax_tenantId_taxType_idx" ON "EstimateTax"("tenantId", "taxType");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateTax_tenantId_id_key" ON "EstimateTax"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_auditCorrelationId_idx" ON "EstimateTerm"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_dataClassification_idx" ON "EstimateTerm"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_estimateId_idx" ON "EstimateTerm"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_estimateId_sortOrder_idx" ON "EstimateTerm"("tenantId", "estimateId", "sortOrder");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_status_idx" ON "EstimateTerm"("tenantId", "status");

-- CreateIndex
CREATE INDEX "EstimateTerm_tenantId_termType_idx" ON "EstimateTerm"("tenantId", "termType");

-- CreateIndex
CREATE UNIQUE INDEX "EstimateTerm_tenantId_id_key" ON "EstimateTerm"("tenantId", "id");

-- CreateIndex
CREATE INDEX "EventProjection_createdAt_idx" ON "EventProjection" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "EventProjection_tenantId_deletedAt_idx" ON "EventProjection"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "EventProjection_updatedAt_idx" ON "EventProjection" USING BRIN ("updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "EventProjection_tenantId_id_key" ON "EventProjection"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "EventProjection_tenantId_name_key" ON "EventProjection"("tenantId", "name");

-- CreateIndex
CREATE INDEX "EventSnapshot_createdAt_idx" ON "EventSnapshot" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "EventSnapshot_tenantId_aggregateType_aggregateId_idx" ON "EventSnapshot"("tenantId", "aggregateType", "aggregateId");

-- CreateIndex
CREATE INDEX "EventSnapshot_tenantId_deletedAt_idx" ON "EventSnapshot"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "EventSnapshot_tenantId_aggregateType_aggregateId_aggregateV_key" ON "EventSnapshot"("tenantId", "aggregateType", "aggregateId", "aggregateVersion");

-- CreateIndex
CREATE UNIQUE INDEX "EventSnapshot_tenantId_id_key" ON "EventSnapshot"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Expense_globalId_key" ON "Expense"("globalId");

-- CreateIndex
CREATE INDEX "Expense_createdAt_idx" ON "Expense" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Expense_tenantId_auditCorrelationId_idx" ON "Expense"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Expense_tenantId_category_idx" ON "Expense"("tenantId", "category");

-- CreateIndex
CREATE INDEX "Expense_tenantId_dataClassification_idx" ON "Expense"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Expense_tenantId_deletedAt_idx" ON "Expense"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Expense_tenantId_expenseDate_idx" ON "Expense"("tenantId", "expenseDate");

-- CreateIndex
CREATE INDEX "Expense_tenantId_expenseReportId_idx" ON "Expense"("tenantId", "expenseReportId");

-- CreateIndex
CREATE INDEX "Expense_tenantId_projectId_idx" ON "Expense"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Expense_tenantId_status_idx" ON "Expense"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Expense_tenantId_id_key" ON "Expense"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ExpenseApproval_createdAt_idx" ON "ExpenseApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_approverId_idx" ON "ExpenseApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_auditCorrelationId_idx" ON "ExpenseApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_dataClassification_idx" ON "ExpenseApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_decision_idx" ON "ExpenseApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_deletedAt_idx" ON "ExpenseApproval"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_expenseReportId_idx" ON "ExpenseApproval"("tenantId", "expenseReportId");

-- CreateIndex
CREATE INDEX "ExpenseApproval_tenantId_status_idx" ON "ExpenseApproval"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ExpenseApproval_tenantId_id_key" ON "ExpenseApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ExpenseLine_createdAt_idx" ON "ExpenseLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_auditCorrelationId_idx" ON "ExpenseLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_category_idx" ON "ExpenseLine"("tenantId", "category");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_dataClassification_idx" ON "ExpenseLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_deletedAt_idx" ON "ExpenseLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_expenseReportId_idx" ON "ExpenseLine"("tenantId", "expenseReportId");

-- CreateIndex
CREATE INDEX "ExpenseLine_tenantId_status_idx" ON "ExpenseLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ExpenseLine_tenantId_id_key" ON "ExpenseLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_createdAt_idx" ON "ExpenseReceipt" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_expenseId_idx" ON "ExpenseReceipt"("expenseId");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_auditCorrelationId_idx" ON "ExpenseReceipt"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_dataClassification_idx" ON "ExpenseReceipt"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_deletedAt_idx" ON "ExpenseReceipt"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_expenseReportId_idx" ON "ExpenseReceipt"("tenantId", "expenseReportId");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_merchantName_idx" ON "ExpenseReceipt"("tenantId", "merchantName");

-- CreateIndex
CREATE INDEX "ExpenseReceipt_tenantId_status_idx" ON "ExpenseReceipt"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ExpenseReceipt_tenantId_id_key" ON "ExpenseReceipt"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ExpenseReport_globalId_key" ON "ExpenseReport"("globalId");

-- CreateIndex
CREATE INDEX "ExpenseReport_createdAt_idx" ON "ExpenseReport" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_auditCorrelationId_idx" ON "ExpenseReport"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_dataClassification_idx" ON "ExpenseReport"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_deletedAt_idx" ON "ExpenseReport"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_employeeId_idx" ON "ExpenseReport"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_status_idx" ON "ExpenseReport"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ExpenseReport_tenantId_submittedAt_idx" ON "ExpenseReport"("tenantId", "submittedAt");

-- CreateIndex
CREATE UNIQUE INDEX "ExpenseReport_tenantId_id_key" ON "ExpenseReport"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ExportArtifact_createdAt_idx" ON "ExportArtifact" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_auditCorrelationId_idx" ON "ExportArtifact"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_dataClassification_idx" ON "ExportArtifact"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_deletedAt_idx" ON "ExportArtifact"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_jobId_idx" ON "ExportArtifact"("tenantId", "jobId");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_status_idx" ON "ExportArtifact"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ExportArtifact_tenantId_statusEnum_idx" ON "ExportArtifact"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "ExportArtifact_tenantId_id_key" ON "ExportArtifact"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ExportJob_createdAt_idx" ON "ExportJob" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_auditCorrelationId_idx" ON "ExportJob"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_dataClassification_idx" ON "ExportJob"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_deletedAt_idx" ON "ExportJob"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_reportDefinitionId_idx" ON "ExportJob"("tenantId", "reportDefinitionId");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_dashboardDefinitionId_idx" ON "ExportJob"("tenantId", "dashboardDefinitionId");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_scheduledAt_idx" ON "ExportJob"("tenantId", "scheduledAt");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_startedAt_idx" ON "ExportJob"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_completedAt_idx" ON "ExportJob"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_status_idx" ON "ExportJob"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ExportJob_tenantId_statusEnum_idx" ON "ExportJob"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "ExportJob_tenantId_id_key" ON "ExportJob"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ExternalShareLink_shareToken_key" ON "ExternalShareLink"("shareToken");

-- CreateIndex
CREATE UNIQUE INDEX "ExternalShareLink_shareUrl_key" ON "ExternalShareLink"("shareUrl");

-- CreateIndex
CREATE INDEX "ExternalShareLink_contentType_contentId_idx" ON "ExternalShareLink"("contentType", "contentId");

-- CreateIndex
CREATE INDEX "ExternalShareLink_createdAt_idx" ON "ExternalShareLink" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_auditCorrelationId_idx" ON "ExternalShareLink"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_channelId_idx" ON "ExternalShareLink"("tenantId", "channelId");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_createdById_idx" ON "ExternalShareLink"("tenantId", "createdById");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_currentUses_idx" ON "ExternalShareLink"("tenantId", "currentUses");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_dataClassification_idx" ON "ExternalShareLink"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_deletedAt_idx" ON "ExternalShareLink"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_expiresAt_idx" ON "ExternalShareLink"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_fileObjectId_idx" ON "ExternalShareLink"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_isOneTimeUse_idx" ON "ExternalShareLink"("tenantId", "isOneTimeUse");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_lastAccessedAt_idx" ON "ExternalShareLink"("tenantId", "lastAccessedAt");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_messageId_idx" ON "ExternalShareLink"("tenantId", "messageId");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_shareType_idx" ON "ExternalShareLink"("tenantId", "shareType");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_sharedWithEmail_idx" ON "ExternalShareLink"("tenantId", "sharedWithEmail");

-- CreateIndex
CREATE INDEX "ExternalShareLink_tenantId_status_idx" ON "ExternalShareLink"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ExternalShareLink_tenantId_id_key" ON "ExternalShareLink"("tenantId", "id");

-- CreateIndex
CREATE INDEX "FileObject_createdAt_idx" ON "FileObject" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_auditCorrelationId_idx" ON "FileObject"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_dataClassification_idx" ON "FileObject"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_deletedAt_idx" ON "FileObject"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_fileCategory_idx" ON "FileObject"("tenantId", "fileCategory");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_fileName_idx" ON "FileObject"("tenantId", "fileName");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_fileSize_idx" ON "FileObject"("tenantId", "fileSize");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_isEncrypted_idx" ON "FileObject"("tenantId", "isEncrypted");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_isPublic_idx" ON "FileObject"("tenantId", "isPublic");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_lastAccessedAt_idx" ON "FileObject"("tenantId", "lastAccessedAt");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_mimeType_idx" ON "FileObject"("tenantId", "mimeType");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_projectId_idx" ON "FileObject"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_status_idx" ON "FileObject"("tenantId", "status");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_storageProvider_idx" ON "FileObject"("tenantId", "storageProvider");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_uploadedById_idx" ON "FileObject"("tenantId", "uploadedById");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_virusScanAt_idx" ON "FileObject"("tenantId", "virusScanAt");

-- CreateIndex
CREATE INDEX "FileObject_tenantId_virusScanStatus_idx" ON "FileObject"("tenantId", "virusScanStatus");

-- CreateIndex
CREATE UNIQUE INDEX "FileObject_tenantId_id_key" ON "FileObject"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "FileObject_tenantId_storageKey_key" ON "FileObject"("tenantId", "storageKey");

-- CreateIndex
CREATE INDEX "FraudPolicy_createdAt_idx" ON "FraudPolicy" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_auditCorrelationId_idx" ON "FraudPolicy"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_dataClassification_idx" ON "FraudPolicy"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_deletedAt_idx" ON "FraudPolicy"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_entityTypes_idx" ON "FraudPolicy"("tenantId", "entityTypes");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_isActive_idx" ON "FraudPolicy"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_isSystemPolicy_idx" ON "FraudPolicy"("tenantId", "isSystemPolicy");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_lastTriggeredAt_idx" ON "FraudPolicy"("tenantId", "lastTriggeredAt");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_policyType_idx" ON "FraudPolicy"("tenantId", "policyType");

-- CreateIndex
CREATE INDEX "FraudPolicy_tenantId_status_idx" ON "FraudPolicy"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicy_tenantId_id_key" ON "FraudPolicy"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicy_tenantId_name_key" ON "FraudPolicy"("tenantId", "name");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_createdAt_idx" ON "FraudPolicyRule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_auditCorrelationId_idx" ON "FraudPolicyRule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_dataClassification_idx" ON "FraudPolicyRule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_deletedAt_idx" ON "FraudPolicyRule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_fraudPolicyId_idx" ON "FraudPolicyRule"("tenantId", "fraudPolicyId");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_isActive_idx" ON "FraudPolicyRule"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_lastTriggeredAt_idx" ON "FraudPolicyRule"("tenantId", "lastTriggeredAt");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_parentRuleId_idx" ON "FraudPolicyRule"("tenantId", "parentRuleId");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_priority_idx" ON "FraudPolicyRule"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_ruleType_idx" ON "FraudPolicyRule"("tenantId", "ruleType");

-- CreateIndex
CREATE INDEX "FraudPolicyRule_tenantId_status_idx" ON "FraudPolicyRule"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicyRule_tenantId_id_key" ON "FraudPolicyRule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicyRule_tenantId_fraudPolicyId_name_key" ON "FraudPolicyRule"("tenantId", "fraudPolicyId", "name");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_createdAt_idx" ON "FraudPolicyScope" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_auditCorrelationId_idx" ON "FraudPolicyScope"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_dataClassification_idx" ON "FraudPolicyScope"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_deletedAt_idx" ON "FraudPolicyScope"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_entityType_idx" ON "FraudPolicyScope"("tenantId", "entityType");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_fraudPolicyId_idx" ON "FraudPolicyScope"("tenantId", "fraudPolicyId");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_isActive_idx" ON "FraudPolicyScope"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_priority_idx" ON "FraudPolicyScope"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "FraudPolicyScope_tenantId_scopeType_idx" ON "FraudPolicyScope"("tenantId", "scopeType");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicyScope_tenantId_id_key" ON "FraudPolicyScope"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "FraudPolicyScope_tenantId_fraudPolicyId_name_key" ON "FraudPolicyScope"("tenantId", "fraudPolicyId", "name");

-- CreateIndex
CREATE INDEX "GLAccount_createdAt_idx" ON "GLAccount" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_accountCategory_idx" ON "GLAccount"("tenantId", "accountCategory");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_accountType_idx" ON "GLAccount"("tenantId", "accountType");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_auditCorrelationId_idx" ON "GLAccount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_dataClassification_idx" ON "GLAccount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_deletedAt_idx" ON "GLAccount"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_fullPath_idx" ON "GLAccount"("tenantId", "fullPath");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isActive_idx" ON "GLAccount"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isBillingAccount_idx" ON "GLAccount"("tenantId", "isBillingAccount");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isDetailAccount_idx" ON "GLAccount"("tenantId", "isDetailAccount");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isEstimatingAccount_idx" ON "GLAccount"("tenantId", "isEstimatingAccount");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isPayrollAccount_idx" ON "GLAccount"("tenantId", "isPayrollAccount");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_isProcurementAccount_idx" ON "GLAccount"("tenantId", "isProcurementAccount");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_parentAccountId_idx" ON "GLAccount"("tenantId", "parentAccountId");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_requiresProject_idx" ON "GLAccount"("tenantId", "requiresProject");

-- CreateIndex
CREATE INDEX "GLAccount_tenantId_status_idx" ON "GLAccount"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "GLAccount_tenantId_accountCode_key" ON "GLAccount"("tenantId", "accountCode");

-- CreateIndex
CREATE UNIQUE INDEX "GLAccount_tenantId_id_key" ON "GLAccount"("tenantId", "id");

-- CreateIndex
CREATE INDEX "GoodsReceipt_createdAt_idx" ON "GoodsReceipt" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_auditCorrelationId_idx" ON "GoodsReceipt"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_dataClassification_idx" ON "GoodsReceipt"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_deletedAt_idx" ON "GoodsReceipt"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_inspectionStatus_idx" ON "GoodsReceipt"("tenantId", "inspectionStatus");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_isComplete_idx" ON "GoodsReceipt"("tenantId", "isComplete");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_purchaseOrderId_idx" ON "GoodsReceipt"("tenantId", "purchaseOrderId");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_receivedDate_idx" ON "GoodsReceipt"("tenantId", "receivedDate");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_status_idx" ON "GoodsReceipt"("tenantId", "status");

-- CreateIndex
CREATE INDEX "GoodsReceipt_tenantId_vendorId_idx" ON "GoodsReceipt"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "GoodsReceipt_tenantId_id_key" ON "GoodsReceipt"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "GoodsReceipt_tenantId_receiptNumber_key" ON "GoodsReceipt"("tenantId", "receiptNumber");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_createdAt_idx" ON "GoodsReceiptLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_auditCorrelationId_idx" ON "GoodsReceiptLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_batchNumber_idx" ON "GoodsReceiptLine"("tenantId", "batchNumber");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_dataClassification_idx" ON "GoodsReceiptLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_deletedAt_idx" ON "GoodsReceiptLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_goodsReceiptId_idx" ON "GoodsReceiptLine"("tenantId", "goodsReceiptId");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_isProcessed_idx" ON "GoodsReceiptLine"("tenantId", "isProcessed");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_itemCode_idx" ON "GoodsReceiptLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_purchaseOrderLineId_idx" ON "GoodsReceiptLine"("tenantId", "purchaseOrderLineId");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_serialNumbers_idx" ON "GoodsReceiptLine"("tenantId", "serialNumbers");

-- CreateIndex
CREATE INDEX "GoodsReceiptLine_tenantId_status_idx" ON "GoodsReceiptLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "GoodsReceiptLine_tenantId_goodsReceiptId_lineNumber_key" ON "GoodsReceiptLine"("tenantId", "goodsReceiptId", "lineNumber");

-- CreateIndex
CREATE UNIQUE INDEX "GoodsReceiptLine_tenantId_id_key" ON "GoodsReceiptLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Grade_gradeCode_key" ON "Grade"("gradeCode");

-- CreateIndex
CREATE INDEX "Grade_createdAt_idx" ON "Grade" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Grade_tenantId_approvedByActorId_idx" ON "Grade"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "Grade_tenantId_auditCorrelationId_idx" ON "Grade"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Grade_tenantId_dataClassification_idx" ON "Grade"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Grade_tenantId_effectiveDate_idx" ON "Grade"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Grade_tenantId_gradeLevel_idx" ON "Grade"("tenantId", "gradeLevel");

-- CreateIndex
CREATE INDEX "Grade_tenantId_gradeName_idx" ON "Grade"("tenantId", "gradeName");

-- CreateIndex
CREATE INDEX "Grade_tenantId_minSalary_maxSalary_idx" ON "Grade"("tenantId", "minSalary", "maxSalary");

-- CreateIndex
CREATE INDEX "Grade_tenantId_parentGradeId_idx" ON "Grade"("tenantId", "parentGradeId");

-- CreateIndex
CREATE INDEX "Grade_tenantId_salaryBand_idx" ON "Grade"("tenantId", "salaryBand");

-- CreateIndex
CREATE UNIQUE INDEX "Grade_tenantId_gradeCode_key" ON "Grade"("tenantId", "gradeCode");

-- CreateIndex
CREATE UNIQUE INDEX "Grade_tenantId_id_key" ON "Grade"("tenantId", "id");

-- CreateIndex
CREATE INDEX "HolidayCalendar_createdAt_idx" ON "HolidayCalendar" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "HolidayCalendar_tenantId_auditCorrelationId_idx" ON "HolidayCalendar"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "HolidayCalendar_tenantId_calendarYear_idx" ON "HolidayCalendar"("tenantId", "calendarYear");

-- CreateIndex
CREATE INDEX "HolidayCalendar_tenantId_dataClassification_idx" ON "HolidayCalendar"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "HolidayCalendar_tenantId_isDefault_idx" ON "HolidayCalendar"("tenantId", "isDefault");

-- CreateIndex
CREATE UNIQUE INDEX "HolidayCalendar_tenantId_calendarName_calendarYear_key" ON "HolidayCalendar"("tenantId", "calendarName", "calendarYear");

-- CreateIndex
CREATE UNIQUE INDEX "HolidayCalendar_tenantId_id_key" ON "HolidayCalendar"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IdentityProvider_name_key" ON "IdentityProvider"("name");

-- CreateIndex
CREATE INDEX "IdentityProvider_auditCorrelationId_idx" ON "IdentityProvider"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "IdentityProvider_complianceLevel_idx" ON "IdentityProvider"("complianceLevel");

-- CreateIndex
CREATE INDEX "IdentityProvider_createdAt_idx" ON "IdentityProvider" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IdentityProvider_dataClassification_idx" ON "IdentityProvider"("dataClassification");

-- CreateIndex
CREATE INDEX "IdentityProvider_deletedAt_idx" ON "IdentityProvider"("deletedAt");

-- CreateIndex
CREATE INDEX "IdentityProvider_isActive_idx" ON "IdentityProvider"("isActive");

-- CreateIndex
CREATE INDEX "IdentityProvider_isDeprecated_idx" ON "IdentityProvider"("isDeprecated");

-- CreateIndex
CREATE INDEX "IdentityProvider_protocol_idx" ON "IdentityProvider"("protocol");

-- CreateIndex
CREATE INDEX "IdentityProvider_providerType_idx" ON "IdentityProvider"("providerType");

-- CreateIndex
CREATE INDEX "IdentityProvider_status_idx" ON "IdentityProvider"("status");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_createdAt_idx" ON "IdentityProviderConnection" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_auditCorrelationId_idx" ON "IdentityProviderConnection"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_configuredByMemberId_idx" ON "IdentityProviderConnection"("tenantId", "configuredByMemberId");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_dataClassification_idx" ON "IdentityProviderConnection"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_deletedAt_idx" ON "IdentityProviderConnection"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_identityProviderId_idx" ON "IdentityProviderConnection"("tenantId", "identityProviderId");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_isActive_idx" ON "IdentityProviderConnection"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_isActive_isDefault_idx" ON "IdentityProviderConnection"("tenantId", "isActive", "isDefault");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_isDefault_idx" ON "IdentityProviderConnection"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_lastUsedAt_idx" ON "IdentityProviderConnection"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_status_idx" ON "IdentityProviderConnection"("tenantId", "status");

-- CreateIndex
CREATE INDEX "IdentityProviderConnection_tenantId_testStatus_idx" ON "IdentityProviderConnection"("tenantId", "testStatus");

-- CreateIndex
CREATE UNIQUE INDEX "IdentityProviderConnection_tenantId_id_key" ON "IdentityProviderConnection"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IdentityProviderConnection_tenantId_identityProviderId_key" ON "IdentityProviderConnection"("tenantId", "identityProviderId");

-- CreateIndex
CREATE UNIQUE INDEX "IdentityProviderConnection_tenantId_name_key" ON "IdentityProviderConnection"("tenantId", "name");

-- CreateIndex
CREATE INDEX "Inspection_createdAt_idx" ON "Inspection" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Inspection_tenantId_auditCorrelationId_idx" ON "Inspection"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Inspection_tenantId_deletedAt_idx" ON "Inspection"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Inspection_tenantId_projectId_idx" ON "Inspection"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Inspection_tenantId_scheduledDate_idx" ON "Inspection"("tenantId", "scheduledDate");

-- CreateIndex
CREATE INDEX "Inspection_tenantId_status_idx" ON "Inspection"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Inspection_tenantId_id_key" ON "Inspection"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InspectionApproval_createdAt_idx" ON "InspectionApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InspectionApproval_tenantId_approverId_idx" ON "InspectionApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "InspectionApproval_tenantId_auditCorrelationId_idx" ON "InspectionApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InspectionApproval_tenantId_decidedAt_idx" ON "InspectionApproval"("tenantId", "decidedAt");

-- CreateIndex
CREATE INDEX "InspectionApproval_tenantId_decision_idx" ON "InspectionApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "InspectionApproval_tenantId_deletedAt_idx" ON "InspectionApproval"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "InspectionApproval_tenantId_id_key" ON "InspectionApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InspectionItem_createdAt_idx" ON "InspectionItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_auditCorrelationId_idx" ON "InspectionItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_dataClassification_idx" ON "InspectionItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_deletedAt_idx" ON "InspectionItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_inspectionId_idx" ON "InspectionItem"("tenantId", "inspectionId");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_passed_idx" ON "InspectionItem"("tenantId", "passed");

-- CreateIndex
CREATE INDEX "InspectionItem_tenantId_status_idx" ON "InspectionItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InspectionItem_tenantId_id_key" ON "InspectionItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InspectionItem_tenantId_inspectionId_itemNumber_key" ON "InspectionItem"("tenantId", "inspectionId", "itemNumber");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnection_globalId_key" ON "IntegrationConnection"("globalId");

-- CreateIndex
CREATE INDEX "IntegrationConnection_createdAt_idx" ON "IntegrationConnection" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IntegrationConnection_externalConnectionId_idx" ON "IntegrationConnection"("externalConnectionId");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_auditCorrelationId_idx" ON "IntegrationConnection"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_connectionStatus_idx" ON "IntegrationConnection"("tenantId", "connectionStatus");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_dataClassification_idx" ON "IntegrationConnection"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_deletedAt_idx" ON "IntegrationConnection"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_healthStatus_idx" ON "IntegrationConnection"("tenantId", "healthStatus");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_integrationConnectorId_idx" ON "IntegrationConnection"("tenantId", "integrationConnectorId");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_lastSuccessfulConnect_idx" ON "IntegrationConnection"("tenantId", "lastSuccessfulConnect");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_lastSyncAt_idx" ON "IntegrationConnection"("tenantId", "lastSyncAt");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_nextSyncAt_idx" ON "IntegrationConnection"("tenantId", "nextSyncAt");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_status_idx" ON "IntegrationConnection"("tenantId", "status");

-- CreateIndex
CREATE INDEX "IntegrationConnection_tenantId_tokenExpiresAt_idx" ON "IntegrationConnection"("tenantId", "tokenExpiresAt");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnection_tenantId_id_key" ON "IntegrationConnection"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnection_tenantId_integrationConnectorId_conne_key" ON "IntegrationConnection"("tenantId", "integrationConnectorId", "connectionName");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnector_globalId_key" ON "IntegrationConnector"("globalId");

-- CreateIndex
CREATE INDEX "IntegrationConnector_createdAt_idx" ON "IntegrationConnector" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_approvedById_idx" ON "IntegrationConnector"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_auditCorrelationId_idx" ON "IntegrationConnector"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_dataClassification_idx" ON "IntegrationConnector"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_deletedAt_idx" ON "IntegrationConnector"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_environment_idx" ON "IntegrationConnector"("tenantId", "environment");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_integrationProviderId_idx" ON "IntegrationConnector"("tenantId", "integrationProviderId");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_nextReviewDate_idx" ON "IntegrationConnector"("tenantId", "nextReviewDate");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_status_idx" ON "IntegrationConnector"("tenantId", "status");

-- CreateIndex
CREATE INDEX "IntegrationConnector_tenantId_syncDirection_idx" ON "IntegrationConnector"("tenantId", "syncDirection");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnector_tenantId_id_key" ON "IntegrationConnector"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationConnector_tenantId_integrationProviderId_connect_key" ON "IntegrationConnector"("tenantId", "integrationProviderId", "connectorName");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationMapping_globalId_key" ON "IntegrationMapping"("globalId");

-- CreateIndex
CREATE INDEX "IntegrationMapping_createdAt_idx" ON "IntegrationMapping" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_auditCorrelationId_idx" ON "IntegrationMapping"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_dataClassification_idx" ON "IntegrationMapping"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_deletedAt_idx" ON "IntegrationMapping"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_integrationConnectionId_idx" ON "IntegrationMapping"("tenantId", "integrationConnectionId");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_lastUsedAt_idx" ON "IntegrationMapping"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_mappingDirection_idx" ON "IntegrationMapping"("tenantId", "mappingDirection");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_mappingType_idx" ON "IntegrationMapping"("tenantId", "mappingType");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_mappingVersion_idx" ON "IntegrationMapping"("tenantId", "mappingVersion");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_sourceEntity_idx" ON "IntegrationMapping"("tenantId", "sourceEntity");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_status_idx" ON "IntegrationMapping"("tenantId", "status");

-- CreateIndex
CREATE INDEX "IntegrationMapping_tenantId_targetEntity_idx" ON "IntegrationMapping"("tenantId", "targetEntity");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationMapping_tenantId_id_key" ON "IntegrationMapping"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationMapping_tenantId_integrationConnectionId_mapping_key" ON "IntegrationMapping"("tenantId", "integrationConnectionId", "mappingName");

-- CreateIndex
CREATE INDEX "IntegrationProvider_auditCorrelationId_idx" ON "IntegrationProvider"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "IntegrationProvider_authenticationType_idx" ON "IntegrationProvider"("authenticationType");

-- CreateIndex
CREATE INDEX "IntegrationProvider_category_idx" ON "IntegrationProvider"("category");

-- CreateIndex
CREATE INDEX "IntegrationProvider_createdAt_idx" ON "IntegrationProvider" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IntegrationProvider_dataClassification_idx" ON "IntegrationProvider"("dataClassification");

-- CreateIndex
CREATE INDEX "IntegrationProvider_isEnterprise_idx" ON "IntegrationProvider"("isEnterprise");

-- CreateIndex
CREATE INDEX "IntegrationProvider_providerCode_idx" ON "IntegrationProvider"("providerCode");

-- CreateIndex
CREATE INDEX "IntegrationProvider_providerName_idx" ON "IntegrationProvider"("providerName");

-- CreateIndex
CREATE INDEX "IntegrationProvider_requiresApproval_idx" ON "IntegrationProvider"("requiresApproval");

-- CreateIndex
CREATE INDEX "IntegrationProvider_status_idx" ON "IntegrationProvider"("status");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationSecret_globalId_key" ON "IntegrationSecret"("globalId");

-- CreateIndex
CREATE INDEX "IntegrationSecret_createdAt_idx" ON "IntegrationSecret" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_auditCorrelationId_idx" ON "IntegrationSecret"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_complianceClassification_idx" ON "IntegrationSecret"("tenantId", "complianceClassification");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_dataClassification_idx" ON "IntegrationSecret"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_deletedAt_idx" ON "IntegrationSecret"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_expiresAt_idx" ON "IntegrationSecret"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_integrationConnectionId_idx" ON "IntegrationSecret"("tenantId", "integrationConnectionId");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_lastUsedAt_idx" ON "IntegrationSecret"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_nextRotationDue_idx" ON "IntegrationSecret"("tenantId", "nextRotationDue");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_secretStatus_idx" ON "IntegrationSecret"("tenantId", "secretStatus");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_secretType_idx" ON "IntegrationSecret"("tenantId", "secretType");

-- CreateIndex
CREATE INDEX "IntegrationSecret_tenantId_status_idx" ON "IntegrationSecret"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationSecret_tenantId_id_key" ON "IntegrationSecret"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "IntegrationSecret_tenantId_integrationConnectionId_secretNa_key" ON "IntegrationSecret"("tenantId", "integrationConnectionId", "secretName");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_createdAt_idx" ON "InventoryAdjustment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_adjustmentDate_idx" ON "InventoryAdjustment"("tenantId", "adjustmentDate");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_adjustmentType_idx" ON "InventoryAdjustment"("tenantId", "adjustmentType");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_approvedBy_idx" ON "InventoryAdjustment"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_auditCorrelationId_idx" ON "InventoryAdjustment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_dataClassification_idx" ON "InventoryAdjustment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_deletedAt_idx" ON "InventoryAdjustment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_inventoryItemId_idx" ON "InventoryAdjustment"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_locationId_idx" ON "InventoryAdjustment"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_reasonCode_idx" ON "InventoryAdjustment"("tenantId", "reasonCode");

-- CreateIndex
CREATE INDEX "InventoryAdjustment_tenantId_status_idx" ON "InventoryAdjustment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryAdjustment_tenantId_adjustmentNumber_key" ON "InventoryAdjustment"("tenantId", "adjustmentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryAdjustment_tenantId_id_key" ON "InventoryAdjustment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InventoryAttachment_createdAt_idx" ON "InventoryAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_attachmentType_idx" ON "InventoryAttachment"("tenantId", "attachmentType");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_auditCorrelationId_idx" ON "InventoryAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_dataClassification_idx" ON "InventoryAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_deletedAt_idx" ON "InventoryAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_inventoryItemId_idx" ON "InventoryAttachment"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "InventoryAttachment_tenantId_status_idx" ON "InventoryAttachment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryAttachment_tenantId_id_key" ON "InventoryAttachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InventoryBin_createdAt_idx" ON "InventoryBin" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_auditCorrelationId_idx" ON "InventoryBin"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_binType_idx" ON "InventoryBin"("tenantId", "binType");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_dataClassification_idx" ON "InventoryBin"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_deletedAt_idx" ON "InventoryBin"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_isActive_idx" ON "InventoryBin"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_locationId_idx" ON "InventoryBin"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "InventoryBin_tenantId_status_idx" ON "InventoryBin"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryBin_tenantId_id_key" ON "InventoryBin"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryBin_tenantId_locationId_binCode_key" ON "InventoryBin"("tenantId", "locationId", "binCode");

-- CreateIndex
CREATE INDEX "InventoryCount_createdAt_idx" ON "InventoryCount" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_assignedTo_idx" ON "InventoryCount"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_auditCorrelationId_idx" ON "InventoryCount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_countDate_idx" ON "InventoryCount"("tenantId", "countDate");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_countStatus_idx" ON "InventoryCount"("tenantId", "countStatus");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_countType_idx" ON "InventoryCount"("tenantId", "countType");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_dataClassification_idx" ON "InventoryCount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_deletedAt_idx" ON "InventoryCount"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_locationId_idx" ON "InventoryCount"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "InventoryCount_tenantId_status_idx" ON "InventoryCount"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryCount_tenantId_countNumber_key" ON "InventoryCount"("tenantId", "countNumber");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryCount_tenantId_id_key" ON "InventoryCount"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InventoryCountLine_createdAt_idx" ON "InventoryCountLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_auditCorrelationId_idx" ON "InventoryCountLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_countedBy_idx" ON "InventoryCountLine"("tenantId", "countedBy");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_dataClassification_idx" ON "InventoryCountLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_deletedAt_idx" ON "InventoryCountLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_inventoryCountId_idx" ON "InventoryCountLine"("tenantId", "inventoryCountId");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_inventoryItemId_idx" ON "InventoryCountLine"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_lineStatus_idx" ON "InventoryCountLine"("tenantId", "lineStatus");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_requiresRecount_idx" ON "InventoryCountLine"("tenantId", "requiresRecount");

-- CreateIndex
CREATE INDEX "InventoryCountLine_tenantId_status_idx" ON "InventoryCountLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryCountLine_tenantId_id_key" ON "InventoryCountLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryCountLine_tenantId_inventoryCountId_lineNumber_key" ON "InventoryCountLine"("tenantId", "inventoryCountId", "lineNumber");

-- CreateIndex
CREATE INDEX "InventoryItem_createdAt_idx" ON "InventoryItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_auditCorrelationId_idx" ON "InventoryItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_category_idx" ON "InventoryItem"("tenantId", "category");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_category_subcategory_idx" ON "InventoryItem"("tenantId", "category", "subcategory");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_controlled_idx" ON "InventoryItem"("tenantId", "controlled");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_currentStock_idx" ON "InventoryItem"("tenantId", "currentStock");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_dataClassification_idx" ON "InventoryItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_deletedAt_idx" ON "InventoryItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_hazardous_idx" ON "InventoryItem"("tenantId", "hazardous");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_lastStockUpdate_idx" ON "InventoryItem"("tenantId", "lastStockUpdate");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_minimumStock_idx" ON "InventoryItem"("tenantId", "minimumStock");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_status_idx" ON "InventoryItem"("tenantId", "status");

-- CreateIndex
CREATE INDEX "InventoryItem_tenantId_unitOfMeasure_idx" ON "InventoryItem"("tenantId", "unitOfMeasure");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryItem_tenantId_id_key" ON "InventoryItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryItem_tenantId_itemCode_key" ON "InventoryItem"("tenantId", "itemCode");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryLocation_locationCode_key" ON "InventoryLocation"("locationCode");

-- CreateIndex
CREATE INDEX "InventoryLocation_createdAt_idx" ON "InventoryLocation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_auditCorrelationId_idx" ON "InventoryLocation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_dataClassification_idx" ON "InventoryLocation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_deletedAt_idx" ON "InventoryLocation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_isActive_idx" ON "InventoryLocation"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_locationType_idx" ON "InventoryLocation"("tenantId", "locationType");

-- CreateIndex
CREATE INDEX "InventoryLocation_tenantId_status_idx" ON "InventoryLocation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryLocation_tenantId_id_key" ON "InventoryLocation"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryLocation_tenantId_locationCode_key" ON "InventoryLocation"("tenantId", "locationCode");

-- CreateIndex
CREATE INDEX "InventoryReservation_createdAt_idx" ON "InventoryReservation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_auditCorrelationId_idx" ON "InventoryReservation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_dataClassification_idx" ON "InventoryReservation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_deletedAt_idx" ON "InventoryReservation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_inventoryItemId_idx" ON "InventoryReservation"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_priority_idx" ON "InventoryReservation"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_referenceType_referenceId_idx" ON "InventoryReservation"("tenantId", "referenceType", "referenceId");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_requiredDate_idx" ON "InventoryReservation"("tenantId", "requiredDate");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_reservationDate_idx" ON "InventoryReservation"("tenantId", "reservationDate");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_reservationType_idx" ON "InventoryReservation"("tenantId", "reservationType");

-- CreateIndex
CREATE INDEX "InventoryReservation_tenantId_status_idx" ON "InventoryReservation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryReservation_tenantId_id_key" ON "InventoryReservation"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryReservation_tenantId_reservationNumber_key" ON "InventoryReservation"("tenantId", "reservationNumber");

-- CreateIndex
CREATE INDEX "InventoryTransaction_createdAt_idx" ON "InventoryTransaction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_auditCorrelationId_idx" ON "InventoryTransaction"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_dataClassification_idx" ON "InventoryTransaction"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_deletedAt_idx" ON "InventoryTransaction"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_inventoryItemId_idx" ON "InventoryTransaction"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_locationId_idx" ON "InventoryTransaction"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_lotNumber_idx" ON "InventoryTransaction"("tenantId", "lotNumber");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_referenceType_referenceId_idx" ON "InventoryTransaction"("tenantId", "referenceType", "referenceId");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_serialNumber_idx" ON "InventoryTransaction"("tenantId", "serialNumber");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_status_idx" ON "InventoryTransaction"("tenantId", "status");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_transactionDate_idx" ON "InventoryTransaction"("tenantId", "transactionDate");

-- CreateIndex
CREATE INDEX "InventoryTransaction_tenantId_transactionType_idx" ON "InventoryTransaction"("tenantId", "transactionType");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransaction_tenantId_id_key" ON "InventoryTransaction"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransaction_tenantId_transactionNumber_key" ON "InventoryTransaction"("tenantId", "transactionNumber");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_createdAt_idx" ON "InventoryTransactionChain" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_auditCorrelationId_idx" ON "InventoryTransactionChain"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_batchId_idx" ON "InventoryTransactionChain"("tenantId", "batchId");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_blockNumber_idx" ON "InventoryTransactionChain"("tenantId", "blockNumber");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_dataClassification_idx" ON "InventoryTransactionChain"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_deletedAt_idx" ON "InventoryTransactionChain"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_isValid_idx" ON "InventoryTransactionChain"("tenantId", "isValid");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_timestampProof_idx" ON "InventoryTransactionChain"("tenantId", "timestampProof");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_transactionId_idx" ON "InventoryTransactionChain"("tenantId", "transactionId");

-- CreateIndex
CREATE INDEX "InventoryTransactionChain_tenantId_verificationStatus_idx" ON "InventoryTransactionChain"("tenantId", "verificationStatus");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransactionChain_tenantId_chainSequence_key" ON "InventoryTransactionChain"("tenantId", "chainSequence");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransactionChain_tenantId_id_key" ON "InventoryTransactionChain"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransactionChain_tenantId_transactionHash_key" ON "InventoryTransactionChain"("tenantId", "transactionHash");

-- CreateIndex
CREATE UNIQUE INDEX "InventoryTransactionChain_tenantId_transactionId_key" ON "InventoryTransactionChain"("tenantId", "transactionId");

-- CreateIndex
CREATE UNIQUE INDEX "Invoice_globalId_key" ON "Invoice"("globalId");

-- CreateIndex
CREATE INDEX "Invoice_createdAt_idx" ON "Invoice" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_accountId_idx" ON "Invoice"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_approvedByMemberId_idx" ON "Invoice"("tenantId", "approvedByMemberId");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_auditCorrelationId_idx" ON "Invoice"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_balanceAmount_idx" ON "Invoice"("tenantId", "balanceAmount");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_contactId_idx" ON "Invoice"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_currency_idx" ON "Invoice"("tenantId", "currency");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_currencyEnum_idx" ON "Invoice"("tenantId", "currencyEnum");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_dataClassification_idx" ON "Invoice"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_deletedAt_idx" ON "Invoice"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_dueDate_idx" ON "Invoice"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_invoiceDate_idx" ON "Invoice"("tenantId", "invoiceDate");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_overdueDate_idx" ON "Invoice"("tenantId", "overdueDate");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_status_idx" ON "Invoice"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Invoice_tenantId_totalAmount_idx" ON "Invoice"("tenantId", "totalAmount");

-- CreateIndex
CREATE INDEX "idx_invoice_tenant_deleted" ON "Invoice"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "Invoice_tenantId_estimateId_key" ON "Invoice"("tenantId", "estimateId");

-- CreateIndex
CREATE UNIQUE INDEX "Invoice_tenantId_id_key" ON "Invoice"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Invoice_tenantId_invoiceNumber_key" ON "Invoice"("tenantId", "invoiceNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Invoice_tenantId_projectId_key" ON "Invoice"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_createdAt_idx" ON "InvoiceAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_auditCorrelationId_idx" ON "InvoiceAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_dataClassification_idx" ON "InvoiceAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_deletedAt_idx" ON "InvoiceAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_documentType_idx" ON "InvoiceAttachment"("tenantId", "documentType");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_invoiceId_idx" ON "InvoiceAttachment"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_isPublic_idx" ON "InvoiceAttachment"("tenantId", "isPublic");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_status_idx" ON "InvoiceAttachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "InvoiceAttachment_tenantId_uploadedById_idx" ON "InvoiceAttachment"("tenantId", "uploadedById");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceAttachment_tenantId_id_key" ON "InvoiceAttachment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceAttachment_tenantId_invoiceId_attachmentSequence_key" ON "InvoiceAttachment"("tenantId", "invoiceId", "attachmentSequence");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_createdAt_idx" ON "InvoiceLineItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_auditCorrelationId_idx" ON "InvoiceLineItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_costCode_idx" ON "InvoiceLineItem"("tenantId", "costCode");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_dataClassification_idx" ON "InvoiceLineItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_deletedAt_idx" ON "InvoiceLineItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_glAccountCode_idx" ON "InvoiceLineItem"("tenantId", "glAccountCode");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_invoiceId_idx" ON "InvoiceLineItem"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_itemCode_idx" ON "InvoiceLineItem"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_itemType_idx" ON "InvoiceLineItem"("tenantId", "itemType");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_sourceType_idx" ON "InvoiceLineItem"("tenantId", "sourceType");

-- CreateIndex
CREATE INDEX "InvoiceLineItem_tenantId_status_idx" ON "InvoiceLineItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceLineItem_tenantId_id_key" ON "InvoiceLineItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceLineItem_tenantId_invoiceId_lineNumber_key" ON "InvoiceLineItem"("tenantId", "invoiceId", "lineNumber");

-- CreateIndex
CREATE INDEX "InvoicePayment_appliedAt_idx" ON "InvoicePayment" USING BRIN ("appliedAt");

-- CreateIndex
CREATE INDEX "InvoicePayment_tenantId_appliedAmount_idx" ON "InvoicePayment"("tenantId", "appliedAmount");

-- CreateIndex
CREATE INDEX "InvoicePayment_tenantId_auditCorrelationId_idx" ON "InvoicePayment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InvoicePayment_tenantId_dataClassification_idx" ON "InvoicePayment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InvoicePayment_tenantId_invoiceId_idx" ON "InvoicePayment"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "InvoicePayment_tenantId_paymentId_idx" ON "InvoicePayment"("tenantId", "paymentId");

-- CreateIndex
CREATE UNIQUE INDEX "InvoicePayment_paymentId_invoiceId_key" ON "InvoicePayment"("paymentId", "invoiceId");

-- CreateIndex
CREATE UNIQUE INDEX "InvoicePayment_tenantId_id_key" ON "InvoicePayment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "InvoiceTax_createdAt_idx" ON "InvoiceTax" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_auditCorrelationId_idx" ON "InvoiceTax"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_dataClassification_idx" ON "InvoiceTax"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_deletedAt_idx" ON "InvoiceTax"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_invoiceId_idx" ON "InvoiceTax"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_jurisdiction_idx" ON "InvoiceTax"("tenantId", "jurisdiction");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_status_idx" ON "InvoiceTax"("tenantId", "status");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_taxCode_idx" ON "InvoiceTax"("tenantId", "taxCode");

-- CreateIndex
CREATE INDEX "InvoiceTax_tenantId_taxType_idx" ON "InvoiceTax"("tenantId", "taxType");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceTax_tenantId_id_key" ON "InvoiceTax"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "InvoiceTax_tenantId_invoiceId_taxSequence_key" ON "InvoiceTax"("tenantId", "invoiceId", "taxSequence");

-- CreateIndex
CREATE UNIQUE INDEX "JobFamily_familyCode_key" ON "JobFamily"("familyCode");

-- CreateIndex
CREATE INDEX "JobFamily_createdAt_idx" ON "JobFamily" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_auditCorrelationId_idx" ON "JobFamily"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_dataClassification_idx" ON "JobFamily"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_effectiveDate_idx" ON "JobFamily"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_familyLevel_idx" ON "JobFamily"("tenantId", "familyLevel");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_familyName_idx" ON "JobFamily"("tenantId", "familyName");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_isActive_idx" ON "JobFamily"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "JobFamily_tenantId_parentFamilyId_idx" ON "JobFamily"("tenantId", "parentFamilyId");

-- CreateIndex
CREATE UNIQUE INDEX "JobFamily_tenantId_familyCode_key" ON "JobFamily"("tenantId", "familyCode");

-- CreateIndex
CREATE UNIQUE INDEX "JobFamily_tenantId_id_key" ON "JobFamily"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfile_jobCode_key" ON "JobProfile"("jobCode");

-- CreateIndex
CREATE INDEX "JobProfile_createdAt_idx" ON "JobProfile" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_approvedByActorId_idx" ON "JobProfile"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_auditCorrelationId_idx" ON "JobProfile"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_dataClassification_idx" ON "JobProfile"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_effectiveDate_idx" ON "JobProfile"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_flsaClassification_idx" ON "JobProfile"("tenantId", "flsaClassification");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_jobFamilyId_idx" ON "JobProfile"("tenantId", "jobFamilyId");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_jobFamilyId_payGradeId_idx" ON "JobProfile"("tenantId", "jobFamilyId", "payGradeId");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_jobLevel_idx" ON "JobProfile"("tenantId", "jobLevel");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_jobTitle_idx" ON "JobProfile"("tenantId", "jobTitle");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_payGradeId_idx" ON "JobProfile"("tenantId", "payGradeId");

-- CreateIndex
CREATE INDEX "JobProfile_tenantId_workLocation_idx" ON "JobProfile"("tenantId", "workLocation");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfile_tenantId_id_key" ON "JobProfile"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfile_tenantId_jobCode_key" ON "JobProfile"("tenantId", "jobCode");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfile_tenantId_jobTitle_key" ON "JobProfile"("tenantId", "jobTitle");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_createdAt_idx" ON "JobProfileAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_assignmentType_idx" ON "JobProfileAssignment"("tenantId", "assignmentType");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_auditCorrelationId_idx" ON "JobProfileAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_certificationRequired_idx" ON "JobProfileAssignment"("tenantId", "certificationRequired");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_dataClassification_idx" ON "JobProfileAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_endDate_idx" ON "JobProfileAssignment"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_isPrimary_idx" ON "JobProfileAssignment"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_jobProfileId_idx" ON "JobProfileAssignment"("tenantId", "jobProfileId");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_performanceRating_idx" ON "JobProfileAssignment"("tenantId", "performanceRating");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_startDate_idx" ON "JobProfileAssignment"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "JobProfileAssignment_tenantId_workerId_idx" ON "JobProfileAssignment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfileAssignment_tenantId_id_key" ON "JobProfileAssignment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JobProfileAssignment_tenantId_workerId_jobProfileId_startDa_key" ON "JobProfileAssignment"("tenantId", "workerId", "jobProfileId", "startDate");

-- CreateIndex
CREATE INDEX "JobRun_createdAt_idx" ON "JobRun" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_auditCorrelationId_idx" ON "JobRun"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_dataClassification_idx" ON "JobRun"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_priority_idx" ON "JobRun"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_scheduleId_idx" ON "JobRun"("tenantId", "scheduleId");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_startedAt_idx" ON "JobRun"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_status_idx" ON "JobRun"("tenantId", "status");

-- CreateIndex
CREATE INDEX "JobRun_tenantId_statusEnum_idx" ON "JobRun"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "JobRun_tenantId_id_key" ON "JobRun"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JobRun_tenantId_scheduleId_runNumber_key" ON "JobRun"("tenantId", "scheduleId", "runNumber");

-- CreateIndex
CREATE INDEX "JobSchedule_createdAt_idx" ON "JobSchedule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_auditCorrelationId_idx" ON "JobSchedule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_dataClassification_idx" ON "JobSchedule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_isActive_idx" ON "JobSchedule"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_nextRunAt_idx" ON "JobSchedule"("tenantId", "nextRunAt");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_priority_idx" ON "JobSchedule"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_status_idx" ON "JobSchedule"("tenantId", "status");

-- CreateIndex
CREATE INDEX "JobSchedule_tenantId_statusEnum_idx" ON "JobSchedule"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "JobSchedule_tenantId_id_key" ON "JobSchedule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JobSchedule_tenantId_name_key" ON "JobSchedule"("tenantId", "name");

-- CreateIndex
CREATE INDEX "JournalEntry_createdAt_idx" ON "JournalEntry" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_approvedById_idx" ON "JournalEntry"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_auditCorrelationId_idx" ON "JournalEntry"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_dataClassification_idx" ON "JournalEntry"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_deletedAt_idx" ON "JournalEntry"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_entryDate_idx" ON "JournalEntry"("tenantId", "entryDate");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_entryType_idx" ON "JournalEntry"("tenantId", "entryType");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_isBalanced_idx" ON "JournalEntry"("tenantId", "isBalanced");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_originalEntryId_idx" ON "JournalEntry"("tenantId", "originalEntryId");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_periodYear_periodMonth_idx" ON "JournalEntry"("tenantId", "periodYear", "periodMonth");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_postingDate_idx" ON "JournalEntry"("tenantId", "postingDate");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_projectId_idx" ON "JournalEntry"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_requiresApproval_idx" ON "JournalEntry"("tenantId", "requiresApproval");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_sourceEntityType_sourceEntityId_idx" ON "JournalEntry"("tenantId", "sourceEntityType", "sourceEntityId");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_sourceModule_idx" ON "JournalEntry"("tenantId", "sourceModule");

-- CreateIndex
CREATE INDEX "JournalEntry_tenantId_status_idx" ON "JournalEntry"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "JournalEntry_tenantId_entryNumber_key" ON "JournalEntry"("tenantId", "entryNumber");

-- CreateIndex
CREATE UNIQUE INDEX "JournalEntry_tenantId_id_key" ON "JournalEntry"("tenantId", "id");

-- CreateIndex
CREATE INDEX "JournalLine_createdAt_idx" ON "JournalLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_auditCorrelationId_idx" ON "JournalLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_currency_idx" ON "JournalLine"("tenantId", "currency");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_customerId_idx" ON "JournalLine"("tenantId", "customerId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_dataClassification_idx" ON "JournalLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_deletedAt_idx" ON "JournalLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_glAccountId_idx" ON "JournalLine"("tenantId", "glAccountId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_indicator_idx" ON "JournalLine"("tenantId", "indicator");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_journalEntryId_idx" ON "JournalLine"("tenantId", "journalEntryId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_projectId_idx" ON "JournalLine"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_sourceDocumentType_sourceDocumentId_idx" ON "JournalLine"("tenantId", "sourceDocumentType", "sourceDocumentId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_status_idx" ON "JournalLine"("tenantId", "status");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_taxJurisdictionId_idx" ON "JournalLine"("tenantId", "taxJurisdictionId");

-- CreateIndex
CREATE INDEX "JournalLine_tenantId_vendorId_idx" ON "JournalLine"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "JournalLine_tenantId_id_key" ON "JournalLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "JournalLine_tenantId_journalEntryId_lineNumber_key" ON "JournalLine"("tenantId", "journalEntryId", "lineNumber");

-- CreateIndex
CREATE INDEX "KPIAggregate_createdAt_idx" ON "KPIAggregate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_auditCorrelationId_idx" ON "KPIAggregate"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_dataClassification_idx" ON "KPIAggregate"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_deletedAt_idx" ON "KPIAggregate"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_kpiCode_idx" ON "KPIAggregate"("tenantId", "kpiCode");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_periodStart_idx" ON "KPIAggregate"("tenantId", "periodStart");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_cubeId_idx" ON "KPIAggregate"("tenantId", "cubeId");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_partitionId_idx" ON "KPIAggregate"("tenantId", "partitionId");

-- CreateIndex
CREATE INDEX "KPIAggregate_tenantId_status_idx" ON "KPIAggregate"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "KPIAggregate_tenantId_id_key" ON "KPIAggregate"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Lead_createdAt_idx" ON "Lead" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Lead_tenantId_auditCorrelationId_idx" ON "Lead"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Lead_tenantId_companyName_idx" ON "Lead"("tenantId", "companyName");

-- CreateIndex
CREATE INDEX "Lead_tenantId_dataClassification_idx" ON "Lead"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Lead_tenantId_deletedAt_idx" ON "Lead"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Lead_tenantId_email_idx" ON "Lead"("tenantId", "email");

-- CreateIndex
CREATE INDEX "Lead_tenantId_industry_idx" ON "Lead"("tenantId", "industry");

-- CreateIndex
CREATE INDEX "Lead_tenantId_leadScore_idx" ON "Lead"("tenantId", "leadScore");

-- CreateIndex
CREATE INDEX "Lead_tenantId_source_idx" ON "Lead"("tenantId", "source");

-- CreateIndex
CREATE INDEX "Lead_tenantId_status_idx" ON "Lead"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Lead_tenantId_id_key" ON "Lead"("tenantId", "id");

-- CreateIndex
CREATE INDEX "LeadActivity_createdAt_idx" ON "LeadActivity" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_activityType_idx" ON "LeadActivity"("tenantId", "activityType");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_auditCorrelationId_idx" ON "LeadActivity"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_dataClassification_idx" ON "LeadActivity"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_deletedAt_idx" ON "LeadActivity"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_leadId_idx" ON "LeadActivity"("tenantId", "leadId");

-- CreateIndex
CREATE INDEX "LeadActivity_tenantId_status_idx" ON "LeadActivity"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "LeadActivity_tenantId_id_key" ON "LeadActivity"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Leave_createdAt_idx" ON "Leave" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Leave_tenantId_approvedById_idx" ON "Leave"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "Leave_tenantId_dataClassification_idx" ON "Leave"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Leave_tenantId_isFMLA_idx" ON "Leave"("tenantId", "isFMLA");

-- CreateIndex
CREATE INDEX "Leave_tenantId_leaveType_idx" ON "Leave"("tenantId", "leaveType");

-- CreateIndex
CREATE INDEX "Leave_tenantId_requestDate_idx" ON "Leave"("tenantId", "requestDate");

-- CreateIndex
CREATE INDEX "Leave_tenantId_startDate_endDate_idx" ON "Leave"("tenantId", "startDate", "endDate");

-- CreateIndex
CREATE INDEX "Leave_tenantId_status_idx" ON "Leave"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Leave_tenantId_workerId_idx" ON "Leave"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "Leave_tenantId_id_key" ON "Leave"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Location_locationCode_key" ON "Location"("locationCode");

-- CreateIndex
CREATE INDEX "Location_createdAt_idx" ON "Location" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Location_tenantId_approvedByActorId_idx" ON "Location"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "Location_tenantId_auditCorrelationId_idx" ON "Location"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Location_tenantId_city_country_idx" ON "Location"("tenantId", "city", "country");

-- CreateIndex
CREATE INDEX "Location_tenantId_city_idx" ON "Location"("tenantId", "city");

-- CreateIndex
CREATE INDEX "Location_tenantId_costCenterId_idx" ON "Location"("tenantId", "costCenterId");

-- CreateIndex
CREATE INDEX "Location_tenantId_country_idx" ON "Location"("tenantId", "country");

-- CreateIndex
CREATE INDEX "Location_tenantId_dataClassification_idx" ON "Location"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Location_tenantId_effectiveDate_idx" ON "Location"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Location_tenantId_facilityManagerId_idx" ON "Location"("tenantId", "facilityManagerId");

-- CreateIndex
CREATE INDEX "Location_tenantId_isActive_idx" ON "Location"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Location_tenantId_isHeadquarters_idx" ON "Location"("tenantId", "isHeadquarters");

-- CreateIndex
CREATE INDEX "Location_tenantId_locationName_idx" ON "Location"("tenantId", "locationName");

-- CreateIndex
CREATE INDEX "Location_tenantId_locationType_idx" ON "Location"("tenantId", "locationType");

-- CreateIndex
CREATE INDEX "Location_tenantId_managerId_idx" ON "Location"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "Location_tenantId_stateProvince_idx" ON "Location"("tenantId", "stateProvince");

-- CreateIndex
CREATE UNIQUE INDEX "Location_tenantId_id_key" ON "Location"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Location_tenantId_locationCode_key" ON "Location"("tenantId", "locationCode");

-- CreateIndex
CREATE INDEX "LossInvestigation_createdAt_idx" ON "LossInvestigation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_assignedTo_idx" ON "LossInvestigation"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_auditCorrelationId_idx" ON "LossInvestigation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_dataClassification_idx" ON "LossInvestigation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_deletedAt_idx" ON "LossInvestigation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_inventoryItemId_idx" ON "LossInvestigation"("tenantId", "inventoryItemId");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_investigationDate_idx" ON "LossInvestigation"("tenantId", "investigationDate");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_investigationStatus_idx" ON "LossInvestigation"("tenantId", "investigationStatus");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_investigationType_idx" ON "LossInvestigation"("tenantId", "investigationType");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_locationId_idx" ON "LossInvestigation"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_priority_idx" ON "LossInvestigation"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_severity_idx" ON "LossInvestigation"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "LossInvestigation_tenantId_status_idx" ON "LossInvestigation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "LossInvestigation_tenantId_id_key" ON "LossInvestigation"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "LossInvestigation_tenantId_investigationNumber_key" ON "LossInvestigation"("tenantId", "investigationNumber");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_createdAt_idx" ON "LossInvestigationFinding" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_auditCorrelationId_idx" ON "LossInvestigationFinding"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_dataClassification_idx" ON "LossInvestigationFinding"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_deletedAt_idx" ON "LossInvestigationFinding"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_findingCategory_idx" ON "LossInvestigationFinding"("tenantId", "findingCategory");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_findingStatus_idx" ON "LossInvestigationFinding"("tenantId", "findingStatus");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_findingType_idx" ON "LossInvestigationFinding"("tenantId", "findingType");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_impactLevel_idx" ON "LossInvestigationFinding"("tenantId", "impactLevel");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_lossInvestigationId_idx" ON "LossInvestigationFinding"("tenantId", "lossInvestigationId");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_recommendedBy_idx" ON "LossInvestigationFinding"("tenantId", "recommendedBy");

-- CreateIndex
CREATE INDEX "LossInvestigationFinding_tenantId_status_idx" ON "LossInvestigationFinding"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "LossInvestigationFinding_tenantId_findingNumber_key" ON "LossInvestigationFinding"("tenantId", "findingNumber");

-- CreateIndex
CREATE UNIQUE INDEX "LossInvestigationFinding_tenantId_id_key" ON "LossInvestigationFinding"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Member_createdAt_idx" ON "Member" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Member_invitedByMemberId_idx" ON "Member"("invitedByMemberId");

-- CreateIndex
CREATE INDEX "Member_tenantId_accessLevel_idx" ON "Member"("tenantId", "accessLevel");

-- CreateIndex
CREATE INDEX "Member_tenantId_auditCorrelationId_idx" ON "Member"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Member_tenantId_dataClassification_idx" ON "Member"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Member_tenantId_deletedAt_idx" ON "Member"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Member_tenantId_department_idx" ON "Member"("tenantId", "department");

-- CreateIndex
CREATE INDEX "Member_tenantId_isActive_idx" ON "Member"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Member_tenantId_status_idx" ON "Member"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Member_tenantId_userId_idx" ON "Member"("tenantId", "userId");

-- CreateIndex
CREATE INDEX "Member_tenantId_workEmail_idx" ON "Member"("tenantId", "workEmail");

-- CreateIndex
CREATE INDEX "Member_terminatedByMemberId_idx" ON "Member"("terminatedByMemberId");

-- CreateIndex
CREATE INDEX "idx_member_tenant_deleted" ON "Member"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "Member_tenantId_employeeId_key" ON "Member"("tenantId", "employeeId");

-- CreateIndex
CREATE UNIQUE INDEX "Member_tenantId_id_key" ON "Member"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Member_tenantId_memberNumber_key" ON "Member"("tenantId", "memberNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Member_tenantId_userId_key" ON "Member"("tenantId", "userId");

-- CreateIndex
CREATE INDEX "MemberDocument_createdAt_idx" ON "MemberDocument" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_accessLevel_idx" ON "MemberDocument"("tenantId", "accessLevel");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_auditCorrelationId_idx" ON "MemberDocument"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_dataClassification_idx" ON "MemberDocument"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_deletedAt_idx" ON "MemberDocument"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_documentType_idx" ON "MemberDocument"("tenantId", "documentType");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_expirationDate_idx" ON "MemberDocument"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_isRequired_idx" ON "MemberDocument"("tenantId", "isRequired");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_isVerified_idx" ON "MemberDocument"("tenantId", "isVerified");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_memberId_idx" ON "MemberDocument"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_status_idx" ON "MemberDocument"("tenantId", "status");

-- CreateIndex
CREATE INDEX "MemberDocument_tenantId_uploadedById_idx" ON "MemberDocument"("tenantId", "uploadedById");

-- CreateIndex
CREATE UNIQUE INDEX "MemberDocument_tenantId_id_key" ON "MemberDocument"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MemberDocument_tenantId_memberId_documentType_documentNumbe_key" ON "MemberDocument"("tenantId", "memberId", "documentType", "documentNumber");

-- CreateIndex
CREATE INDEX "MemberRole_approvedByMemberId_idx" ON "MemberRole"("approvedByMemberId");

-- CreateIndex
CREATE INDEX "MemberRole_assignedByMemberId_idx" ON "MemberRole"("assignedByMemberId");

-- CreateIndex
CREATE INDEX "MemberRole_createdAt_idx" ON "MemberRole" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MemberRole_deactivatedByMemberId_idx" ON "MemberRole"("deactivatedByMemberId");

-- CreateIndex
CREATE INDEX "MemberRole_delegatedToMemberId_idx" ON "MemberRole"("delegatedToMemberId");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_assignedAt_idx" ON "MemberRole"("tenantId", "assignedAt");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_auditCorrelationId_idx" ON "MemberRole"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_dataClassification_idx" ON "MemberRole"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_deletedAt_idx" ON "MemberRole"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_effectiveFrom_idx" ON "MemberRole"("tenantId", "effectiveFrom");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_effectiveTo_idx" ON "MemberRole"("tenantId", "effectiveTo");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_isPrimary_idx" ON "MemberRole"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_memberId_idx" ON "MemberRole"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_requiresApproval_idx" ON "MemberRole"("tenantId", "requiresApproval");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_roleId_idx" ON "MemberRole"("tenantId", "roleId");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_scopeResourceType_scopeResourceId_idx" ON "MemberRole"("tenantId", "scopeResourceType", "scopeResourceId");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_scope_idx" ON "MemberRole"("tenantId", "scope");

-- CreateIndex
CREATE INDEX "MemberRole_tenantId_status_idx" ON "MemberRole"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "MemberRole_tenantId_id_key" ON "MemberRole"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MemberRole_tenantId_memberId_roleId_effectiveFrom_key" ON "MemberRole"("tenantId", "memberId", "roleId", "effectiveFrom");

-- CreateIndex
CREATE UNIQUE INDEX "MemberSettings_memberId_key" ON "MemberSettings"("memberId");

-- CreateIndex
CREATE INDEX "MemberSettings_createdAt_idx" ON "MemberSettings" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_auditCorrelationId_idx" ON "MemberSettings"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_dataClassification_idx" ON "MemberSettings"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_deletedAt_idx" ON "MemberSettings"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_language_idx" ON "MemberSettings"("tenantId", "language");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_status_idx" ON "MemberSettings"("tenantId", "status");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_theme_idx" ON "MemberSettings"("tenantId", "theme");

-- CreateIndex
CREATE INDEX "MemberSettings_tenantId_timezone_idx" ON "MemberSettings"("tenantId", "timezone");

-- CreateIndex
CREATE UNIQUE INDEX "MemberSettings_tenantId_id_key" ON "MemberSettings"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MemberSettings_tenantId_memberId_key" ON "MemberSettings"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "Message_createdAt_idx" ON "Message" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Message_searchableContent_idx" ON "Message"("searchableContent");

-- CreateIndex
CREATE INDEX "Message_tenantId_auditCorrelationId_idx" ON "Message"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Message_tenantId_channelId_idx" ON "Message"("tenantId", "channelId");

-- CreateIndex
CREATE INDEX "Message_tenantId_createdAt_idx" ON "Message"("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "Message_tenantId_dataClassification_idx" ON "Message"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Message_tenantId_deletedAt_idx" ON "Message"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Message_tenantId_isFlagged_idx" ON "Message"("tenantId", "isFlagged");

-- CreateIndex
CREATE INDEX "Message_tenantId_isImportant_idx" ON "Message"("tenantId", "isImportant");

-- CreateIndex
CREATE INDEX "Message_tenantId_isPinned_idx" ON "Message"("tenantId", "isPinned");

-- CreateIndex
CREATE INDEX "Message_tenantId_lastReplyAt_idx" ON "Message"("tenantId", "lastReplyAt");

-- CreateIndex
CREATE INDEX "Message_tenantId_messageStatus_idx" ON "Message"("tenantId", "messageStatus");

-- CreateIndex
CREATE INDEX "Message_tenantId_messageType_idx" ON "Message"("tenantId", "messageType");

-- CreateIndex
CREATE INDEX "Message_tenantId_parentMessageId_idx" ON "Message"("tenantId", "parentMessageId");

-- CreateIndex
CREATE INDEX "Message_tenantId_scheduledAt_idx" ON "Message"("tenantId", "scheduledAt");

-- CreateIndex
CREATE INDEX "Message_tenantId_senderId_idx" ON "Message"("tenantId", "senderId");

-- CreateIndex
CREATE INDEX "Message_tenantId_status_idx" ON "Message"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Message_tenantId_id_key" ON "Message"("tenantId", "id");

-- CreateIndex
CREATE INDEX "MessageAttachment_createdAt_idx" ON "MessageAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MessageAttachment_mimeType_idx" ON "MessageAttachment"("mimeType");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_attachmentType_idx" ON "MessageAttachment"("tenantId", "attachmentType");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_auditCorrelationId_idx" ON "MessageAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_dataClassification_idx" ON "MessageAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_deletedAt_idx" ON "MessageAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_downloadCount_idx" ON "MessageAttachment"("tenantId", "downloadCount");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_fileObjectId_idx" ON "MessageAttachment"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_fileSize_idx" ON "MessageAttachment"("tenantId", "fileSize");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_lastAccessedAt_idx" ON "MessageAttachment"("tenantId", "lastAccessedAt");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_messageId_idx" ON "MessageAttachment"("tenantId", "messageId");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_status_idx" ON "MessageAttachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_uploadedById_idx" ON "MessageAttachment"("tenantId", "uploadedById");

-- CreateIndex
CREATE INDEX "MessageAttachment_tenantId_virusScanned_idx" ON "MessageAttachment"("tenantId", "virusScanned");

-- CreateIndex
CREATE UNIQUE INDEX "MessageAttachment_tenantId_id_key" ON "MessageAttachment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MessageAttachment_tenantId_messageId_fileObjectId_key" ON "MessageAttachment"("tenantId", "messageId", "fileObjectId");

-- CreateIndex
CREATE INDEX "MessageRead_createdAt_idx" ON "MessageRead" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_auditCorrelationId_idx" ON "MessageRead"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_channelId_idx" ON "MessageRead"("tenantId", "channelId");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_dataClassification_idx" ON "MessageRead"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_deletedAt_idx" ON "MessageRead"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_deliveredAt_idx" ON "MessageRead"("tenantId", "deliveredAt");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_firstReadAt_idx" ON "MessageRead"("tenantId", "firstReadAt");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_isAutoRead_idx" ON "MessageRead"("tenantId", "isAutoRead");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_memberId_idx" ON "MessageRead"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_messageId_idx" ON "MessageRead"("tenantId", "messageId");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_readAt_idx" ON "MessageRead"("tenantId", "readAt");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_readStatus_idx" ON "MessageRead"("tenantId", "readStatus");

-- CreateIndex
CREATE INDEX "MessageRead_tenantId_status_idx" ON "MessageRead"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "MessageRead_tenantId_id_key" ON "MessageRead"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MessageRead_tenantId_messageId_memberId_key" ON "MessageRead"("tenantId", "messageId", "memberId");

-- CreateIndex
CREATE INDEX "MetricSnapshot_createdAt_idx" ON "MetricSnapshot" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_auditCorrelationId_idx" ON "MetricSnapshot"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_dataClassification_idx" ON "MetricSnapshot"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_deletedAt_idx" ON "MetricSnapshot"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_metricCode_idx" ON "MetricSnapshot"("tenantId", "metricCode");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_snapshotAt_idx" ON "MetricSnapshot"("tenantId", "snapshotAt");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_cubeId_idx" ON "MetricSnapshot"("tenantId", "cubeId");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_partitionId_idx" ON "MetricSnapshot"("tenantId", "partitionId");

-- CreateIndex
CREATE INDEX "MetricSnapshot_tenantId_status_idx" ON "MetricSnapshot"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "MetricSnapshot_tenantId_id_key" ON "MetricSnapshot"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Milestone_createdAt_idx" ON "Milestone" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_alertDaysBefore_targetDate_idx" ON "Milestone"("tenantId", "alertDaysBefore", "targetDate");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_auditCorrelationId_idx" ON "Milestone"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_completedAt_idx" ON "Milestone"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_dataClassification_idx" ON "Milestone"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_deletedAt_idx" ON "Milestone"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_isClientFacing_idx" ON "Milestone"("tenantId", "isClientFacing");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_isCompleted_idx" ON "Milestone"("tenantId", "isCompleted");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_isCriticalPath_idx" ON "Milestone"("tenantId", "isCriticalPath");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_milestoneStatus_idx" ON "Milestone"("tenantId", "milestoneStatus");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_milestoneType_idx" ON "Milestone"("tenantId", "milestoneType");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_ownerId_idx" ON "Milestone"("tenantId", "ownerId");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_priority_idx" ON "Milestone"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_projectId_idx" ON "Milestone"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_scheduleId_idx" ON "Milestone"("tenantId", "scheduleId");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_status_idx" ON "Milestone"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Milestone_tenantId_targetDate_idx" ON "Milestone"("tenantId", "targetDate");

-- CreateIndex
CREATE UNIQUE INDEX "Milestone_tenantId_id_key" ON "Milestone"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Milestone_tenantId_scheduleId_name_key" ON "Milestone"("tenantId", "scheduleId", "name");

-- CreateIndex
CREATE INDEX "MilestoneDependency_createdAt_idx" ON "MilestoneDependency" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_auditCorrelationId_idx" ON "MilestoneDependency"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_dataClassification_idx" ON "MilestoneDependency"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_deletedAt_idx" ON "MilestoneDependency"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_dependencyType_idx" ON "MilestoneDependency"("tenantId", "dependencyType");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_dependentMilestoneId_idx" ON "MilestoneDependency"("tenantId", "dependentMilestoneId");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_isActive_idx" ON "MilestoneDependency"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_prerequisiteMilestoneId_idx" ON "MilestoneDependency"("tenantId", "prerequisiteMilestoneId");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_status_idx" ON "MilestoneDependency"("tenantId", "status");

-- CreateIndex
CREATE INDEX "MilestoneDependency_tenantId_violationRisk_idx" ON "MilestoneDependency"("tenantId", "violationRisk");

-- CreateIndex
CREATE UNIQUE INDEX "MilestoneDependency_tenantId_dependentMilestoneId_prerequis_key" ON "MilestoneDependency"("tenantId", "dependentMilestoneId", "prerequisiteMilestoneId");

-- CreateIndex
CREATE UNIQUE INDEX "MilestoneDependency_tenantId_id_key" ON "MilestoneDependency"("tenantId", "id");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_createdAt_idx" ON "MilestoneStakeholder" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_auditCorrelationId_idx" ON "MilestoneStakeholder"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_dataClassification_idx" ON "MilestoneStakeholder"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_deletedAt_idx" ON "MilestoneStakeholder"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_involvementLevel_idx" ON "MilestoneStakeholder"("tenantId", "involvementLevel");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_isRequired_idx" ON "MilestoneStakeholder"("tenantId", "isRequired");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_milestoneId_idx" ON "MilestoneStakeholder"("tenantId", "milestoneId");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_stakeholderId_idx" ON "MilestoneStakeholder"("tenantId", "stakeholderId");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_stakeholderRole_idx" ON "MilestoneStakeholder"("tenantId", "stakeholderRole");

-- CreateIndex
CREATE INDEX "MilestoneStakeholder_tenantId_status_idx" ON "MilestoneStakeholder"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "MilestoneStakeholder_tenantId_id_key" ON "MilestoneStakeholder"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "MilestoneStakeholder_tenantId_milestoneId_stakeholderId_key" ON "MilestoneStakeholder"("tenantId", "milestoneId", "stakeholderId");

-- CreateIndex
CREATE INDEX "NumberSequence_tenantId_status_idx" ON "NumberSequence"("tenantId", "status");

-- CreateIndex
CREATE INDEX "NumberSequence_tenantId_deletedAt_idx" ON "NumberSequence"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "NumberSequence_tenantId_code_key" ON "NumberSequence"("tenantId", "code");

-- CreateIndex
CREATE INDEX "Opportunity_createdAt_idx" ON "Opportunity" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_accountId_idx" ON "Opportunity"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_amount_idx" ON "Opportunity"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_auditCorrelationId_idx" ON "Opportunity"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_contactId_idx" ON "Opportunity"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_dataClassification_idx" ON "Opportunity"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_deletedAt_idx" ON "Opportunity"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_expectedCloseDate_idx" ON "Opportunity"("tenantId", "expectedCloseDate");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_leadId_idx" ON "Opportunity"("tenantId", "leadId");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_probability_idx" ON "Opportunity"("tenantId", "probability");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_stageId_idx" ON "Opportunity"("tenantId", "stageId");

-- CreateIndex
CREATE INDEX "Opportunity_tenantId_status_idx" ON "Opportunity"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Opportunity_tenantId_id_key" ON "Opportunity"("tenantId", "id");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_createdAt_idx" ON "OpportunityLineItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_priceListItemId_idx" ON "OpportunityLineItem"("priceListItemId");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_auditCorrelationId_idx" ON "OpportunityLineItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_contactId_idx" ON "OpportunityLineItem"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_dataClassification_idx" ON "OpportunityLineItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_deletedAt_idx" ON "OpportunityLineItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_opportunityId_idx" ON "OpportunityLineItem"("tenantId", "opportunityId");

-- CreateIndex
CREATE INDEX "OpportunityLineItem_tenantId_status_idx" ON "OpportunityLineItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "OpportunityLineItem_tenantId_id_key" ON "OpportunityLineItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "OpportunityStage_createdAt_idx" ON "OpportunityStage" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "OpportunityStage_tenantId_auditCorrelationId_idx" ON "OpportunityStage"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "OpportunityStage_tenantId_dataClassification_idx" ON "OpportunityStage"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "OpportunityStage_tenantId_deletedAt_idx" ON "OpportunityStage"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "OpportunityStage_tenantId_sortOrder_idx" ON "OpportunityStage"("tenantId", "sortOrder");

-- CreateIndex
CREATE INDEX "OpportunityStage_tenantId_status_idx" ON "OpportunityStage"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "OpportunityStage_tenantId_id_key" ON "OpportunityStage"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "OrgUnit_unitCode_key" ON "OrgUnit"("unitCode");

-- CreateIndex
CREATE INDEX "OrgUnit_createdAt_idx" ON "OrgUnit" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_approvedByActorId_idx" ON "OrgUnit"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_auditCorrelationId_idx" ON "OrgUnit"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_budgetAmount_idx" ON "OrgUnit"("tenantId", "budgetAmount");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_costCenterId_idx" ON "OrgUnit"("tenantId", "costCenterId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_dataClassification_idx" ON "OrgUnit"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_departmentId_idx" ON "OrgUnit"("tenantId", "departmentId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_effectiveDate_idx" ON "OrgUnit"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_isActive_idx" ON "OrgUnit"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_managerId_idx" ON "OrgUnit"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_parentUnitId_idx" ON "OrgUnit"("tenantId", "parentUnitId");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_regionCode_idx" ON "OrgUnit"("tenantId", "regionCode");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_unitLevel_idx" ON "OrgUnit"("tenantId", "unitLevel");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_unitName_idx" ON "OrgUnit"("tenantId", "unitName");

-- CreateIndex
CREATE INDEX "OrgUnit_tenantId_unitType_idx" ON "OrgUnit"("tenantId", "unitType");

-- CreateIndex
CREATE UNIQUE INDEX "OrgUnit_tenantId_id_key" ON "OrgUnit"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "OrgUnit_tenantId_unitCode_key" ON "OrgUnit"("tenantId", "unitCode");

-- CreateIndex
CREATE INDEX "OvertimeRule_createdAt_idx" ON "OvertimeRule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_auditCorrelationId_idx" ON "OvertimeRule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_dataClassification_idx" ON "OvertimeRule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_deletedAt_idx" ON "OvertimeRule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_effectiveDate_idx" ON "OvertimeRule"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_employeeGroup_idx" ON "OvertimeRule"("tenantId", "employeeGroup");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_isDefault_idx" ON "OvertimeRule"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_priority_idx" ON "OvertimeRule"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_ruleType_idx" ON "OvertimeRule"("tenantId", "ruleType");

-- CreateIndex
CREATE INDEX "OvertimeRule_tenantId_status_idx" ON "OvertimeRule"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "OvertimeRule_tenantId_id_key" ON "OvertimeRule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "OvertimeRule_tenantId_ruleCode_key" ON "OvertimeRule"("tenantId", "ruleCode");

-- CreateIndex
CREATE INDEX "PasswordResetToken_createdAt_idx" ON "PasswordResetToken" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PasswordResetToken_requestedEmail_idx" ON "PasswordResetToken"("requestedEmail");

-- CreateIndex
CREATE INDEX "PasswordResetToken_expiresAt_idx" ON "PasswordResetToken"("expiresAt");

-- CreateIndex
CREATE INDEX "PasswordResetToken_isUsed_idx" ON "PasswordResetToken"("isUsed");

-- CreateIndex
CREATE INDEX "PasswordResetToken_userId_idx" ON "PasswordResetToken"("userId");

-- CreateIndex
CREATE INDEX "PasswordResetToken_status_idx" ON "PasswordResetToken"("status");

-- CreateIndex
CREATE INDEX "PasswordResetToken_auditCorrelationId_idx" ON "PasswordResetToken"("auditCorrelationId");

-- CreateIndex
CREATE UNIQUE INDEX "PasswordResetToken_selector_key" ON "PasswordResetToken"("selector");

-- CreateIndex
CREATE UNIQUE INDEX "PasswordResetToken_token_key" ON "PasswordResetToken"("token");

-- CreateIndex
CREATE UNIQUE INDEX "PayCalendar_calendarCode_key" ON "PayCalendar"("calendarCode");

-- CreateIndex
CREATE INDEX "PayCalendar_createdAt_idx" ON "PayCalendar" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_approvedByActorId_idx" ON "PayCalendar"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_auditCorrelationId_idx" ON "PayCalendar"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_calendarName_idx" ON "PayCalendar"("tenantId", "calendarName");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_calendarYear_idx" ON "PayCalendar"("tenantId", "calendarYear");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_currentPeriod_idx" ON "PayCalendar"("tenantId", "currentPeriod");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_dataClassification_idx" ON "PayCalendar"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_effectiveDate_idx" ON "PayCalendar"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_holidayCalendarId_idx" ON "PayCalendar"("tenantId", "holidayCalendarId");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_isActive_idx" ON "PayCalendar"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "PayCalendar_tenantId_payFrequency_idx" ON "PayCalendar"("tenantId", "payFrequency");

-- CreateIndex
CREATE UNIQUE INDEX "PayCalendar_tenantId_calendarCode_key" ON "PayCalendar"("tenantId", "calendarCode");

-- CreateIndex
CREATE UNIQUE INDEX "PayCalendar_tenantId_calendarYear_payFrequency_key" ON "PayCalendar"("tenantId", "calendarYear", "payFrequency");

-- CreateIndex
CREATE UNIQUE INDEX "PayCalendar_tenantId_id_key" ON "PayCalendar"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayGroup_payGroupCode_key" ON "PayGroup"("payGroupCode");

-- CreateIndex
CREATE INDEX "PayGroup_createdAt_idx" ON "PayGroup" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_approvedByActorId_idx" ON "PayGroup"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_auditCorrelationId_idx" ON "PayGroup"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_dataClassification_idx" ON "PayGroup"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_effectiveDate_idx" ON "PayGroup"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_payCalendarId_idx" ON "PayGroup"("tenantId", "payCalendarId");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_payFrequency_idx" ON "PayGroup"("tenantId", "payFrequency");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_payGroupName_idx" ON "PayGroup"("tenantId", "payGroupName");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_processingDay_idx" ON "PayGroup"("tenantId", "processingDay");

-- CreateIndex
CREATE INDEX "PayGroup_tenantId_taxJurisdiction_idx" ON "PayGroup"("tenantId", "taxJurisdiction");

-- CreateIndex
CREATE UNIQUE INDEX "PayGroup_tenantId_id_key" ON "PayGroup"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayGroup_tenantId_payGroupCode_key" ON "PayGroup"("tenantId", "payGroupCode");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_createdAt_idx" ON "PayGroupAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_auditCorrelationId_idx" ON "PayGroupAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_dataClassification_idx" ON "PayGroupAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_effectiveDate_idx" ON "PayGroupAssignment"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_isPrimary_idx" ON "PayGroupAssignment"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_payGroupId_idx" ON "PayGroupAssignment"("tenantId", "payGroupId");

-- CreateIndex
CREATE INDEX "PayGroupAssignment_tenantId_workerId_idx" ON "PayGroupAssignment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "PayGroupAssignment_tenantId_id_key" ON "PayGroupAssignment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayGroupAssignment_tenantId_workerId_payGroupId_effectiveDa_key" ON "PayGroupAssignment"("tenantId", "workerId", "payGroupId", "effectiveDate");

-- CreateIndex
CREATE INDEX "PayStatement_createdAt_idx" ON "PayStatement" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_auditCorrelationId_idx" ON "PayStatement"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_dataClassification_idx" ON "PayStatement"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_deletedAt_idx" ON "PayStatement"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_employeeId_idx" ON "PayStatement"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_payPeriodStart_payPeriodEnd_idx" ON "PayStatement"("tenantId", "payPeriodStart", "payPeriodEnd");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_payrollRunId_idx" ON "PayStatement"("tenantId", "payrollRunId");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_statementDate_idx" ON "PayStatement"("tenantId", "statementDate");

-- CreateIndex
CREATE INDEX "PayStatement_tenantId_status_idx" ON "PayStatement"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PayStatement_tenantId_id_key" ON "PayStatement"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayStatement_tenantId_statementNumber_key" ON "PayStatement"("tenantId", "statementNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Payment_paymentNumber_key" ON "Payment"("paymentNumber");

-- CreateIndex
CREATE INDEX "Payment_paymentDate_idx" ON "Payment" USING BRIN ("paymentDate");

-- CreateIndex
CREATE INDEX "Payment_tenantId_accountId_idx" ON "Payment"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Payment_tenantId_amount_idx" ON "Payment"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "Payment_tenantId_auditCorrelationId_idx" ON "Payment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Payment_tenantId_contactId_idx" ON "Payment"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "Payment_tenantId_createdByActorId_idx" ON "Payment"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "Payment_tenantId_dataClassification_idx" ON "Payment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Payment_tenantId_paymentDate_idx" ON "Payment"("tenantId", "paymentDate");

-- CreateIndex
CREATE INDEX "Payment_tenantId_paymentDate_status_idx" ON "Payment"("tenantId", "paymentDate", "status");

-- CreateIndex
CREATE INDEX "Payment_tenantId_paymentMethodId_idx" ON "Payment"("tenantId", "paymentMethodId");

-- CreateIndex
CREATE INDEX "Payment_tenantId_paymentMethodType_idx" ON "Payment"("tenantId", "paymentMethodType");

-- CreateIndex
CREATE INDEX "Payment_tenantId_paymentNumber_idx" ON "Payment"("tenantId", "paymentNumber");

-- CreateIndex
CREATE INDEX "Payment_tenantId_referenceNumber_idx" ON "Payment"("tenantId", "referenceNumber");

-- CreateIndex
CREATE INDEX "Payment_tenantId_status_idx" ON "Payment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Payment_tenantId_updatedAt_idx" ON "Payment"("tenantId", "updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "Payment_tenantId_id_key" ON "Payment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PaymentApplication_createdAt_idx" ON "PaymentApplication" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PaymentApplication_invoiceId_idx" ON "PaymentApplication"("invoiceId");

-- CreateIndex
CREATE INDEX "PaymentApplication_tenantId_auditCorrelationId_idx" ON "PaymentApplication"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PaymentApplication_tenantId_dataClassification_idx" ON "PaymentApplication"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PaymentApplication_tenantId_deletedAt_idx" ON "PaymentApplication"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PaymentApplication_tenantId_paymentId_idx" ON "PaymentApplication"("tenantId", "paymentId");

-- CreateIndex
CREATE INDEX "PaymentApplication_tenantId_status_idx" ON "PaymentApplication"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentApplication_tenantId_id_key" ON "PaymentApplication"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentMethod_name_key" ON "PaymentMethod"("name");

-- CreateIndex
CREATE INDEX "PaymentMethod_dataClassification_idx" ON "PaymentMethod"("dataClassification");

-- CreateIndex
CREATE INDEX "PaymentMethod_isActive_idx" ON "PaymentMethod"("isActive");

-- CreateIndex
CREATE INDEX "PaymentMethod_status_idx" ON "PaymentMethod"("status");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_createdAt_idx" ON "PaymentMethodToken" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_paymentMethodId_idx" ON "PaymentMethodToken"("paymentMethodId");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_tenantId_auditCorrelationId_idx" ON "PaymentMethodToken"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_tenantId_dataClassification_idx" ON "PaymentMethodToken"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_tenantId_deletedAt_idx" ON "PaymentMethodToken"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_tenantId_isDefault_idx" ON "PaymentMethodToken"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "PaymentMethodToken_tenantId_status_idx" ON "PaymentMethodToken"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentMethodToken_tenantId_id_key" ON "PaymentMethodToken"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PaymentSchedule_createdAt_idx" ON "PaymentSchedule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_auditCorrelationId_idx" ON "PaymentSchedule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_dataClassification_idx" ON "PaymentSchedule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_deletedAt_idx" ON "PaymentSchedule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_dueDate_idx" ON "PaymentSchedule"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_dunningLevel_idx" ON "PaymentSchedule"("tenantId", "dunningLevel");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_invoiceId_idx" ON "PaymentSchedule"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_overdueDate_idx" ON "PaymentSchedule"("tenantId", "overdueDate");

-- CreateIndex
CREATE INDEX "PaymentSchedule_tenantId_status_idx" ON "PaymentSchedule"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentSchedule_tenantId_id_key" ON "PaymentSchedule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentSchedule_tenantId_invoiceId_installmentNumber_key" ON "PaymentSchedule"("tenantId", "invoiceId", "installmentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "PaymentTerm_name_key" ON "PaymentTerm"("name");

-- CreateIndex
CREATE INDEX "PaymentTerm_auditCorrelationId_idx" ON "PaymentTerm"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "PaymentTerm_dataClassification_idx" ON "PaymentTerm"("dataClassification");

-- CreateIndex
CREATE INDEX "PaymentTerm_isActive_idx" ON "PaymentTerm"("isActive");

-- CreateIndex
CREATE INDEX "PaymentTerm_isDefault_idx" ON "PaymentTerm"("isDefault");

-- CreateIndex
CREATE INDEX "PaymentTerm_netDays_idx" ON "PaymentTerm"("netDays");

-- CreateIndex
CREATE INDEX "PaymentTerm_status_idx" ON "PaymentTerm"("status");

-- CreateIndex
CREATE UNIQUE INDEX "Payout_payoutNumber_key" ON "Payout"("payoutNumber");

-- CreateIndex
CREATE INDEX "Payout_payoutDate_idx" ON "Payout" USING BRIN ("payoutDate");

-- CreateIndex
CREATE INDEX "Payout_tenantId_amount_idx" ON "Payout"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "Payout_tenantId_auditCorrelationId_idx" ON "Payout"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Payout_tenantId_bankAccountId_idx" ON "Payout"("tenantId", "bankAccountId");

-- CreateIndex
CREATE INDEX "Payout_tenantId_createdByActorId_idx" ON "Payout"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "Payout_tenantId_dataClassification_idx" ON "Payout"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Payout_tenantId_paymentId_idx" ON "Payout"("tenantId", "paymentId");

-- CreateIndex
CREATE INDEX "Payout_tenantId_payoutDate_idx" ON "Payout"("tenantId", "payoutDate");

-- CreateIndex
CREATE INDEX "Payout_tenantId_payoutNumber_idx" ON "Payout"("tenantId", "payoutNumber");

-- CreateIndex
CREATE INDEX "Payout_tenantId_processedById_idx" ON "Payout"("tenantId", "processedById");

-- CreateIndex
CREATE INDEX "Payout_tenantId_referenceNumber_idx" ON "Payout"("tenantId", "referenceNumber");

-- CreateIndex
CREATE INDEX "Payout_tenantId_status_idx" ON "Payout"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Payout_tenantId_status_payoutDate_idx" ON "Payout"("tenantId", "status", "payoutDate");

-- CreateIndex
CREATE UNIQUE INDEX "Payout_tenantId_id_key" ON "Payout"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_createdAt_idx" ON "PayrollAdjustment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_adjustmentDate_idx" ON "PayrollAdjustment"("tenantId", "adjustmentDate");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_adjustmentType_idx" ON "PayrollAdjustment"("tenantId", "adjustmentType");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_approvedBy_idx" ON "PayrollAdjustment"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_auditCorrelationId_idx" ON "PayrollAdjustment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_dataClassification_idx" ON "PayrollAdjustment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_deletedAt_idx" ON "PayrollAdjustment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_employeeId_idx" ON "PayrollAdjustment"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_isProcessed_idx" ON "PayrollAdjustment"("tenantId", "isProcessed");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_payrollRunId_idx" ON "PayrollAdjustment"("tenantId", "payrollRunId");

-- CreateIndex
CREATE INDEX "PayrollAdjustment_tenantId_status_idx" ON "PayrollAdjustment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollAdjustment_tenantId_adjustmentNumber_key" ON "PayrollAdjustment"("tenantId", "adjustmentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollAdjustment_tenantId_id_key" ON "PayrollAdjustment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PayrollItem_createdAt_idx" ON "PayrollItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_approvedBy_idx" ON "PayrollItem"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_auditCorrelationId_idx" ON "PayrollItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_calculatedAt_idx" ON "PayrollItem"("tenantId", "calculatedAt");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_dataClassification_idx" ON "PayrollItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_deletedAt_idx" ON "PayrollItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_employeeId_idx" ON "PayrollItem"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_itemCode_idx" ON "PayrollItem"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_itemType_idx" ON "PayrollItem"("tenantId", "itemType");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_payrollRunId_idx" ON "PayrollItem"("tenantId", "payrollRunId");

-- CreateIndex
CREATE INDEX "PayrollItem_tenantId_status_idx" ON "PayrollItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollItem_tenantId_id_key" ON "PayrollItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollItem_tenantId_itemNumber_key" ON "PayrollItem"("tenantId", "itemNumber");

-- CreateIndex
CREATE INDEX "PayrollPayment_createdAt_idx" ON "PayrollPayment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_auditCorrelationId_idx" ON "PayrollPayment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_dataClassification_idx" ON "PayrollPayment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_deletedAt_idx" ON "PayrollPayment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_employeeId_idx" ON "PayrollPayment"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_isProcessed_idx" ON "PayrollPayment"("tenantId", "isProcessed");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_paymentDate_idx" ON "PayrollPayment"("tenantId", "paymentDate");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_paymentType_idx" ON "PayrollPayment"("tenantId", "paymentType");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_payrollRunId_idx" ON "PayrollPayment"("tenantId", "payrollRunId");

-- CreateIndex
CREATE INDEX "PayrollPayment_tenantId_status_idx" ON "PayrollPayment"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollPayment_tenantId_id_key" ON "PayrollPayment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollPayment_tenantId_paymentNumber_key" ON "PayrollPayment"("tenantId", "paymentNumber");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollRun_runNumber_key" ON "PayrollRun"("runNumber");

-- CreateIndex
CREATE INDEX "PayrollRun_createdAt_idx" ON "PayrollRun" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_approvedById_idx" ON "PayrollRun"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_auditCorrelationId_idx" ON "PayrollRun"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_dataClassification_idx" ON "PayrollRun"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_deletedAt_idx" ON "PayrollRun"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_payDate_idx" ON "PayrollRun"("tenantId", "payDate");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_payPeriodStart_payPeriodEnd_idx" ON "PayrollRun"("tenantId", "payPeriodStart", "payPeriodEnd");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_processedAt_idx" ON "PayrollRun"("tenantId", "processedAt");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_processedById_idx" ON "PayrollRun"("tenantId", "processedById");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_runType_idx" ON "PayrollRun"("tenantId", "runType");

-- CreateIndex
CREATE INDEX "PayrollRun_tenantId_status_idx" ON "PayrollRun"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollRun_tenantId_id_key" ON "PayrollRun"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollRun_tenantId_runNumber_key" ON "PayrollRun"("tenantId", "runNumber");

-- CreateIndex
CREATE INDEX "PayrollTax_createdAt_idx" ON "PayrollTax" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_approvedBy_idx" ON "PayrollTax"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_auditCorrelationId_idx" ON "PayrollTax"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_calculatedAt_idx" ON "PayrollTax"("tenantId", "calculatedAt");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_dataClassification_idx" ON "PayrollTax"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_deletedAt_idx" ON "PayrollTax"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_employeeId_idx" ON "PayrollTax"("tenantId", "employeeId");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_payrollRunId_idx" ON "PayrollTax"("tenantId", "payrollRunId");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_status_idx" ON "PayrollTax"("tenantId", "status");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_taxCode_idx" ON "PayrollTax"("tenantId", "taxCode");

-- CreateIndex
CREATE INDEX "PayrollTax_tenantId_taxType_idx" ON "PayrollTax"("tenantId", "taxType");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollTax_tenantId_id_key" ON "PayrollTax"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PayrollTax_tenantId_taxNumber_key" ON "PayrollTax"("tenantId", "taxNumber");

-- CreateIndex
CREATE INDEX "PerformanceGoal_createdAt_idx" ON "PerformanceGoal" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_auditCorrelationId_idx" ON "PerformanceGoal"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_category_idx" ON "PerformanceGoal"("tenantId", "category");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_dataClassification_idx" ON "PerformanceGoal"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_finalRating_idx" ON "PerformanceGoal"("tenantId", "finalRating");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_goalType_idx" ON "PerformanceGoal"("tenantId", "goalType");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_performanceReviewId_idx" ON "PerformanceGoal"("tenantId", "performanceReviewId");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_priority_idx" ON "PerformanceGoal"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_startDate_idx" ON "PerformanceGoal"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_status_idx" ON "PerformanceGoal"("tenantId", "status");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_targetDate_idx" ON "PerformanceGoal"("tenantId", "targetDate");

-- CreateIndex
CREATE INDEX "PerformanceGoal_tenantId_workerId_idx" ON "PerformanceGoal"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "PerformanceGoal_tenantId_id_key" ON "PerformanceGoal"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PerformanceReview_createdAt_idx" ON "PerformanceReview" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_auditCorrelationId_idx" ON "PerformanceReview"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_dataClassification_idx" ON "PerformanceReview"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_dueDate_idx" ON "PerformanceReview"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_overallRating_idx" ON "PerformanceReview"("tenantId", "overallRating");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_reviewCycle_idx" ON "PerformanceReview"("tenantId", "reviewCycle");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_reviewType_idx" ON "PerformanceReview"("tenantId", "reviewType");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_reviewerId_idx" ON "PerformanceReview"("tenantId", "reviewerId");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_status_idx" ON "PerformanceReview"("tenantId", "status");

-- CreateIndex
CREATE INDEX "PerformanceReview_tenantId_workerId_idx" ON "PerformanceReview"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "PerformanceReview_tenantId_id_key" ON "PerformanceReview"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PerformanceReview_tenantId_workerId_reviewCycle_reviewType_key" ON "PerformanceReview"("tenantId", "workerId", "reviewCycle", "reviewType");

-- CreateIndex
CREATE UNIQUE INDEX "Permission_code_unique" ON "Permission"("code");

-- CreateIndex
CREATE INDEX "Permission_auditCorrelationId_idx" ON "Permission"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "Permission_category_idx" ON "Permission"("category");

-- CreateIndex
CREATE INDEX "Permission_createdAt_idx" ON "Permission" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Permission_dataClassification_idx" ON "Permission"("dataClassification");

-- CreateIndex
CREATE INDEX "Permission_isActive_idx" ON "Permission"("isActive");

-- CreateIndex
CREATE INDEX "Permission_isSystemPermission_idx" ON "Permission"("isSystemPermission");

-- CreateIndex
CREATE INDEX "Permission_parentPermissionId_idx" ON "Permission"("parentPermissionId");

-- CreateIndex
CREATE INDEX "Permission_riskLevel_idx" ON "Permission"("riskLevel");

-- CreateIndex
CREATE INDEX "Permission_scope_idx" ON "Permission"("scope");

-- CreateIndex
CREATE INDEX "Permission_status_idx" ON "Permission"("status");

-- CreateIndex
CREATE UNIQUE INDEX "Person_globalId_key" ON "Person"("globalId");

-- CreateIndex
CREATE UNIQUE INDEX "Person_personNumber_key" ON "Person"("personNumber");

-- CreateIndex
CREATE INDEX "Person_auditCorrelationId_idx" ON "Person"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "Person_dataClassification_idx" ON "Person"("dataClassification");

-- CreateIndex
CREATE INDEX "Person_dateOfBirth_idx" ON "Person"("dateOfBirth");

-- CreateIndex
CREATE INDEX "Person_firstName_lastName_idx" ON "Person"("firstName", "lastName");

-- CreateIndex
CREATE INDEX "Person_gender_idx" ON "Person"("gender");

-- CreateIndex
CREATE INDEX "Person_isDeceased_idx" ON "Person"("isDeceased");

-- CreateIndex
CREATE INDEX "Person_maritalStatus_idx" ON "Person"("maritalStatus");

-- CreateIndex
CREATE INDEX "Person_nationality_idx" ON "Person"("nationality");

-- CreateIndex
CREATE INDEX "Person_personNumber_idx" ON "Person"("personNumber");

-- CreateIndex
CREATE INDEX "Person_socialSecurityNumber_idx" ON "Person"("socialSecurityNumber");

-- CreateIndex
CREATE INDEX "PersonAddress_addressType_idx" ON "PersonAddress"("addressType");

-- CreateIndex
CREATE INDEX "PersonAddress_city_state_idx" ON "PersonAddress"("city", "state");

-- CreateIndex
CREATE INDEX "PersonAddress_dataClassification_idx" ON "PersonAddress"("dataClassification");

-- CreateIndex
CREATE INDEX "PersonAddress_personId_isPrimary_idx" ON "PersonAddress"("personId", "isPrimary");

-- CreateIndex
CREATE INDEX "PersonAddress_postalCode_idx" ON "PersonAddress"("postalCode");

-- CreateIndex
CREATE UNIQUE INDEX "PersonAddress_personId_addressType_effectiveDate_key" ON "PersonAddress"("personId", "addressType", "effectiveDate");

-- CreateIndex
CREATE INDEX "PersonContactMethod_contactType_idx" ON "PersonContactMethod"("contactType");

-- CreateIndex
CREATE INDEX "PersonContactMethod_dataClassification_idx" ON "PersonContactMethod"("dataClassification");

-- CreateIndex
CREATE INDEX "PersonContactMethod_isVerified_idx" ON "PersonContactMethod"("isVerified");

-- CreateIndex
CREATE INDEX "PersonContactMethod_personId_isPrimary_idx" ON "PersonContactMethod"("personId", "isPrimary");

-- CreateIndex
CREATE UNIQUE INDEX "PersonContactMethod_personId_contactType_contactValue_key" ON "PersonContactMethod"("personId", "contactType", "contactValue");

-- CreateIndex
CREATE INDEX "PersonDocument_dataClassification_idx" ON "PersonDocument"("dataClassification");

-- CreateIndex
CREATE INDEX "PersonDocument_documentType_idx" ON "PersonDocument"("documentType");

-- CreateIndex
CREATE INDEX "PersonDocument_expirationDate_idx" ON "PersonDocument"("expirationDate");

-- CreateIndex
CREATE INDEX "PersonDocument_isVerified_idx" ON "PersonDocument"("isVerified");

-- CreateIndex
CREATE INDEX "PersonDocument_personId_idx" ON "PersonDocument"("personId");

-- CreateIndex
CREATE UNIQUE INDEX "PersonDocument_personId_documentType_documentNumber_key" ON "PersonDocument"("personId", "documentType", "documentNumber");

-- CreateIndex
CREATE INDEX "PersonName_dataClassification_idx" ON "PersonName"("dataClassification");

-- CreateIndex
CREATE INDEX "PersonName_firstName_lastName_idx" ON "PersonName"("firstName", "lastName");

-- CreateIndex
CREATE INDEX "PersonName_nameType_idx" ON "PersonName"("nameType");

-- CreateIndex
CREATE INDEX "PersonName_personId_isPrimary_idx" ON "PersonName"("personId", "isPrimary");

-- CreateIndex
CREATE INDEX "PersonName_verificationStatus_idx" ON "PersonName"("verificationStatus");

-- CreateIndex
CREATE UNIQUE INDEX "PersonName_personId_nameType_effectiveDate_key" ON "PersonName"("personId", "nameType", "effectiveDate");

-- CreateIndex
CREATE UNIQUE INDEX "Position_positionNumber_key" ON "Position"("positionNumber");

-- CreateIndex
CREATE INDEX "Position_createdAt_idx" ON "Position" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Position_tenantId_approvedByActorId_idx" ON "Position"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "Position_tenantId_auditCorrelationId_idx" ON "Position"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Position_tenantId_dataClassification_idx" ON "Position"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Position_tenantId_department_idx" ON "Position"("tenantId", "department");

-- CreateIndex
CREATE INDEX "Position_tenantId_effectiveDate_idx" ON "Position"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Position_tenantId_fte_idx" ON "Position"("tenantId", "fte");

-- CreateIndex
CREATE INDEX "Position_tenantId_gradeId_idx" ON "Position"("tenantId", "gradeId");

-- CreateIndex
CREATE INDEX "Position_tenantId_isSupervisor_idx" ON "Position"("tenantId", "isSupervisor");

-- CreateIndex
CREATE INDEX "Position_tenantId_jobProfileId_idx" ON "Position"("tenantId", "jobProfileId");

-- CreateIndex
CREATE INDEX "Position_tenantId_locationId_idx" ON "Position"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "Position_tenantId_positionTitle_idx" ON "Position"("tenantId", "positionTitle");

-- CreateIndex
CREATE INDEX "Position_tenantId_reportsToId_idx" ON "Position"("tenantId", "reportsToId");

-- CreateIndex
CREATE UNIQUE INDEX "Position_tenantId_id_key" ON "Position"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Position_tenantId_positionNumber_key" ON "Position"("tenantId", "positionNumber");

-- CreateIndex
CREATE INDEX "PositionAssignment_createdAt_idx" ON "PositionAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_assignmentStatus_idx" ON "PositionAssignment"("tenantId", "assignmentStatus");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_assignmentType_idx" ON "PositionAssignment"("tenantId", "assignmentType");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_auditCorrelationId_idx" ON "PositionAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_dataClassification_idx" ON "PositionAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_endDate_idx" ON "PositionAssignment"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_isPrimary_idx" ON "PositionAssignment"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_positionId_idx" ON "PositionAssignment"("tenantId", "positionId");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_reportsToPositionId_idx" ON "PositionAssignment"("tenantId", "reportsToPositionId");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_startDate_idx" ON "PositionAssignment"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "PositionAssignment_tenantId_workerId_idx" ON "PositionAssignment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "PositionAssignment_tenantId_id_key" ON "PositionAssignment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PositionAssignment_tenantId_workerId_positionId_startDate_key" ON "PositionAssignment"("tenantId", "workerId", "positionId", "startDate");

-- CreateIndex
CREATE INDEX "PositionBudget_createdAt_idx" ON "PositionBudget" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_approvedByActorId_idx" ON "PositionBudget"("tenantId", "approvedByActorId");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_auditCorrelationId_idx" ON "PositionBudget"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_budgetPeriod_idx" ON "PositionBudget"("tenantId", "budgetPeriod");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_budgetStatus_idx" ON "PositionBudget"("tenantId", "budgetStatus");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_budgetYear_idx" ON "PositionBudget"("tenantId", "budgetYear");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_dataClassification_idx" ON "PositionBudget"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_effectiveDate_idx" ON "PositionBudget"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_positionId_idx" ON "PositionBudget"("tenantId", "positionId");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_totalBudget_idx" ON "PositionBudget"("tenantId", "totalBudget");

-- CreateIndex
CREATE INDEX "PositionBudget_tenantId_variance_idx" ON "PositionBudget"("tenantId", "variance");

-- CreateIndex
CREATE UNIQUE INDEX "PositionBudget_tenantId_id_key" ON "PositionBudget"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PositionBudget_tenantId_positionId_budgetYear_budgetPeriod_key" ON "PositionBudget"("tenantId", "positionId", "budgetYear", "budgetPeriod");

-- CreateIndex
CREATE INDEX "PriceList_auditCorrelationId_idx" ON "PriceList"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "PriceList_createdAt_idx" ON "PriceList" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PriceList_currency_idx" ON "PriceList"("currency");

-- CreateIndex
CREATE INDEX "PriceList_dataClassification_idx" ON "PriceList"("dataClassification");

-- CreateIndex
CREATE INDEX "PriceList_deletedAt_idx" ON "PriceList"("deletedAt");

-- CreateIndex
CREATE INDEX "PriceList_isActive_effectiveDate_idx" ON "PriceList"("isActive", "effectiveDate");

-- CreateIndex
CREATE INDEX "PriceList_priceListType_idx" ON "PriceList"("priceListType");

-- CreateIndex
CREATE INDEX "PriceList_status_idx" ON "PriceList"("status");

-- CreateIndex
CREATE UNIQUE INDEX "PriceList_name_currency_key" ON "PriceList"("name", "currency");

-- CreateIndex
CREATE INDEX "PriceListItem_auditCorrelationId_idx" ON "PriceListItem"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "PriceListItem_createdAt_idx" ON "PriceListItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PriceListItem_currency_idx" ON "PriceListItem"("currency");

-- CreateIndex
CREATE INDEX "PriceListItem_dataClassification_idx" ON "PriceListItem"("dataClassification");

-- CreateIndex
CREATE INDEX "PriceListItem_deletedAt_idx" ON "PriceListItem"("deletedAt");

-- CreateIndex
CREATE INDEX "PriceListItem_isActive_idx" ON "PriceListItem"("isActive");

-- CreateIndex
CREATE INDEX "PriceListItem_priceListId_currency_idx" ON "PriceListItem"("priceListId", "currency");

-- CreateIndex
CREATE INDEX "PriceListItem_priceListId_idx" ON "PriceListItem"("priceListId");

-- CreateIndex
CREATE INDEX "PriceListItem_priceListId_isActive_idx" ON "PriceListItem"("priceListId", "isActive");

-- CreateIndex
CREATE INDEX "PriceListItem_sku_idx" ON "PriceListItem"("sku");

-- CreateIndex
CREATE INDEX "PriceListItem_status_idx" ON "PriceListItem"("status");

-- CreateIndex
CREATE UNIQUE INDEX "PriceListItem_priceListId_sku_key" ON "PriceListItem"("priceListId", "sku");

-- CreateIndex
CREATE UNIQUE INDEX "Project_globalId_key" ON "Project"("globalId");

-- CreateIndex
CREATE INDEX "Project_createdAt_idx" ON "Project" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Project_tenantId_approvalCorrelationId_idx" ON "Project"("tenantId", "approvalCorrelationId");

-- CreateIndex
CREATE INDEX "Project_tenantId_auditCorrelationId_idx" ON "Project"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Project_tenantId_clientAccountId_idx" ON "Project"("tenantId", "clientAccountId");

-- CreateIndex
CREATE INDEX "Project_tenantId_clientContactId_idx" ON "Project"("tenantId", "clientContactId");

-- CreateIndex
CREATE INDEX "Project_tenantId_contractTemplateId_idx" ON "Project"("tenantId", "contractTemplateId");

-- CreateIndex
CREATE INDEX "Project_tenantId_costCenterId_idx" ON "Project"("tenantId", "costCenterId");

-- CreateIndex
CREATE INDEX "Project_tenantId_dataClassification_idx" ON "Project"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Project_tenantId_deletedAt_idx" ON "Project"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Project_tenantId_departmentId_idx" ON "Project"("tenantId", "departmentId");

-- CreateIndex
CREATE INDEX "Project_tenantId_documentGroupId_idx" ON "Project"("tenantId", "documentGroupId");

-- CreateIndex
CREATE INDEX "Project_tenantId_estimateId_idx" ON "Project"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "Project_tenantId_invoiceId_idx" ON "Project"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "Project_tenantId_locationId_idx" ON "Project"("tenantId", "locationId");

-- CreateIndex
CREATE INDEX "Project_tenantId_orgUnitId_idx" ON "Project"("tenantId", "orgUnitId");

-- CreateIndex
CREATE INDEX "Project_tenantId_priority_idx" ON "Project"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Project_tenantId_riskClassification_idx" ON "Project"("tenantId", "riskClassification");

-- CreateIndex
CREATE INDEX "Project_tenantId_status_idx" ON "Project"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Project_tenantId_status_updatedAt_idx" ON "Project"("tenantId", "status", "updatedAt");

-- CreateIndex
CREATE INDEX "Project_tenantId_strategicImportance_idx" ON "Project"("tenantId", "strategicImportance");

-- CreateIndex
CREATE INDEX "Project_tenantId_termsTemplateId_idx" ON "Project"("tenantId", "termsTemplateId");

-- CreateIndex
CREATE INDEX "idx_project_tenant_deleted" ON "Project"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "Project_tenantId_estimateId_key" ON "Project"("tenantId", "estimateId");

-- CreateIndex
CREATE UNIQUE INDEX "Project_tenantId_id_key" ON "Project"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Project_tenantId_invoiceId_key" ON "Project"("tenantId", "invoiceId");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_createdAt_idx" ON "ProjectBudgetLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_auditCorrelationId_idx" ON "ProjectBudgetLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_budgetCategory_idx" ON "ProjectBudgetLine"("tenantId", "budgetCategory");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_costCode_idx" ON "ProjectBudgetLine"("tenantId", "costCode");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_dataClassification_idx" ON "ProjectBudgetLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_deletedAt_idx" ON "ProjectBudgetLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_projectId_costCode_idx" ON "ProjectBudgetLine"("tenantId", "projectId", "costCode");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_projectId_idx" ON "ProjectBudgetLine"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectBudgetLine_tenantId_status_idx" ON "ProjectBudgetLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectBudgetLine_tenantId_id_key" ON "ProjectBudgetLine"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectDocument_createdAt_idx" ON "ProjectDocument" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_attachmentId_idx" ON "ProjectDocument"("tenantId", "attachmentId");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_auditCorrelationId_idx" ON "ProjectDocument"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_dataClassification_idx" ON "ProjectDocument"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_deletedAt_idx" ON "ProjectDocument"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_fileType_idx" ON "ProjectDocument"("tenantId", "fileType");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_projectId_idx" ON "ProjectDocument"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_status_idx" ON "ProjectDocument"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_status_updatedAt_idx" ON "ProjectDocument"("tenantId", "status", "updatedAt");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_uploadedAt_idx" ON "ProjectDocument"("tenantId", "uploadedAt");

-- CreateIndex
CREATE INDEX "ProjectDocument_tenantId_uploaderId_idx" ON "ProjectDocument"("tenantId", "uploaderId");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectDocument_tenantId_id_key" ON "ProjectDocument"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_createdAt_idx" ON "ProjectExternalAccess" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_auditCorrelationId_idx" ON "ProjectExternalAccess"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_dataClassification_idx" ON "ProjectExternalAccess"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_deletedAt_idx" ON "ProjectExternalAccess"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_email_idx" ON "ProjectExternalAccess"("tenantId", "email");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_expiresAt_idx" ON "ProjectExternalAccess"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_invitedAt_idx" ON "ProjectExternalAccess"("tenantId", "invitedAt");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_projectId_idx" ON "ProjectExternalAccess"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_role_idx" ON "ProjectExternalAccess"("tenantId", "role");

-- CreateIndex
CREATE INDEX "ProjectExternalAccess_tenantId_status_idx" ON "ProjectExternalAccess"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectExternalAccess_tenantId_id_key" ON "ProjectExternalAccess"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectExternalAccess_tenantId_projectId_email_key" ON "ProjectExternalAccess"("tenantId", "projectId", "email");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_createdAt_idx" ON "ProjectFinancialSnapshot" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_auditCorrelationId_idx" ON "ProjectFinancialSnapshot"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_deletedAt_idx" ON "ProjectFinancialSnapshot"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_projectId_idx" ON "ProjectFinancialSnapshot"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_projectId_snapshotDate_idx" ON "ProjectFinancialSnapshot"("tenantId", "projectId", "snapshotDate");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_snapshotDate_idx" ON "ProjectFinancialSnapshot"("tenantId", "snapshotDate");

-- CreateIndex
CREATE INDEX "ProjectFinancialSnapshot_tenantId_status_idx" ON "ProjectFinancialSnapshot"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectFinancialSnapshot_tenantId_id_key" ON "ProjectFinancialSnapshot"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_createdAt_idx" ON "ProjectInventoryTransaction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_tenantId_auditCorrelationId_idx" ON "ProjectInventoryTransaction"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_tenantId_dataClassification_idx" ON "ProjectInventoryTransaction"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_tenantId_deletedAt_idx" ON "ProjectInventoryTransaction"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_tenantId_projectId_idx" ON "ProjectInventoryTransaction"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectInventoryTransaction_tenantId_status_idx" ON "ProjectInventoryTransaction"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectInventoryTransaction_tenantId_id_key" ON "ProjectInventoryTransaction"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectIssue_createdAt_idx" ON "ProjectIssue" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_assigneeId_idx" ON "ProjectIssue"("tenantId", "assigneeId");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_auditCorrelationId_idx" ON "ProjectIssue"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_dataClassification_idx" ON "ProjectIssue"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_deletedAt_idx" ON "ProjectIssue"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_issueStatus_idx" ON "ProjectIssue"("tenantId", "issueStatus");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_projectId_idx" ON "ProjectIssue"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_reportedAt_idx" ON "ProjectIssue"("tenantId", "reportedAt");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_resolvedAt_idx" ON "ProjectIssue"("tenantId", "resolvedAt");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_severity_idx" ON "ProjectIssue"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_status_idx" ON "ProjectIssue"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectIssue_tenantId_status_updatedAt_idx" ON "ProjectIssue"("tenantId", "status", "updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectIssue_tenantId_id_key" ON "ProjectIssue"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectLocation_createdAt_idx" ON "ProjectLocation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_auditCorrelationId_idx" ON "ProjectLocation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_dataClassification_idx" ON "ProjectLocation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_deletedAt_idx" ON "ProjectLocation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_isPrimary_idx" ON "ProjectLocation"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_locationType_idx" ON "ProjectLocation"("tenantId", "locationType");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_projectId_idx" ON "ProjectLocation"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectLocation_tenantId_status_idx" ON "ProjectLocation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectLocation_tenantId_id_key" ON "ProjectLocation"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectLocation_tenantId_projectId_name_key" ON "ProjectLocation"("tenantId", "projectId", "name");

-- CreateIndex
CREATE INDEX "ProjectMember_createdAt_idx" ON "ProjectMember" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_auditCorrelationId_idx" ON "ProjectMember"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_deletedAt_idx" ON "ProjectMember"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_joinedAt_idx" ON "ProjectMember"("tenantId", "joinedAt");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_leftAt_idx" ON "ProjectMember"("tenantId", "leftAt");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_memberId_idx" ON "ProjectMember"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_projectId_idx" ON "ProjectMember"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_role_idx" ON "ProjectMember"("tenantId", "role");

-- CreateIndex
CREATE INDEX "ProjectMember_tenantId_status_idx" ON "ProjectMember"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectMember_tenantId_id_key" ON "ProjectMember"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectMember_tenantId_projectId_memberId_key" ON "ProjectMember"("tenantId", "projectId", "memberId");

-- CreateIndex
CREATE INDEX "ProjectNote_createdAt_idx" ON "ProjectNote" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectNote_tenantId_auditCorrelationId_idx" ON "ProjectNote"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectNote_tenantId_dataClassification_idx" ON "ProjectNote"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectNote_tenantId_deletedAt_idx" ON "ProjectNote"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectNote_tenantId_projectId_idx" ON "ProjectNote"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectNote_tenantId_status_idx" ON "ProjectNote"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectNote_tenantId_id_key" ON "ProjectNote"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectPhase_createdAt_idx" ON "ProjectPhase" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_auditCorrelationId_idx" ON "ProjectPhase"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_dataClassification_idx" ON "ProjectPhase"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_deletedAt_idx" ON "ProjectPhase"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_projectId_idx" ON "ProjectPhase"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_sortOrder_idx" ON "ProjectPhase"("tenantId", "sortOrder");

-- CreateIndex
CREATE INDEX "ProjectPhase_tenantId_status_idx" ON "ProjectPhase"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectPhase_tenantId_id_key" ON "ProjectPhase"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectPhase_tenantId_projectId_name_key" ON "ProjectPhase"("tenantId", "projectId", "name");

-- CreateIndex
CREATE INDEX "ProjectReport_createdAt_idx" ON "ProjectReport" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectReport_tenantId_auditCorrelationId_idx" ON "ProjectReport"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectReport_tenantId_dataClassification_idx" ON "ProjectReport"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectReport_tenantId_deletedAt_idx" ON "ProjectReport"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectReport_tenantId_projectId_idx" ON "ProjectReport"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectReport_tenantId_status_idx" ON "ProjectReport"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectReport_tenantId_id_key" ON "ProjectReport"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectRisk_createdAt_idx" ON "ProjectRisk" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_auditCorrelationId_idx" ON "ProjectRisk"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_dataClassification_idx" ON "ProjectRisk"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_deletedAt_idx" ON "ProjectRisk"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_identifiedAt_idx" ON "ProjectRisk"("tenantId", "identifiedAt");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_impact_idx" ON "ProjectRisk"("tenantId", "impact");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_ownerId_idx" ON "ProjectRisk"("tenantId", "ownerId");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_probability_idx" ON "ProjectRisk"("tenantId", "probability");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_projectId_idx" ON "ProjectRisk"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_status_idx" ON "ProjectRisk"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectRisk_tenantId_status_updatedAt_idx" ON "ProjectRisk"("tenantId", "status", "updatedAt");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectRisk_tenantId_id_key" ON "ProjectRisk"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectTask_createdAt_idx" ON "ProjectTask" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_auditCorrelationId_idx" ON "ProjectTask"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_dataClassification_idx" ON "ProjectTask"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_deletedAt_idx" ON "ProjectTask"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_phaseId_idx" ON "ProjectTask"("tenantId", "phaseId");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_plannedStartDate_idx" ON "ProjectTask"("tenantId", "plannedStartDate");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_projectId_idx" ON "ProjectTask"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_projectId_status_idx" ON "ProjectTask"("tenantId", "projectId", "status");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_sourceChangeOrderLineId_idx" ON "ProjectTask"("tenantId", "sourceChangeOrderLineId");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_sourceEstimateLineItemId_idx" ON "ProjectTask"("tenantId", "sourceEstimateLineItemId");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_status_idx" ON "ProjectTask"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTask_tenantId_wbsItemId_idx" ON "ProjectTask"("tenantId", "wbsItemId");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTask_tenantId_id_key" ON "ProjectTask"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_createdAt_idx" ON "ProjectTaskAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_assignedDate_idx" ON "ProjectTaskAssignment"("tenantId", "assignedDate");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_assigneeId_idx" ON "ProjectTaskAssignment"("tenantId", "assigneeId");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_auditCorrelationId_idx" ON "ProjectTaskAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_dataClassification_idx" ON "ProjectTaskAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_deletedAt_idx" ON "ProjectTaskAssignment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_endDate_idx" ON "ProjectTaskAssignment"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_projectId_idx" ON "ProjectTaskAssignment"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_startDate_idx" ON "ProjectTaskAssignment"("tenantId", "startDate");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_status_idx" ON "ProjectTaskAssignment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTaskAssignment_tenantId_taskId_idx" ON "ProjectTaskAssignment"("tenantId", "taskId");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskAssignment_tenantId_id_key" ON "ProjectTaskAssignment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskAssignment_tenantId_taskId_assigneeId_key" ON "ProjectTaskAssignment"("tenantId", "taskId", "assigneeId");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_createdAt_idx" ON "ProjectTaskAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_auditCorrelationId_idx" ON "ProjectTaskAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_dataClassification_idx" ON "ProjectTaskAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_deletedAt_idx" ON "ProjectTaskAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_fileType_idx" ON "ProjectTaskAttachment"("tenantId", "fileType");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_status_idx" ON "ProjectTaskAttachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_taskId_idx" ON "ProjectTaskAttachment"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_uploadedAt_idx" ON "ProjectTaskAttachment"("tenantId", "uploadedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskAttachment_tenantId_uploadedById_idx" ON "ProjectTaskAttachment"("tenantId", "uploadedById");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskAttachment_tenantId_id_key" ON "ProjectTaskAttachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_createdAt_idx" ON "ProjectTaskChecklistItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_auditCorrelationId_idx" ON "ProjectTaskChecklistItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_dataClassification_idx" ON "ProjectTaskChecklistItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_deletedAt_idx" ON "ProjectTaskChecklistItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_isCompleted_idx" ON "ProjectTaskChecklistItem"("tenantId", "isCompleted");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_status_idx" ON "ProjectTaskChecklistItem"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_taskId_idx" ON "ProjectTaskChecklistItem"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "ProjectTaskChecklistItem_tenantId_taskId_sortOrder_idx" ON "ProjectTaskChecklistItem"("tenantId", "taskId", "sortOrder");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskChecklistItem_tenantId_id_key" ON "ProjectTaskChecklistItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_createdAt_idx" ON "ProjectTaskComment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_auditCorrelationId_idx" ON "ProjectTaskComment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_authoredById_idx" ON "ProjectTaskComment"("tenantId", "authoredById");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_dataClassification_idx" ON "ProjectTaskComment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_deletedAt_idx" ON "ProjectTaskComment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_isInternal_idx" ON "ProjectTaskComment"("tenantId", "isInternal");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_status_idx" ON "ProjectTaskComment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_taskId_createdAt_idx" ON "ProjectTaskComment"("tenantId", "taskId", "createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskComment_tenantId_taskId_idx" ON "ProjectTaskComment"("tenantId", "taskId");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskComment_tenantId_id_key" ON "ProjectTaskComment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_createdAt_idx" ON "ProjectTaskDependency" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_auditCorrelationId_idx" ON "ProjectTaskDependency"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_dataClassification_idx" ON "ProjectTaskDependency"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_deletedAt_idx" ON "ProjectTaskDependency"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_dependencyType_idx" ON "ProjectTaskDependency"("tenantId", "dependencyType");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_predecessorTaskId_idx" ON "ProjectTaskDependency"("tenantId", "predecessorTaskId");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_status_idx" ON "ProjectTaskDependency"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ProjectTaskDependency_tenantId_successorTaskId_idx" ON "ProjectTaskDependency"("tenantId", "successorTaskId");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskDependency_tenantId_id_key" ON "ProjectTaskDependency"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ProjectTaskDependency_tenantId_predecessorTaskId_successorT_key" ON "ProjectTaskDependency"("tenantId", "predecessorTaskId", "successorTaskId");

-- CreateIndex
CREATE INDEX "RoomScanSession_tenantId_createdAt_idx" ON "RoomScanSession" USING BRIN ("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "RoomScanSession_tenantId_status_idx" ON "RoomScanSession"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RoomScanSession_tenantId_projectId_idx" ON "RoomScanSession"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "RoomScanSession_tenantId_deletedAt_idx" ON "RoomScanSession"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomScanSession_tenantId_id_key" ON "RoomScanSession"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomScanFile_tenantId_sessionId_idx" ON "RoomScanFile"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "RoomScanFile_tenantId_fileType_idx" ON "RoomScanFile"("tenantId", "fileType");

-- CreateIndex
CREATE INDEX "RoomScanFile_tenantId_deletedAt_idx" ON "RoomScanFile"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomScanFile_tenantId_id_key" ON "RoomScanFile"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomModel_tenantId_sessionId_idx" ON "RoomModel"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "RoomModel_tenantId_projectId_idx" ON "RoomModel"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "RoomModel_tenantId_estimateId_idx" ON "RoomModel"("tenantId", "estimateId");

-- CreateIndex
CREATE INDEX "RoomModel_tenantId_deletedAt_idx" ON "RoomModel"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RoomModel_tenantId_createdAt_idx" ON "RoomModel" USING BRIN ("tenantId", "createdAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomModel_tenantId_id_key" ON "RoomModel"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomMeasurement_tenantId_modelId_idx" ON "RoomMeasurement"("tenantId", "modelId");

-- CreateIndex
CREATE INDEX "RoomMeasurement_tenantId_sessionId_idx" ON "RoomMeasurement"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "RoomMeasurement_tenantId_deletedAt_idx" ON "RoomMeasurement"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomMeasurement_tenantId_id_key" ON "RoomMeasurement"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomObject_tenantId_modelId_idx" ON "RoomObject"("tenantId", "modelId");

-- CreateIndex
CREATE INDEX "RoomObject_tenantId_objectType_idx" ON "RoomObject"("tenantId", "objectType");

-- CreateIndex
CREATE INDEX "RoomObject_tenantId_deletedAt_idx" ON "RoomObject"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomObject_tenantId_id_key" ON "RoomObject"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomSurface_tenantId_modelId_idx" ON "RoomSurface"("tenantId", "modelId");

-- CreateIndex
CREATE INDEX "RoomSurface_tenantId_surfaceType_idx" ON "RoomSurface"("tenantId", "surfaceType");

-- CreateIndex
CREATE INDEX "RoomSurface_tenantId_deletedAt_idx" ON "RoomSurface"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomSurface_tenantId_id_key" ON "RoomSurface"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomAnnotation_tenantId_modelId_idx" ON "RoomAnnotation"("tenantId", "modelId");

-- CreateIndex
CREATE INDEX "RoomAnnotation_tenantId_createdByActorId_idx" ON "RoomAnnotation"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "RoomAnnotation_tenantId_deletedAt_idx" ON "RoomAnnotation"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomAnnotation_tenantId_id_key" ON "RoomAnnotation"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomExport_tenantId_modelId_idx" ON "RoomExport"("tenantId", "modelId");

-- CreateIndex
CREATE INDEX "RoomExport_tenantId_exportType_idx" ON "RoomExport"("tenantId", "exportType");

-- CreateIndex
CREATE INDEX "RoomExport_tenantId_status_idx" ON "RoomExport"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RoomExport_tenantId_deletedAt_idx" ON "RoomExport"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomExport_tenantId_id_key" ON "RoomExport"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RoomPlanPreset_tenantId_presetType_idx" ON "RoomPlanPreset"("tenantId", "presetType");

-- CreateIndex
CREATE INDEX "RoomPlanPreset_tenantId_deletedAt_idx" ON "RoomPlanPreset"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomPlanPreset_tenantId_id_key" ON "RoomPlanPreset"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RoomPlanPreset_tenantId_name_key" ON "RoomPlanPreset"("tenantId", "name");

-- CreateIndex
CREATE INDEX "RoomProcessingJob_tenantId_sessionId_idx" ON "RoomProcessingJob"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "RoomProcessingJob_tenantId_jobType_idx" ON "RoomProcessingJob"("tenantId", "jobType");

-- CreateIndex
CREATE INDEX "RoomProcessingJob_tenantId_status_idx" ON "RoomProcessingJob"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RoomProcessingJob_tenantId_deletedAt_idx" ON "RoomProcessingJob"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "RoomProcessingJob_tenantId_id_key" ON "RoomProcessingJob"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PunchList_createdAt_idx" ON "PunchList" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PunchList_tenantId_assigneeId_idx" ON "PunchList"("tenantId", "assigneeId");

-- CreateIndex
CREATE INDEX "PunchList_tenantId_auditCorrelationId_idx" ON "PunchList"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PunchList_tenantId_deletedAt_idx" ON "PunchList"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PunchList_tenantId_projectId_idx" ON "PunchList"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "PunchList_tenantId_status_idx" ON "PunchList"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PunchList_tenantId_id_key" ON "PunchList"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PunchListItem_createdAt_idx" ON "PunchListItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_assigneeId_idx" ON "PunchListItem"("tenantId", "assigneeId");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_auditCorrelationId_idx" ON "PunchListItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_completedAt_idx" ON "PunchListItem"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_deletedAt_idx" ON "PunchListItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_dueDate_idx" ON "PunchListItem"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_priority_idx" ON "PunchListItem"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_punchListId_idx" ON "PunchListItem"("tenantId", "punchListId");

-- CreateIndex
CREATE INDEX "PunchListItem_tenantId_status_idx" ON "PunchListItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PunchListItem_tenantId_id_key" ON "PunchListItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "PurchaseOrder_approvedAt_idx" ON "PurchaseOrder"("approvedAt");

-- CreateIndex
CREATE INDEX "PurchaseOrder_createdAt_idx" ON "PurchaseOrder" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_approvedById_idx" ON "PurchaseOrder"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_auditCorrelationId_idx" ON "PurchaseOrder"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_dataClassification_idx" ON "PurchaseOrder"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_orderDate_idx" ON "PurchaseOrder"("tenantId", "orderDate");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_status_idx" ON "PurchaseOrder"("tenantId", "status");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_totalAmount_idx" ON "PurchaseOrder"("tenantId", "totalAmount");

-- CreateIndex
CREATE INDEX "PurchaseOrder_tenantId_vendorId_idx" ON "PurchaseOrder"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrder_tenantId_id_key" ON "PurchaseOrder"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrder_tenantId_poNumber_key" ON "PurchaseOrder"("tenantId", "poNumber");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_createdAt_idx" ON "PurchaseOrderApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_approvedAt_idx" ON "PurchaseOrderApproval"("tenantId", "approvedAt");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_approverId_idx" ON "PurchaseOrderApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_auditCorrelationId_idx" ON "PurchaseOrderApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_dataClassification_idx" ON "PurchaseOrderApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_decision_idx" ON "PurchaseOrderApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_purchaseOrderId_idx" ON "PurchaseOrderApproval"("tenantId", "purchaseOrderId");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_requestedAmount_idx" ON "PurchaseOrderApproval"("tenantId", "requestedAmount");

-- CreateIndex
CREATE INDEX "PurchaseOrderApproval_tenantId_status_idx" ON "PurchaseOrderApproval"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrderApproval_tenantId_id_key" ON "PurchaseOrderApproval"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrderApproval_tenantId_purchaseOrderId_approvalLeve_key" ON "PurchaseOrderApproval"("tenantId", "purchaseOrderId", "approvalLevel");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_createdAt_idx" ON "PurchaseOrderLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_auditCorrelationId_idx" ON "PurchaseOrderLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_dataClassification_idx" ON "PurchaseOrderLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_deletedAt_idx" ON "PurchaseOrderLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_itemCode_idx" ON "PurchaseOrderLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_projectId_idx" ON "PurchaseOrderLine"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_purchaseOrderId_idx" ON "PurchaseOrderLine"("tenantId", "purchaseOrderId");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_requestedDate_idx" ON "PurchaseOrderLine"("tenantId", "requestedDate");

-- CreateIndex
CREATE INDEX "PurchaseOrderLine_tenantId_status_idx" ON "PurchaseOrderLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrderLine_tenantId_id_key" ON "PurchaseOrderLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "PurchaseOrderLine_tenantId_purchaseOrderId_lineNumber_key" ON "PurchaseOrderLine"("tenantId", "purchaseOrderId", "lineNumber");

-- CreateIndex
CREATE INDEX "Quote_createdAt_idx" ON "Quote" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Quote_globalId_idx" ON "Quote"("globalId");

-- CreateIndex
CREATE INDEX "Quote_tenantId_accountId_idx" ON "Quote"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "Quote_tenantId_auditCorrelationId_idx" ON "Quote"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Quote_tenantId_contactId_idx" ON "Quote"("tenantId", "contactId");

-- CreateIndex
CREATE INDEX "Quote_tenantId_dataClassification_idx" ON "Quote"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Quote_tenantId_deletedAt_idx" ON "Quote"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Quote_tenantId_leadId_idx" ON "Quote"("tenantId", "leadId");

-- CreateIndex
CREATE INDEX "Quote_tenantId_sentDate_idx" ON "Quote"("tenantId", "sentDate");

-- CreateIndex
CREATE INDEX "Quote_tenantId_status_idx" ON "Quote"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Quote_tenantId_totalAmount_idx" ON "Quote"("tenantId", "totalAmount");

-- CreateIndex
CREATE INDEX "Quote_tenantId_validUntil_idx" ON "Quote"("tenantId", "validUntil");

-- CreateIndex
CREATE UNIQUE INDEX "Quote_tenantId_id_key" ON "Quote"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Quote_tenantId_quoteNumber_key" ON "Quote"("tenantId", "quoteNumber");

-- CreateIndex
CREATE INDEX "QuoteLineItem_createdAt_idx" ON "QuoteLineItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "QuoteLineItem_priceListItemId_idx" ON "QuoteLineItem"("priceListItemId");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_auditCorrelationId_idx" ON "QuoteLineItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_dataClassification_idx" ON "QuoteLineItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_deletedAt_idx" ON "QuoteLineItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_quoteId_idx" ON "QuoteLineItem"("tenantId", "quoteId");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_sortOrder_idx" ON "QuoteLineItem"("tenantId", "sortOrder");

-- CreateIndex
CREATE INDEX "QuoteLineItem_tenantId_status_idx" ON "QuoteLineItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "QuoteLineItem_tenantId_id_key" ON "QuoteLineItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RFI_createdAt_idx" ON "RFI" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RFI_tenantId_assigneeId_idx" ON "RFI"("tenantId", "assigneeId");

-- CreateIndex
CREATE INDEX "RFI_tenantId_auditCorrelationId_idx" ON "RFI"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RFI_tenantId_dataClassification_idx" ON "RFI"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RFI_tenantId_deletedAt_idx" ON "RFI"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RFI_tenantId_dueDate_idx" ON "RFI"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "RFI_tenantId_priority_idx" ON "RFI"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "RFI_tenantId_projectId_idx" ON "RFI"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "RFI_tenantId_status_idx" ON "RFI"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RFI_tenantId_submitterId_idx" ON "RFI"("tenantId", "submitterId");

-- CreateIndex
CREATE UNIQUE INDEX "RFI_tenantId_id_key" ON "RFI"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RFI_tenantId_number_key" ON "RFI"("tenantId", "number");

-- CreateIndex
CREATE INDEX "RFIReply_createdAt_idx" ON "RFIReply" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_auditCorrelationId_idx" ON "RFIReply"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_authorId_idx" ON "RFIReply"("tenantId", "authorId");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_dataClassification_idx" ON "RFIReply"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_deletedAt_idx" ON "RFIReply"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_replyType_idx" ON "RFIReply"("tenantId", "replyType");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_rfiId_idx" ON "RFIReply"("tenantId", "rfiId");

-- CreateIndex
CREATE INDEX "RFIReply_tenantId_status_idx" ON "RFIReply"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "RFIReply_tenantId_id_key" ON "RFIReply"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RFQLine_createdAt_idx" ON "RFQLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_auditCorrelationId_idx" ON "RFQLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_dataClassification_idx" ON "RFQLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_deletedAt_idx" ON "RFQLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_itemCode_idx" ON "RFQLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_projectId_idx" ON "RFQLine"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_requiredDeliveryDate_idx" ON "RFQLine"("tenantId", "requiredDeliveryDate");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_rfqId_idx" ON "RFQLine"("tenantId", "rfqId");

-- CreateIndex
CREATE INDEX "RFQLine_tenantId_status_idx" ON "RFQLine"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "RFQLine_tenantId_id_key" ON "RFQLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RFQLine_tenantId_rfqId_lineNumber_key" ON "RFQLine"("tenantId", "rfqId", "lineNumber");

-- CreateIndex
CREATE INDEX "RFQResponse_createdAt_idx" ON "RFQResponse" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_auditCorrelationId_idx" ON "RFQResponse"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_dataClassification_idx" ON "RFQResponse"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_deletedAt_idx" ON "RFQResponse"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_evaluationScore_idx" ON "RFQResponse"("tenantId", "evaluationScore");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_isAwarded_idx" ON "RFQResponse"("tenantId", "isAwarded");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_rfqId_idx" ON "RFQResponse"("tenantId", "rfqId");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_status_idx" ON "RFQResponse"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_submittedAt_idx" ON "RFQResponse"("tenantId", "submittedAt");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_validUntil_idx" ON "RFQResponse"("tenantId", "validUntil");

-- CreateIndex
CREATE INDEX "RFQResponse_tenantId_vendorId_idx" ON "RFQResponse"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "RFQResponse_tenantId_id_key" ON "RFQResponse"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RFQResponse_tenantId_rfqId_vendorId_key" ON "RFQResponse"("tenantId", "rfqId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "RFQResponse_tenantId_vendorId_responseNumber_key" ON "RFQResponse"("tenantId", "vendorId", "responseNumber");

-- CreateIndex
CREATE INDEX "RFQResponseLine_createdAt_idx" ON "RFQResponseLine" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_auditCorrelationId_idx" ON "RFQResponseLine"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_dataClassification_idx" ON "RFQResponseLine"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_deletedAt_idx" ON "RFQResponseLine"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_deliveryDays_idx" ON "RFQResponseLine"("tenantId", "deliveryDays");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_isAwarded_idx" ON "RFQResponseLine"("tenantId", "isAwarded");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_itemCode_idx" ON "RFQResponseLine"("tenantId", "itemCode");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_rfqLineId_idx" ON "RFQResponseLine"("tenantId", "rfqLineId");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_rfqResponseId_idx" ON "RFQResponseLine"("tenantId", "rfqResponseId");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_status_idx" ON "RFQResponseLine"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_unitPrice_idx" ON "RFQResponseLine"("tenantId", "unitPrice");

-- CreateIndex
CREATE INDEX "RFQResponseLine_tenantId_vendorPartNumber_idx" ON "RFQResponseLine"("tenantId", "vendorPartNumber");

-- CreateIndex
CREATE UNIQUE INDEX "RFQResponseLine_tenantId_id_key" ON "RFQResponseLine"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RFQResponseLine_tenantId_rfqResponseId_lineNumber_key" ON "RFQResponseLine"("tenantId", "rfqResponseId", "lineNumber");

-- CreateIndex
CREATE INDEX "ReasonCode_blocksApproval_idx" ON "ReasonCode"("blocksApproval");

-- CreateIndex
CREATE INDEX "ReasonCode_createdAt_idx" ON "ReasonCode" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_auditCorrelationId_idx" ON "ReasonCode"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_category_idx" ON "ReasonCode"("tenantId", "category");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_codeType_idx" ON "ReasonCode"("tenantId", "codeType");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_dataClassification_idx" ON "ReasonCode"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_deletedAt_idx" ON "ReasonCode"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_departmentScope_idx" ON "ReasonCode"("tenantId", "departmentScope");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_displayOrder_idx" ON "ReasonCode"("tenantId", "displayOrder");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_isActive_idx" ON "ReasonCode"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_isSystemCode_idx" ON "ReasonCode"("tenantId", "isSystemCode");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_lastUsedAt_idx" ON "ReasonCode"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_moduleScope_idx" ON "ReasonCode"("tenantId", "moduleScope");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_severity_idx" ON "ReasonCode"("tenantId", "severity");

-- CreateIndex
CREATE INDEX "ReasonCode_tenantId_status_idx" ON "ReasonCode"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ReasonCode_usageCount_idx" ON "ReasonCode"("usageCount");

-- CreateIndex
CREATE UNIQUE INDEX "ReasonCode_tenantId_codeValue_key" ON "ReasonCode"("tenantId", "codeValue");

-- CreateIndex
CREATE UNIQUE INDEX "ReasonCode_tenantId_id_key" ON "ReasonCode"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Reconciliation_reconciliationNumber_key" ON "Reconciliation"("reconciliationNumber");

-- CreateIndex
CREATE INDEX "Reconciliation_endDate_idx" ON "Reconciliation" USING BRIN ("endDate");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_auditCorrelationId_idx" ON "Reconciliation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_bankAccountId_idx" ON "Reconciliation"("tenantId", "bankAccountId");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_createdByActorId_idx" ON "Reconciliation"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_dataClassification_idx" ON "Reconciliation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_endDate_idx" ON "Reconciliation"("tenantId", "endDate");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_reconciledById_idx" ON "Reconciliation"("tenantId", "reconciledById");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_reconciliationNumber_idx" ON "Reconciliation"("tenantId", "reconciliationNumber");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_reviewedById_idx" ON "Reconciliation"("tenantId", "reviewedById");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_status_endDate_idx" ON "Reconciliation"("tenantId", "status", "endDate");

-- CreateIndex
CREATE INDEX "Reconciliation_tenantId_status_idx" ON "Reconciliation"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Reconciliation_tenantId_id_key" ON "Reconciliation"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Refund_refundNumber_key" ON "Refund"("refundNumber");

-- CreateIndex
CREATE INDEX "Refund_refundDate_idx" ON "Refund" USING BRIN ("refundDate");

-- CreateIndex
CREATE INDEX "Refund_tenantId_amount_idx" ON "Refund"("tenantId", "amount");

-- CreateIndex
CREATE INDEX "Refund_tenantId_auditCorrelationId_idx" ON "Refund"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Refund_tenantId_createdByActorId_idx" ON "Refund"("tenantId", "createdByActorId");

-- CreateIndex
CREATE INDEX "Refund_tenantId_dataClassification_idx" ON "Refund"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Refund_tenantId_paymentId_idx" ON "Refund"("tenantId", "paymentId");

-- CreateIndex
CREATE INDEX "Refund_tenantId_processedById_idx" ON "Refund"("tenantId", "processedById");

-- CreateIndex
CREATE INDEX "Refund_tenantId_referenceNumber_idx" ON "Refund"("tenantId", "referenceNumber");

-- CreateIndex
CREATE INDEX "Refund_tenantId_refundDate_idx" ON "Refund"("tenantId", "refundDate");

-- CreateIndex
CREATE INDEX "Refund_tenantId_refundNumber_idx" ON "Refund"("tenantId", "refundNumber");

-- CreateIndex
CREATE INDEX "Refund_tenantId_status_idx" ON "Refund"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Refund_tenantId_status_refundDate_idx" ON "Refund"("tenantId", "status", "refundDate");

-- CreateIndex
CREATE UNIQUE INDEX "Refund_tenantId_id_key" ON "Refund"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Reimbursement_createdAt_idx" ON "Reimbursement" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_auditCorrelationId_idx" ON "Reimbursement"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_dataClassification_idx" ON "Reimbursement"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_deletedAt_idx" ON "Reimbursement"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_effectiveDate_idx" ON "Reimbursement"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_employeeGroup_idx" ON "Reimbursement"("tenantId", "employeeGroup");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_isActive_idx" ON "Reimbursement"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_reimbursementType_idx" ON "Reimbursement"("tenantId", "reimbursementType");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_requiresApproval_idx" ON "Reimbursement"("tenantId", "requiresApproval");

-- CreateIndex
CREATE INDEX "Reimbursement_tenantId_status_idx" ON "Reimbursement"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Reimbursement_tenantId_id_key" ON "Reimbursement"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Reimbursement_tenantId_reimbursementCode_key" ON "Reimbursement"("tenantId", "reimbursementCode");

-- CreateIndex
CREATE INDEX "ReportDefinition_createdAt_idx" ON "ReportDefinition" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_auditCorrelationId_idx" ON "ReportDefinition"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_dataClassification_idx" ON "ReportDefinition"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_deletedAt_idx" ON "ReportDefinition"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_isPublished_idx" ON "ReportDefinition"("tenantId", "isPublished");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_publishedAt_idx" ON "ReportDefinition"("tenantId", "publishedAt");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_status_idx" ON "ReportDefinition"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ReportDefinition_tenantId_statusEnum_idx" ON "ReportDefinition"("tenantId", "statusEnum");

-- CreateIndex
CREATE UNIQUE INDEX "ReportDefinition_tenantId_id_key" ON "ReportDefinition"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ReportDefinition_tenantId_code_key" ON "ReportDefinition"("tenantId", "code");

-- CreateIndex
CREATE UNIQUE INDEX "RequestForQuote_rfqNumber_key" ON "RequestForQuote"("rfqNumber");

-- CreateIndex
CREATE INDEX "RequestForQuote_createdAt_idx" ON "RequestForQuote" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_auditCorrelationId_idx" ON "RequestForQuote"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_dataClassification_idx" ON "RequestForQuote"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_deletedAt_idx" ON "RequestForQuote"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_firstResponseAt_idx" ON "RequestForQuote"("tenantId", "firstResponseAt");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_projectId_idx" ON "RequestForQuote"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_publishedAt_idx" ON "RequestForQuote"("tenantId", "publishedAt");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_responsesDue_idx" ON "RequestForQuote"("tenantId", "responsesDue");

-- CreateIndex
CREATE INDEX "RequestForQuote_tenantId_status_idx" ON "RequestForQuote"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "RequestForQuote_tenantId_id_key" ON "RequestForQuote"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RequestForQuote_tenantId_rfqNumber_key" ON "RequestForQuote"("tenantId", "rfqNumber");

-- CreateIndex
CREATE INDEX "ResourceAllocation_createdAt_idx" ON "ResourceAllocation" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_allocationStatus_idx" ON "ResourceAllocation"("tenantId", "allocationStatus");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_assignedById_idx" ON "ResourceAllocation"("tenantId", "assignedById");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_assignedToId_idx" ON "ResourceAllocation"("tenantId", "assignedToId");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_auditCorrelationId_idx" ON "ResourceAllocation"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_dataClassification_idx" ON "ResourceAllocation"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_deletedAt_idx" ON "ResourceAllocation"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_projectId_idx" ON "ResourceAllocation"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_requiresApproval_approvedAt_idx" ON "ResourceAllocation"("tenantId", "requiresApproval", "approvedAt");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_resourceType_idx" ON "ResourceAllocation"("tenantId", "resourceType");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_scheduleId_idx" ON "ResourceAllocation"("tenantId", "scheduleId");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_startDate_endDate_idx" ON "ResourceAllocation"("tenantId", "startDate", "endDate");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_status_idx" ON "ResourceAllocation"("tenantId", "status");

-- CreateIndex
CREATE INDEX "ResourceAllocation_tenantId_taskId_idx" ON "ResourceAllocation"("tenantId", "taskId");

-- CreateIndex
CREATE UNIQUE INDEX "ResourceAllocation_tenantId_id_key" ON "ResourceAllocation"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ReturnReminder_createdAt_idx" ON "ReturnReminder" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_assetId_idx" ON "ReturnReminder"("tenantId", "assetId");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_assignedTo_idx" ON "ReturnReminder"("tenantId", "assignedTo");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_auditCorrelationId_idx" ON "ReturnReminder"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_dataClassification_idx" ON "ReturnReminder"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_deletedAt_idx" ON "ReturnReminder"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_dueDate_idx" ON "ReturnReminder"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_priority_idx" ON "ReturnReminder"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_reminderDate_idx" ON "ReturnReminder"("tenantId", "reminderDate");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_reminderFor_idx" ON "ReturnReminder"("tenantId", "reminderFor");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_reminderStatus_idx" ON "ReturnReminder"("tenantId", "reminderStatus");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_reminderType_idx" ON "ReturnReminder"("tenantId", "reminderType");

-- CreateIndex
CREATE INDEX "ReturnReminder_tenantId_status_idx" ON "ReturnReminder"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ReturnReminder_tenantId_id_key" ON "ReturnReminder"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ReturnReminder_tenantId_reminderNumber_key" ON "ReturnReminder"("tenantId", "reminderNumber");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_createdAt_idx" ON "ReturnReminderAttempt" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_attemptDate_idx" ON "ReturnReminderAttempt"("tenantId", "attemptDate");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_attemptStatus_idx" ON "ReturnReminderAttempt"("tenantId", "attemptStatus");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_attemptType_idx" ON "ReturnReminderAttempt"("tenantId", "attemptType");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_auditCorrelationId_idx" ON "ReturnReminderAttempt"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_dataClassification_idx" ON "ReturnReminderAttempt"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_deletedAt_idx" ON "ReturnReminderAttempt"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_responseReceived_idx" ON "ReturnReminderAttempt"("tenantId", "responseReceived");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_returnReminderId_idx" ON "ReturnReminderAttempt"("tenantId", "returnReminderId");

-- CreateIndex
CREATE INDEX "ReturnReminderAttempt_tenantId_status_idx" ON "ReturnReminderAttempt"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ReturnReminderAttempt_tenantId_id_key" ON "ReturnReminderAttempt"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ReturnReminderAttempt_tenantId_returnReminderId_attemptNumb_key" ON "ReturnReminderAttempt"("tenantId", "returnReminderId", "attemptNumber");

-- CreateIndex
CREATE INDEX "Role_createdAt_idx" ON "Role" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Role_parentRoleId_idx" ON "Role"("parentRoleId");

-- CreateIndex
CREATE INDEX "Role_tenantId_auditCorrelationId_idx" ON "Role"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Role_tenantId_dataClassification_idx" ON "Role"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Role_tenantId_deletedAt_idx" ON "Role"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Role_tenantId_isActive_idx" ON "Role"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Role_tenantId_isDefault_idx" ON "Role"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "Role_tenantId_priority_idx" ON "Role"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Role_tenantId_roleType_idx" ON "Role"("tenantId", "roleType");

-- CreateIndex
CREATE INDEX "Role_tenantId_status_idx" ON "Role"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Role_tenantId_code_key" ON "Role"("tenantId", "code");

-- CreateIndex
CREATE UNIQUE INDEX "Role_tenantId_id_key" ON "Role"("tenantId", "id");

-- CreateIndex
CREATE INDEX "RolePermission_approvedByMemberId_idx" ON "RolePermission"("approvedByMemberId");

-- CreateIndex
CREATE INDEX "RolePermission_assignedByMemberId_idx" ON "RolePermission"("assignedByMemberId");

-- CreateIndex
CREATE INDEX "RolePermission_createdAt_idx" ON "RolePermission" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "RolePermission_revokedByMemberId_idx" ON "RolePermission"("revokedByMemberId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_auditCorrelationId_idx" ON "RolePermission"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_dataClassification_idx" ON "RolePermission"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_deletedAt_idx" ON "RolePermission"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_isActive_idx" ON "RolePermission"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_isDenied_idx" ON "RolePermission"("tenantId", "isDenied");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_memberId_idx" ON "RolePermission"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_permissionId_idx" ON "RolePermission"("tenantId", "permissionId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_resourceType_idx" ON "RolePermission"("tenantId", "resourceType");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_resourceType_resourceId_idx" ON "RolePermission"("tenantId", "resourceType", "resourceId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_roleId_idx" ON "RolePermission"("tenantId", "roleId");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_status_idx" ON "RolePermission"("tenantId", "status");

-- CreateIndex
CREATE INDEX "RolePermission_tenantId_validFrom_validUntil_idx" ON "RolePermission"("tenantId", "validFrom", "validUntil");

-- CreateIndex
CREATE UNIQUE INDEX "RolePermission_tenantId_id_key" ON "RolePermission"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "RolePermission_tenantId_roleId_permissionId_memberId_key" ON "RolePermission"("tenantId", "roleId", "permissionId", "memberId");

-- CreateIndex
CREATE UNIQUE INDEX "RolePermission_tenantId_roleId_permissionId_resourceType_re_key" ON "RolePermission"("tenantId", "roleId", "permissionId", "resourceType", "resourceId");

-- CreateIndex
CREATE INDEX "Schedule_createdAt_idx" ON "Schedule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_auditCorrelationId_idx" ON "Schedule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_dataClassification_idx" ON "Schedule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_deletedAt_idx" ON "Schedule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_projectId_idx" ON "Schedule"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_startDate_endDate_idx" ON "Schedule"("tenantId", "startDate", "endDate");

-- CreateIndex
CREATE INDEX "Schedule_tenantId_status_idx" ON "Schedule"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Schedule_tenantId_id_key" ON "Schedule"("tenantId", "id");

-- CreateIndex
CREATE INDEX "ScheduleException_createdAt_idx" ON "ScheduleException" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_approvedById_idx" ON "ScheduleException"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_auditCorrelationId_idx" ON "ScheduleException"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_dataClassification_idx" ON "ScheduleException"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_deletedAt_idx" ON "ScheduleException"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_exceptionDate_idx" ON "ScheduleException"("tenantId", "exceptionDate");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_exceptionType_idx" ON "ScheduleException"("tenantId", "exceptionType");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_isRecurring_idx" ON "ScheduleException"("tenantId", "isRecurring");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_isWorkday_idx" ON "ScheduleException"("tenantId", "isWorkday");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_scheduleId_idx" ON "ScheduleException"("tenantId", "scheduleId");

-- CreateIndex
CREATE INDEX "ScheduleException_tenantId_status_idx" ON "ScheduleException"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ScheduleException_tenantId_id_key" ON "ScheduleException"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ScheduleException_tenantId_scheduleId_exceptionDate_key" ON "ScheduleException"("tenantId", "scheduleId", "exceptionDate");

-- CreateIndex
CREATE INDEX "ServiceAccount_createdAt_idx" ON "ServiceAccount" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_accountType_idx" ON "ServiceAccount"("tenantId", "accountType");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_auditCorrelationId_idx" ON "ServiceAccount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_dataClassification_idx" ON "ServiceAccount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_deletedAt_idx" ON "ServiceAccount"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_expiresAt_idx" ON "ServiceAccount"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_isActive_idx" ON "ServiceAccount"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_lastUsedAt_idx" ON "ServiceAccount"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_ownerId_idx" ON "ServiceAccount"("tenantId", "ownerId");

-- CreateIndex
CREATE INDEX "ServiceAccount_tenantId_status_idx" ON "ServiceAccount"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccount_tenantId_email_key" ON "ServiceAccount"("tenantId", "email");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccount_tenantId_id_key" ON "ServiceAccount"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccount_tenantId_name_key" ON "ServiceAccount"("tenantId", "name");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccountKey_keyId_key" ON "ServiceAccountKey"("keyId");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_createdAt_idx" ON "ServiceAccountKey" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_keyId_idx" ON "ServiceAccountKey"("keyId");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_keyPrefix_idx" ON "ServiceAccountKey"("keyPrefix");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_auditCorrelationId_idx" ON "ServiceAccountKey"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_createdById_idx" ON "ServiceAccountKey"("tenantId", "createdById");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_dataClassification_idx" ON "ServiceAccountKey"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_deletedAt_idx" ON "ServiceAccountKey"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_expiresAt_idx" ON "ServiceAccountKey"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_isActive_idx" ON "ServiceAccountKey"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_lastUsedAt_idx" ON "ServiceAccountKey"("tenantId", "lastUsedAt");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_serviceAccountId_idx" ON "ServiceAccountKey"("tenantId", "serviceAccountId");

-- CreateIndex
CREATE INDEX "ServiceAccountKey_tenantId_status_idx" ON "ServiceAccountKey"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccountKey_tenantId_id_key" ON "ServiceAccountKey"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "ServiceAccountKey_tenantId_serviceAccountId_name_key" ON "ServiceAccountKey"("tenantId", "serviceAccountId", "name");

-- CreateIndex
CREATE UNIQUE INDEX "Session_sessionToken_key" ON "Session"("sessionToken");

-- CreateIndex
CREATE UNIQUE INDEX "Session_refreshToken_key" ON "Session"("refreshToken");

-- CreateIndex
CREATE INDEX "Session_createdAt_idx" ON "Session" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Session_tenantId_auditCorrelationId_idx" ON "Session"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Session_tenantId_dataClassification_idx" ON "Session"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Session_tenantId_deletedAt_idx" ON "Session"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Session_tenantId_deviceId_idx" ON "Session"("tenantId", "deviceId");

-- CreateIndex
CREATE INDEX "Session_tenantId_expiresAt_idx" ON "Session"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "Session_tenantId_ipAddress_idx" ON "Session"("tenantId", "ipAddress");

-- CreateIndex
CREATE INDEX "Session_tenantId_isMfaVerified_idx" ON "Session"("tenantId", "isMfaVerified");

-- CreateIndex
CREATE INDEX "Session_tenantId_lastAccessedAt_idx" ON "Session"("tenantId", "lastAccessedAt");

-- CreateIndex
CREATE INDEX "Session_tenantId_memberId_idx" ON "Session"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "Session_tenantId_status_idx" ON "Session"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Session_tenantId_userId_idx" ON "Session"("tenantId", "userId");

-- CreateIndex
CREATE INDEX "Session_terminatedByMemberId_idx" ON "Session"("terminatedByMemberId");

-- CreateIndex
CREATE UNIQUE INDEX "Session_tenantId_id_key" ON "Session"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Session_tenantId_refreshToken_key" ON "Session"("tenantId", "refreshToken");

-- CreateIndex
CREATE UNIQUE INDEX "Session_tenantId_sessionToken_key" ON "Session"("tenantId", "sessionToken");

-- CreateIndex
CREATE INDEX "SignatureArtifact_createdAt_idx" ON "SignatureArtifact" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_artifactType_idx" ON "SignatureArtifact"("tenantId", "artifactType");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_auditCorrelationId_idx" ON "SignatureArtifact"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_dataClassification_idx" ON "SignatureArtifact"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_deletedAt_idx" ON "SignatureArtifact"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_disposalDate_idx" ON "SignatureArtifact"("tenantId", "disposalDate");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_envelopeId_idx" ON "SignatureArtifact"("tenantId", "envelopeId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_fileObjectId_idx" ON "SignatureArtifact"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_generatedAt_idx" ON "SignatureArtifact"("tenantId", "generatedAt");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_isArchived_idx" ON "SignatureArtifact"("tenantId", "isArchived");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_isLatest_idx" ON "SignatureArtifact"("tenantId", "isLatest");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_isPublic_idx" ON "SignatureArtifact"("tenantId", "isPublic");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_parentArtifactId_idx" ON "SignatureArtifact"("tenantId", "parentArtifactId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_providerArtifactId_idx" ON "SignatureArtifact"("tenantId", "providerArtifactId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_retentionDate_idx" ON "SignatureArtifact"("tenantId", "retentionDate");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_sessionId_idx" ON "SignatureArtifact"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "SignatureArtifact_tenantId_status_idx" ON "SignatureArtifact"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SignatureArtifact_tenantId_id_key" ON "SignatureArtifact"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SignatureEvent_createdAt_idx" ON "SignatureEvent" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_auditCorrelationId_idx" ON "SignatureEvent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_dataClassification_idx" ON "SignatureEvent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_deletedAt_idx" ON "SignatureEvent"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_isVerified_idx" ON "SignatureEvent"("tenantId", "isVerified");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_signatureType_idx" ON "SignatureEvent"("tenantId", "signatureType");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_signedAt_idx" ON "SignatureEvent"("tenantId", "signedAt");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_signedById_idx" ON "SignatureEvent"("tenantId", "signedById");

-- CreateIndex
CREATE INDEX "SignatureEvent_tenantId_status_idx" ON "SignatureEvent"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SignatureEvent_tenantId_id_key" ON "SignatureEvent"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SignatureIntent_createdAt_idx" ON "SignatureIntent" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_auditCorrelationId_idx" ON "SignatureIntent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_completedAt_idx" ON "SignatureIntent"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_dataClassification_idx" ON "SignatureIntent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_deletedAt_idx" ON "SignatureIntent"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_intentType_idx" ON "SignatureIntent"("tenantId", "intentType");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_intentedAt_idx" ON "SignatureIntent"("tenantId", "intentedAt");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_isError_idx" ON "SignatureIntent"("tenantId", "isError");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_isValid_idx" ON "SignatureIntent"("tenantId", "isValid");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_providerIntentId_idx" ON "SignatureIntent"("tenantId", "providerIntentId");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_recipientId_idx" ON "SignatureIntent"("tenantId", "recipientId");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_sessionId_idx" ON "SignatureIntent"("tenantId", "sessionId");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_signatureType_idx" ON "SignatureIntent"("tenantId", "signatureType");

-- CreateIndex
CREATE INDEX "SignatureIntent_tenantId_status_idx" ON "SignatureIntent"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SignatureIntent_tenantId_id_key" ON "SignatureIntent"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SignatureSession_createdAt_idx" ON "SignatureSession" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_auditCorrelationId_idx" ON "SignatureSession"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_authenticationSuccess_idx" ON "SignatureSession"("tenantId", "authenticationSuccess");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_completedAt_idx" ON "SignatureSession"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_dataClassification_idx" ON "SignatureSession"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_deletedAt_idx" ON "SignatureSession"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_envelopeId_idx" ON "SignatureSession"("tenantId", "envelopeId");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_expiredAt_idx" ON "SignatureSession"("tenantId", "expiredAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_expiresAt_idx" ON "SignatureSession"("tenantId", "expiresAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_ipAddress_idx" ON "SignatureSession"("tenantId", "ipAddress");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_lastActivity_idx" ON "SignatureSession"("tenantId", "lastActivity");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_providerSessionId_idx" ON "SignatureSession"("tenantId", "providerSessionId");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_recipientId_idx" ON "SignatureSession"("tenantId", "recipientId");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_startedAt_idx" ON "SignatureSession"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "SignatureSession_tenantId_status_idx" ON "SignatureSession"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SignatureSession_tenantId_id_key" ON "SignatureSession"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "SignatureSession_tenantId_sessionToken_key" ON "SignatureSession"("tenantId", "sessionToken");

-- CreateIndex
CREATE INDEX "SnapshotCube_createdAt_idx" ON "SnapshotCube" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SnapshotCube_tenantId_auditCorrelationId_idx" ON "SnapshotCube"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SnapshotCube_tenantId_dataClassification_idx" ON "SnapshotCube"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SnapshotCube_tenantId_deletedAt_idx" ON "SnapshotCube"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SnapshotCube_tenantId_latestPartitionAt_idx" ON "SnapshotCube"("tenantId", "latestPartitionAt");

-- CreateIndex
CREATE INDEX "SnapshotCube_tenantId_status_idx" ON "SnapshotCube"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SnapshotCube_tenantId_id_key" ON "SnapshotCube"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "SnapshotCube_tenantId_code_key" ON "SnapshotCube"("tenantId", "code");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_createdAt_idx" ON "SnapshotCubePartition" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_auditCorrelationId_idx" ON "SnapshotCubePartition"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_dataClassification_idx" ON "SnapshotCubePartition"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_deletedAt_idx" ON "SnapshotCubePartition"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_cubeId_idx" ON "SnapshotCubePartition"("tenantId", "cubeId");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_periodStart_idx" ON "SnapshotCubePartition"("tenantId", "periodStart");

-- CreateIndex
CREATE INDEX "SnapshotCubePartition_tenantId_status_idx" ON "SnapshotCubePartition"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "SnapshotCubePartition_tenantId_id_key" ON "SnapshotCubePartition"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "SnapshotCubePartition_tenantId_cubeId_partitionKey_key" ON "SnapshotCubePartition"("tenantId", "cubeId", "partitionKey");

-- CreateIndex
CREATE INDEX "Submittal_createdAt_idx" ON "Submittal" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Submittal_tenantId_auditCorrelationId_idx" ON "Submittal"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Submittal_tenantId_deletedAt_idx" ON "Submittal"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Submittal_tenantId_projectId_idx" ON "Submittal"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Submittal_tenantId_status_idx" ON "Submittal"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "Submittal_tenantId_id_key" ON "Submittal"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SubmittalApproval_createdAt_idx" ON "SubmittalApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SubmittalApproval_tenantId_approverId_idx" ON "SubmittalApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "SubmittalApproval_tenantId_auditCorrelationId_idx" ON "SubmittalApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SubmittalApproval_tenantId_decidedAt_idx" ON "SubmittalApproval"("tenantId", "decidedAt");

-- CreateIndex
CREATE INDEX "SubmittalApproval_tenantId_decision_idx" ON "SubmittalApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "SubmittalApproval_tenantId_deletedAt_idx" ON "SubmittalApproval"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "SubmittalApproval_tenantId_id_key" ON "SubmittalApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SubmittalItem_createdAt_idx" ON "SubmittalItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_auditCorrelationId_idx" ON "SubmittalItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_deletedAt_idx" ON "SubmittalItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_dueDate_idx" ON "SubmittalItem"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_reviewerId_idx" ON "SubmittalItem"("tenantId", "reviewerId");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_status_idx" ON "SubmittalItem"("tenantId", "status");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_submittalId_idx" ON "SubmittalItem"("tenantId", "submittalId");

-- CreateIndex
CREATE INDEX "SubmittalItem_tenantId_submittedAt_idx" ON "SubmittalItem"("tenantId", "submittedAt");

-- CreateIndex
CREATE UNIQUE INDEX "SubmittalItem_tenantId_id_key" ON "SubmittalItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "SyncJob_globalId_key" ON "SyncJob"("globalId");

-- CreateIndex
CREATE INDEX "SyncJob_createdAt_idx" ON "SyncJob" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_auditCorrelationId_idx" ON "SyncJob"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_completedAt_idx" ON "SyncJob"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_dataClassification_idx" ON "SyncJob"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_deletedAt_idx" ON "SyncJob"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_integrationConnectionId_idx" ON "SyncJob"("tenantId", "integrationConnectionId");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_isRecurring_idx" ON "SyncJob"("tenantId", "isRecurring");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_jobPriority_idx" ON "SyncJob"("tenantId", "jobPriority");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_nextRunAt_idx" ON "SyncJob"("tenantId", "nextRunAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_parentJobId_idx" ON "SyncJob"("tenantId", "parentJobId");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_scheduledAt_idx" ON "SyncJob"("tenantId", "scheduledAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_startedAt_idx" ON "SyncJob"("tenantId", "startedAt");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_status_idx" ON "SyncJob"("tenantId", "status");

-- CreateIndex
CREATE INDEX "SyncJob_tenantId_syncJobType_idx" ON "SyncJob"("tenantId", "syncJobType");

-- CreateIndex
CREATE UNIQUE INDEX "SyncJob_tenantId_id_key" ON "SyncJob"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "SyncLog_globalId_key" ON "SyncLog"("globalId");

-- CreateIndex
CREATE INDEX "SyncLog_createdAt_idx" ON "SyncLog" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_auditCorrelationId_idx" ON "SyncLog"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_businessEntityType_idx" ON "SyncLog"("tenantId", "businessEntityType");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_containsPII_idx" ON "SyncLog"("tenantId", "containsPII");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_correlationId_idx" ON "SyncLog"("tenantId", "correlationId");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_createdAt_idx" ON "SyncLog"("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_dataClassification_idx" ON "SyncLog"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_deletedAt_idx" ON "SyncLog"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_errorCode_idx" ON "SyncLog"("tenantId", "errorCode");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_executionStart_idx" ON "SyncLog"("tenantId", "executionStart");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_logCategory_idx" ON "SyncLog"("tenantId", "logCategory");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_logLevel_idx" ON "SyncLog"("tenantId", "logLevel");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_logType_idx" ON "SyncLog"("tenantId", "logType");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_status_idx" ON "SyncLog"("tenantId", "status");

-- CreateIndex
CREATE INDEX "SyncLog_tenantId_syncJobId_idx" ON "SyncLog"("tenantId", "syncJobId");

-- CreateIndex
CREATE UNIQUE INDEX "SyncLog_tenantId_id_key" ON "SyncLog"("tenantId", "id");

-- CreateIndex
CREATE INDEX "SystemLog_createdAt_idx" ON "SystemLog" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_auditCorrelationId_idx" ON "SystemLog"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_category_idx" ON "SystemLog"("tenantId", "category");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_dataClassification_idx" ON "SystemLog"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_entityId_idx" ON "SystemLog"("tenantId", "entityId");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_level_idx" ON "SystemLog"("tenantId", "level");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_timestamp_idx" ON "SystemLog"("tenantId", "timestamp");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_type_idx" ON "SystemLog"("tenantId", "type");

-- CreateIndex
CREATE INDEX "SystemLog_tenantId_environmentEnum_idx" ON "SystemLog"("tenantId", "environmentEnum");

-- CreateIndex
CREATE UNIQUE INDEX "SystemLog_tenantId_id_key" ON "SystemLog"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Task_createdAt_idx" ON "Task" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Task_tenantId_approvalRequired_approvedAt_idx" ON "Task"("tenantId", "approvalRequired", "approvedAt");

-- CreateIndex
CREATE INDEX "Task_tenantId_approvedById_idx" ON "Task"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "Task_tenantId_auditCorrelationId_idx" ON "Task"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Task_tenantId_businessImpact_idx" ON "Task"("tenantId", "businessImpact");

-- CreateIndex
CREATE INDEX "Task_tenantId_completedAt_idx" ON "Task"("tenantId", "completedAt");

-- CreateIndex
CREATE INDEX "Task_tenantId_dataClassification_idx" ON "Task"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Task_tenantId_deletedAt_idx" ON "Task"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Task_tenantId_dueDate_idx" ON "Task"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "Task_tenantId_estimatedHours_idx" ON "Task"("tenantId", "estimatedHours");

-- CreateIndex
CREATE INDEX "Task_tenantId_priority_idx" ON "Task"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Task_tenantId_projectId_idx" ON "Task"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Task_tenantId_scheduleId_idx" ON "Task"("tenantId", "scheduleId");

-- CreateIndex
CREATE INDEX "Task_tenantId_status_idx" ON "Task"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Task_tenantId_taskType_idx" ON "Task"("tenantId", "taskType");

-- CreateIndex
CREATE INDEX "idx_task_tenant_deleted" ON "Task"("tenantId", "deletedAt");

-- CreateIndex
CREATE UNIQUE INDEX "Task_tenantId_id_key" ON "Task"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TaskAssignment_createdAt_idx" ON "TaskAssignment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_acceptedAt_idx" ON "TaskAssignment"("tenantId", "acceptedAt");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_assignmentRole_idx" ON "TaskAssignment"("tenantId", "assignmentRole");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_auditCorrelationId_idx" ON "TaskAssignment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_dataClassification_idx" ON "TaskAssignment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_deletedAt_idx" ON "TaskAssignment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_isActive_idx" ON "TaskAssignment"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_memberId_idx" ON "TaskAssignment"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_projectId_idx" ON "TaskAssignment"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_signatureEventId_idx" ON "TaskAssignment"("tenantId", "signatureEventId");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_status_idx" ON "TaskAssignment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_taskId_idx" ON "TaskAssignment"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "TaskAssignment_tenantId_workloadWeight_idx" ON "TaskAssignment"("tenantId", "workloadWeight");

-- CreateIndex
CREATE UNIQUE INDEX "TaskAssignment_tenantId_id_key" ON "TaskAssignment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TaskAssignment_tenantId_taskId_memberId_key" ON "TaskAssignment"("tenantId", "taskId", "memberId");

-- CreateIndex
CREATE INDEX "TaskAttachment_createdAt_idx" ON "TaskAttachment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_attachmentType_idx" ON "TaskAttachment"("tenantId", "attachmentType");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_auditCorrelationId_idx" ON "TaskAttachment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_dataClassification_idx" ON "TaskAttachment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_deletedAt_idx" ON "TaskAttachment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_documentGroupId_idx" ON "TaskAttachment"("tenantId", "documentGroupId");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_fileObjectId_idx" ON "TaskAttachment"("tenantId", "fileObjectId");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_status_idx" ON "TaskAttachment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_taskId_idx" ON "TaskAttachment"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "TaskAttachment_tenantId_uploadedById_idx" ON "TaskAttachment"("tenantId", "uploadedById");

-- CreateIndex
CREATE UNIQUE INDEX "TaskAttachment_tenantId_id_key" ON "TaskAttachment"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_createdAt_idx" ON "TaskChecklistItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_auditCorrelationId_idx" ON "TaskChecklistItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_completedById_idx" ON "TaskChecklistItem"("tenantId", "completedById");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_dataClassification_idx" ON "TaskChecklistItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_deletedAt_idx" ON "TaskChecklistItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_isCompleted_idx" ON "TaskChecklistItem"("tenantId", "isCompleted");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_isRequired_idx" ON "TaskChecklistItem"("tenantId", "isRequired");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_requiresSignature_idx" ON "TaskChecklistItem"("tenantId", "requiresSignature");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_status_idx" ON "TaskChecklistItem"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_taskId_idx" ON "TaskChecklistItem"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "TaskChecklistItem_tenantId_validatedById_idx" ON "TaskChecklistItem"("tenantId", "validatedById");

-- CreateIndex
CREATE UNIQUE INDEX "TaskChecklistItem_tenantId_id_key" ON "TaskChecklistItem"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TaskDependency_createdAt_idx" ON "TaskDependency" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_auditCorrelationId_idx" ON "TaskDependency"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_dataClassification_idx" ON "TaskDependency"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_deletedAt_idx" ON "TaskDependency"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_dependencyType_idx" ON "TaskDependency"("tenantId", "dependencyType");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_predecessorId_idx" ON "TaskDependency"("tenantId", "predecessorId");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_status_idx" ON "TaskDependency"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TaskDependency_tenantId_successorId_idx" ON "TaskDependency"("tenantId", "successorId");

-- CreateIndex
CREATE UNIQUE INDEX "TaskDependency_tenantId_id_key" ON "TaskDependency"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TaskDependency_tenantId_predecessorId_successorId_key" ON "TaskDependency"("tenantId", "predecessorId", "successorId");

-- CreateIndex
CREATE UNIQUE INDEX "TaxJurisdiction_jurisdictionCode_key" ON "TaxJurisdiction"("jurisdictionCode");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_auditCorrelationId_idx" ON "TaxJurisdiction"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_countryCode_idx" ON "TaxJurisdiction"("countryCode");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_createdAt_idx" ON "TaxJurisdiction" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_currency_idx" ON "TaxJurisdiction"("currency");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_dataClassification_idx" ON "TaxJurisdiction"("dataClassification");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_deletedAt_idx" ON "TaxJurisdiction"("deletedAt");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_jurisdictionType_idx" ON "TaxJurisdiction"("jurisdictionType");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_level_idx" ON "TaxJurisdiction"("level");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_parentJurisdictionId_idx" ON "TaxJurisdiction"("parentJurisdictionId");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_stateCode_idx" ON "TaxJurisdiction"("stateCode");

-- CreateIndex
CREATE INDEX "TaxJurisdiction_status_idx" ON "TaxJurisdiction"("status");

-- CreateIndex
CREATE INDEX "TaxRate_auditCorrelationId_idx" ON "TaxRate"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "TaxRate_calculationMethod_idx" ON "TaxRate"("calculationMethod");

-- CreateIndex
CREATE INDEX "TaxRate_countryCode_idx" ON "TaxRate"("countryCode");

-- CreateIndex
CREATE INDEX "TaxRate_createdAt_idx" ON "TaxRate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TaxRate_dataClassification_idx" ON "TaxRate"("dataClassification");

-- CreateIndex
CREATE INDEX "TaxRate_deletedAt_idx" ON "TaxRate"("deletedAt");

-- CreateIndex
CREATE INDEX "TaxRate_effectiveFrom_idx" ON "TaxRate"("effectiveFrom");

-- CreateIndex
CREATE INDEX "TaxRate_effectiveTo_idx" ON "TaxRate"("effectiveTo");

-- CreateIndex
CREATE INDEX "TaxRate_glAccountId_idx" ON "TaxRate"("glAccountId");

-- CreateIndex
CREATE INDEX "TaxRate_isDefault_idx" ON "TaxRate"("isDefault");

-- CreateIndex
CREATE INDEX "TaxRate_reportingCode_idx" ON "TaxRate"("reportingCode");

-- CreateIndex
CREATE INDEX "TaxRate_stateCode_idx" ON "TaxRate"("stateCode");

-- CreateIndex
CREATE INDEX "TaxRate_status_idx" ON "TaxRate"("status");

-- CreateIndex
CREATE INDEX "TaxRate_taxJurisdictionId_idx" ON "TaxRate"("taxJurisdictionId");

-- CreateIndex
CREATE INDEX "TaxRate_taxType_idx" ON "TaxRate"("taxType");

-- CreateIndex
CREATE UNIQUE INDEX "TaxRate_taxCode_effectiveFrom_key" ON "TaxRate"("taxCode", "effectiveFrom");

-- CreateIndex
CREATE UNIQUE INDEX "Actor_globalId_key" ON "Actor"("globalId");

-- CreateIndex
CREATE UNIQUE INDEX "Actor_userId_key" ON "Actor"("userId");

-- CreateIndex
CREATE UNIQUE INDEX "Actor_serviceAccountId_key" ON "Actor"("serviceAccountId");

-- CreateIndex
CREATE UNIQUE INDEX "Actor_apiKeyId_key" ON "Actor"("apiKeyId");

-- CreateIndex
CREATE INDEX "Actor_actorType_idx" ON "Actor"("actorType");

-- CreateIndex
CREATE INDEX "Actor_globalId_idx" ON "Actor"("globalId");

-- CreateIndex
CREATE INDEX "Actor_isActive_idx" ON "Actor"("isActive");

-- CreateIndex
CREATE INDEX "Actor_isSystem_idx" ON "Actor"("isSystem");

-- CreateIndex
CREATE INDEX "Actor_lastActivityAt_idx" ON "Actor"("lastActivityAt");

-- CreateIndex
CREATE INDEX "Actor_riskScore_idx" ON "Actor"("riskScore");

-- CreateIndex
CREATE INDEX "Actor_complianceLevel_idx" ON "Actor"("complianceLevel");

-- CreateIndex
CREATE INDEX "Actor_userId_idx" ON "Actor"("userId");

-- CreateIndex
CREATE INDEX "Actor_serviceAccountId_idx" ON "Actor"("serviceAccountId");

-- CreateIndex
CREATE INDEX "Actor_apiKeyId_idx" ON "Actor"("apiKeyId");

-- CreateIndex
CREATE INDEX "Actor_systemProcessName_idx" ON "Actor"("systemProcessName");

-- CreateIndex
CREATE INDEX "Actor_createdAt_idx" ON "Actor" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Actor_auditCorrelationId_idx" ON "Actor"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "Actor_dataClassification_idx" ON "Actor"("dataClassification");

-- CreateIndex
CREATE INDEX "Actor_deletedAt_idx" ON "Actor"("deletedAt");

-- CreateIndex
CREATE INDEX "Actor_status_idx" ON "Actor"("status");

-- CreateIndex
CREATE UNIQUE INDEX "Tenant_slug_key" ON "Tenant"("slug");

-- CreateIndex
CREATE INDEX "Tenant_auditCorrelationId_idx" ON "Tenant"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "Tenant_createdAt_idx" ON "Tenant" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Tenant_dataClassification_idx" ON "Tenant"("dataClassification");

-- CreateIndex
CREATE INDEX "Tenant_deletedAt_idx" ON "Tenant"("deletedAt");

-- CreateIndex
CREATE INDEX "Tenant_deploymentType_idx" ON "Tenant"("deploymentType");

-- CreateIndex
CREATE INDEX "Tenant_migrationStatus_idx" ON "Tenant"("migrationStatus");

-- CreateIndex
CREATE INDEX "Tenant_region_idx" ON "Tenant"("region");

-- CreateIndex
CREATE INDEX "Tenant_slug_idx" ON "Tenant"("slug");

-- CreateIndex
CREATE INDEX "Tenant_status_idx" ON "Tenant"("status");

-- CreateIndex
CREATE INDEX "Tenant_subscriptionEndsAt_idx" ON "Tenant"("subscriptionEndsAt");

-- CreateIndex
CREATE INDEX "Tenant_tier_idx" ON "Tenant"("tier");

-- CreateIndex
CREATE INDEX "Tenant_trialEndsAt_idx" ON "Tenant"("trialEndsAt");

-- CreateIndex
CREATE INDEX "TenantAuditLog_createdAt_idx" ON "TenantAuditLog" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_action_idx" ON "TenantAuditLog"("tenantId", "action");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_actorId_idx" ON "TenantAuditLog"("tenantId", "actorId");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_auditCorrelationId_idx" ON "TenantAuditLog"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_createdAt_idx" ON "TenantAuditLog" USING BRIN ("tenantId", "createdAt");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_dataClassification_idx" ON "TenantAuditLog"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_deletedAt_idx" ON "TenantAuditLog"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_requestId_idx" ON "TenantAuditLog"("tenantId", "requestId");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_riskLevel_idx" ON "TenantAuditLog"("tenantId", "riskLevel");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_status_idx" ON "TenantAuditLog"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_success_idx" ON "TenantAuditLog"("tenantId", "success");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_targetModel_idx" ON "TenantAuditLog"("tenantId", "targetModel");

-- CreateIndex
CREATE INDEX "TenantAuditLog_tenantId_targetModel_targetId_idx" ON "TenantAuditLog"("tenantId", "targetModel", "targetId");

-- CreateIndex
CREATE UNIQUE INDEX "TenantAuditLog_tenantId_id_key" ON "TenantAuditLog"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_createdAt_idx" ON "TenantBillingAccount" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_auditCorrelationId_idx" ON "TenantBillingAccount"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_dataClassification_idx" ON "TenantBillingAccount"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_deletedAt_idx" ON "TenantBillingAccount"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_paymentProvider_idx" ON "TenantBillingAccount"("tenantId", "paymentProvider");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_status_idx" ON "TenantBillingAccount"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TenantBillingAccount_tenantId_verificationStatus_idx" ON "TenantBillingAccount"("tenantId", "verificationStatus");

-- CreateIndex
CREATE UNIQUE INDEX "TenantBillingAccount_tenantId_id_key" ON "TenantBillingAccount"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantBillingAccount_tenantId_providerCustomerId_key" ON "TenantBillingAccount"("tenantId", "providerCustomerId");

-- CreateIndex
CREATE INDEX "TenantEvent_occurredAt_idx" ON "TenantEvent" USING BRIN ("occurredAt");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_actorId_idx" ON "TenantEvent"("tenantId", "actorId");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_aggregateType_aggregateId_idx" ON "TenantEvent"("tenantId", "aggregateType", "aggregateId");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_aggregateType_idx" ON "TenantEvent"("tenantId", "aggregateType");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_auditCorrelationId_idx" ON "TenantEvent"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_causationId_idx" ON "TenantEvent"("tenantId", "causationId");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_correlationId_idx" ON "TenantEvent"("tenantId", "correlationId");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_dataClassification_idx" ON "TenantEvent"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_deletedAt_idx" ON "TenantEvent"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_eventType_idx" ON "TenantEvent"("tenantId", "eventType");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_isSnapshot_idx" ON "TenantEvent"("tenantId", "isSnapshot");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_occurredAt_idx" ON "TenantEvent" USING BRIN ("tenantId", "occurredAt");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_processed_idx" ON "TenantEvent"("tenantId", "processed");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_status_idx" ON "TenantEvent"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TenantEvent_tenantId_streamId_idx" ON "TenantEvent"("tenantId", "streamId");

-- CreateIndex
CREATE UNIQUE INDEX "TenantEvent_tenantId_aggregateType_aggregateId_sequence_key" ON "TenantEvent"("tenantId", "aggregateType", "aggregateId", "sequence");

-- CreateIndex
CREATE UNIQUE INDEX "TenantEvent_tenantId_id_key" ON "TenantEvent"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantEvent_tenantId_streamId_streamPosition_key" ON "TenantEvent"("tenantId", "streamId", "streamPosition");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_createdAt_idx" ON "TenantFeatureFlag" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_auditCorrelationId_idx" ON "TenantFeatureFlag"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_dataClassification_idx" ON "TenantFeatureFlag"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_deletedAt_idx" ON "TenantFeatureFlag"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_enabled_idx" ON "TenantFeatureFlag"("tenantId", "enabled");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_key_enabled_idx" ON "TenantFeatureFlag"("tenantId", "key", "enabled");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_scope_idx" ON "TenantFeatureFlag"("tenantId", "scope");

-- CreateIndex
CREATE INDEX "TenantFeatureFlag_tenantId_status_idx" ON "TenantFeatureFlag"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TenantFeatureFlag_tenantId_id_key" ON "TenantFeatureFlag"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantFeatureFlag_tenantId_key_key" ON "TenantFeatureFlag"("tenantId", "key");

-- CreateIndex
CREATE INDEX "TenantMetrics_metricDate_idx" ON "TenantMetrics" USING BRIN ("metricDate");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_auditCorrelationId_idx" ON "TenantMetrics"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_dataClassification_idx" ON "TenantMetrics"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_deletedAt_idx" ON "TenantMetrics"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_metricDate_idx" ON "TenantMetrics" USING BRIN ("tenantId", "metricDate");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_metricDate_metricHour_idx" ON "TenantMetrics"("tenantId", "metricDate", "metricHour");

-- CreateIndex
CREATE INDEX "TenantMetrics_tenantId_status_idx" ON "TenantMetrics"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TenantMetrics_tenantId_id_key" ON "TenantMetrics"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantMetrics_tenantId_metricDate_metricHour_key" ON "TenantMetrics"("tenantId", "metricDate", "metricHour");

-- CreateIndex
CREATE INDEX "TenantPriceList_createdAt_idx" ON "TenantPriceList" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantPriceList_priceListId_idx" ON "TenantPriceList"("priceListId");

-- CreateIndex
CREATE INDEX "TenantPriceList_tenantId_auditCorrelationId_idx" ON "TenantPriceList"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantPriceList_tenantId_dataClassification_idx" ON "TenantPriceList"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantPriceList_tenantId_deletedAt_idx" ON "TenantPriceList"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantPriceList_tenantId_isDefault_idx" ON "TenantPriceList"("tenantId", "isDefault");

-- CreateIndex
CREATE INDEX "TenantPriceList_tenantId_status_idx" ON "TenantPriceList"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TenantPriceList_tenantId_id_key" ON "TenantPriceList"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantPriceList_tenantId_priceListId_key" ON "TenantPriceList"("tenantId", "priceListId");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_createdAt_idx" ON "TenantPriceOverride" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_tenantId_approvedBy_idx" ON "TenantPriceOverride"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_tenantId_auditCorrelationId_idx" ON "TenantPriceOverride"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_tenantId_deletedAt_idx" ON "TenantPriceOverride"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_tenantId_effectiveDate_idx" ON "TenantPriceOverride"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "TenantPriceOverride_tenantId_status_idx" ON "TenantPriceOverride"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TenantPriceOverride_tenantId_id_key" ON "TenantPriceOverride"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantPriceOverride_tenantId_priceListItemId_key" ON "TenantPriceOverride"("tenantId", "priceListItemId");

-- CreateIndex
CREATE INDEX "AccountInsurance_createdAt_idx" ON "AccountInsurance" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_accountId_idx" ON "AccountInsurance"("tenantId", "accountId");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_auditCorrelationId_idx" ON "AccountInsurance"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_carrierName_idx" ON "AccountInsurance"("tenantId", "carrierName");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_dataClassification_idx" ON "AccountInsurance"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_deletedAt_idx" ON "AccountInsurance"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_effectiveDate_idx" ON "AccountInsurance"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_expirationDate_idx" ON "AccountInsurance"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_insuranceStatus_idx" ON "AccountInsurance"("tenantId", "insuranceStatus");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_insuranceType_idx" ON "AccountInsurance"("tenantId", "insuranceType");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_isRequiredForWork_idx" ON "AccountInsurance"("tenantId", "isRequiredForWork");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_renewalDate_idx" ON "AccountInsurance"("tenantId", "renewalDate");

-- CreateIndex
CREATE INDEX "AccountInsurance_tenantId_status_idx" ON "AccountInsurance"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "AccountInsurance_tenantId_id_key" ON "AccountInsurance"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "AccountInsurance_tenantId_accountId_policyNumber_key" ON "AccountInsurance"("tenantId", "accountId", "policyNumber");

-- CreateIndex
CREATE INDEX "QuoteApproval_createdAt_idx" ON "QuoteApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_approvalLevel_idx" ON "QuoteApproval"("tenantId", "approvalLevel");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_approvalType_idx" ON "QuoteApproval"("tenantId", "approvalType");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_approvedAt_idx" ON "QuoteApproval"("tenantId", "approvedAt");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_approvedById_idx" ON "QuoteApproval"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_auditCorrelationId_idx" ON "QuoteApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_dataClassification_idx" ON "QuoteApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_deletedAt_idx" ON "QuoteApproval"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_escalatedToId_idx" ON "QuoteApproval"("tenantId", "escalatedToId");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_quoteId_idx" ON "QuoteApproval"("tenantId", "quoteId");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_requestedById_idx" ON "QuoteApproval"("tenantId", "requestedById");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_riskScore_idx" ON "QuoteApproval"("tenantId", "riskScore");

-- CreateIndex
CREATE INDEX "QuoteApproval_tenantId_status_idx" ON "QuoteApproval"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "QuoteApproval_tenantId_id_key" ON "QuoteApproval"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "QuoteApproval_tenantId_quoteId_approvalLevel_key" ON "QuoteApproval"("tenantId", "quoteId", "approvalLevel");

-- CreateIndex
CREATE INDEX "Territory_createdAt_idx" ON "Territory" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Territory_tenantId_auditCorrelationId_idx" ON "Territory"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Territory_tenantId_dataClassification_idx" ON "Territory"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Territory_tenantId_deletedAt_idx" ON "Territory"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Territory_tenantId_isActive_idx" ON "Territory"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Territory_tenantId_managerId_idx" ON "Territory"("tenantId", "managerId");

-- CreateIndex
CREATE INDEX "Territory_tenantId_priority_idx" ON "Territory"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "Territory_tenantId_status_idx" ON "Territory"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Territory_tenantId_territoryType_idx" ON "Territory"("tenantId", "territoryType");

-- CreateIndex
CREATE UNIQUE INDEX "Territory_tenantId_id_key" ON "Territory"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Territory_tenantId_territoryCode_key" ON "Territory"("tenantId", "territoryCode");

-- CreateIndex
CREATE INDEX "CustomerSegment_createdAt_idx" ON "CustomerSegment" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_auditCorrelationId_idx" ON "CustomerSegment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_dataClassification_idx" ON "CustomerSegment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_deletedAt_idx" ON "CustomerSegment"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_isActive_idx" ON "CustomerSegment"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_isTargetSegment_idx" ON "CustomerSegment"("tenantId", "isTargetSegment");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_priority_idx" ON "CustomerSegment"("tenantId", "priority");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_segmentType_idx" ON "CustomerSegment"("tenantId", "segmentType");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_status_idx" ON "CustomerSegment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "CustomerSegment_tenantId_tenantPriceListId_idx" ON "CustomerSegment"("tenantId", "tenantPriceListId");

-- CreateIndex
CREATE UNIQUE INDEX "CustomerSegment_tenantId_id_key" ON "CustomerSegment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "CustomerSegment_tenantId_segmentCode_key" ON "CustomerSegment"("tenantId", "segmentCode");

-- CreateIndex
CREATE INDEX "CommissionRule_createdAt_idx" ON "CommissionRule" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_auditCorrelationId_idx" ON "CommissionRule"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_calculationBase_idx" ON "CommissionRule"("tenantId", "calculationBase");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_commissionType_idx" ON "CommissionRule"("tenantId", "commissionType");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_dataClassification_idx" ON "CommissionRule"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_deletedAt_idx" ON "CommissionRule"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_effectiveDate_idx" ON "CommissionRule"("tenantId", "effectiveDate");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_isActive_idx" ON "CommissionRule"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_isPrimary_idx" ON "CommissionRule"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_salesRole_idx" ON "CommissionRule"("tenantId", "salesRole");

-- CreateIndex
CREATE INDEX "CommissionRule_tenantId_status_idx" ON "CommissionRule"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "CommissionRule_tenantId_id_key" ON "CommissionRule"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "CommissionRule_tenantId_ruleCode_key" ON "CommissionRule"("tenantId", "ruleCode");

-- CreateIndex
CREATE UNIQUE INDEX "TenantSettings_tenantId_key" ON "TenantSettings"("tenantId");

-- CreateIndex
CREATE INDEX "TenantSettings_createdAt_idx" ON "TenantSettings" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_auditCorrelationId_idx" ON "TenantSettings"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_contractTemplateUrl_idx" ON "TenantSettings"("tenantId", "contractTemplateUrl");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_dataClassification_idx" ON "TenantSettings"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_deletedAt_idx" ON "TenantSettings"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_status_idx" ON "TenantSettings"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TenantSettings_tenantId_termsTemplateUrl_idx" ON "TenantSettings"("tenantId", "termsTemplateUrl");

-- CreateIndex
CREATE UNIQUE INDEX "TenantSettings_tenantId_id_key" ON "TenantSettings"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TenantSubscription_createdAt_idx" ON "TenantSubscription" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_auditCorrelationId_idx" ON "TenantSubscription"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_cancelAtPeriodEnd_idx" ON "TenantSubscription"("tenantId", "cancelAtPeriodEnd");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_currentPeriodEnd_idx" ON "TenantSubscription"("tenantId", "currentPeriodEnd");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_dataClassification_idx" ON "TenantSubscription"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_deletedAt_idx" ON "TenantSubscription"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_isTrialing_idx" ON "TenantSubscription"("tenantId", "isTrialing");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_nextBillingDate_idx" ON "TenantSubscription"("tenantId", "nextBillingDate");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_planId_idx" ON "TenantSubscription"("tenantId", "planId");

-- CreateIndex
CREATE INDEX "TenantSubscription_tenantId_status_idx" ON "TenantSubscription"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TenantSubscription_tenantId_id_key" ON "TenantSubscription"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TenantSubscription_tenantId_providerSubscriptionId_key" ON "TenantSubscription"("tenantId", "providerSubscriptionId");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_recordedAt_idx" ON "TenantUsageRecord" USING BRIN ("recordedAt");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_auditCorrelationId_idx" ON "TenantUsageRecord"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_billingPeriodStart_billingPeriod_idx" ON "TenantUsageRecord"("tenantId", "billingPeriodStart", "billingPeriodEnd");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_dataClassification_idx" ON "TenantUsageRecord"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_deletedAt_idx" ON "TenantUsageRecord"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_metric_idx" ON "TenantUsageRecord"("tenantId", "metric");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_processed_idx" ON "TenantUsageRecord"("tenantId", "processed");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_recordedAt_idx" ON "TenantUsageRecord" USING BRIN ("tenantId", "recordedAt");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_resourceType_resourceId_idx" ON "TenantUsageRecord"("tenantId", "resourceType", "resourceId");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_status_idx" ON "TenantUsageRecord"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TenantUsageRecord_tenantId_subscriptionId_idx" ON "TenantUsageRecord"("tenantId", "subscriptionId");

-- CreateIndex
CREATE UNIQUE INDEX "TenantUsageRecord_tenantId_id_key" ON "TenantUsageRecord"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TermsTemplate_createdAt_idx" ON "TermsTemplate" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TermsTemplate_tenantId_deletedAt_idx" ON "TermsTemplate"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TermsTemplate_tenantId_status_idx" ON "TermsTemplate"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "TermsTemplate_tenantId_id_key" ON "TermsTemplate"("tenantId", "id");

-- CreateIndex
CREATE INDEX "Timesheet_createdAt_idx" ON "Timesheet" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_approvedById_idx" ON "Timesheet"("tenantId", "approvedById");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_auditCorrelationId_idx" ON "Timesheet"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_dataClassification_idx" ON "Timesheet"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_deletedAt_idx" ON "Timesheet"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_projectId_idx" ON "Timesheet"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_status_idx" ON "Timesheet"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_status_submittedAt_idx" ON "Timesheet"("tenantId", "status", "submittedAt");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_workerId_idx" ON "Timesheet"("tenantId", "workerId");

-- CreateIndex
CREATE INDEX "Timesheet_tenantId_workerId_periodStartDate_idx" ON "Timesheet"("tenantId", "workerId", "periodStartDate");

-- CreateIndex
CREATE UNIQUE INDEX "Timesheet_tenantId_id_key" ON "Timesheet"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Timesheet_tenantId_workerId_periodStartDate_key" ON "Timesheet"("tenantId", "workerId", "periodStartDate");

-- CreateIndex
CREATE INDEX "TimesheetApproval_createdAt_idx" ON "TimesheetApproval" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_approvalLevel_idx" ON "TimesheetApproval"("tenantId", "approvalLevel");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_approverId_idx" ON "TimesheetApproval"("tenantId", "approverId");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_auditCorrelationId_idx" ON "TimesheetApproval"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_dataClassification_idx" ON "TimesheetApproval"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_decisionDate_idx" ON "TimesheetApproval"("tenantId", "decisionDate");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_decision_idx" ON "TimesheetApproval"("tenantId", "decision");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_deletedAt_idx" ON "TimesheetApproval"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_dueDate_idx" ON "TimesheetApproval"("tenantId", "dueDate");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_escalationLevel_idx" ON "TimesheetApproval"("tenantId", "escalationLevel");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_requestedAt_idx" ON "TimesheetApproval"("tenantId", "requestedAt");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_status_idx" ON "TimesheetApproval"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TimesheetApproval_tenantId_timesheetId_idx" ON "TimesheetApproval"("tenantId", "timesheetId");

-- CreateIndex
CREATE UNIQUE INDEX "TimesheetApproval_tenantId_approvalNumber_key" ON "TimesheetApproval"("tenantId", "approvalNumber");

-- CreateIndex
CREATE UNIQUE INDEX "TimesheetApproval_tenantId_id_key" ON "TimesheetApproval"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TimesheetEntry_createdAt_idx" ON "TimesheetEntry" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_approvedBy_idx" ON "TimesheetEntry"("tenantId", "approvedBy");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_auditCorrelationId_idx" ON "TimesheetEntry"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_billable_idx" ON "TimesheetEntry"("tenantId", "billable");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_budgetLineId_idx" ON "TimesheetEntry"("tenantId", "budgetLineId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_costCodeId_idx" ON "TimesheetEntry"("tenantId", "costCodeId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_dataClassification_idx" ON "TimesheetEntry"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_deletedAt_idx" ON "TimesheetEntry"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_entryStatus_idx" ON "TimesheetEntry"("tenantId", "entryStatus");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_entryType_idx" ON "TimesheetEntry"("tenantId", "entryType");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_memberId_idx" ON "TimesheetEntry"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_status_idx" ON "TimesheetEntry"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_taskId_idx" ON "TimesheetEntry"("tenantId", "taskId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_timesheetId_idx" ON "TimesheetEntry"("tenantId", "timesheetId");

-- CreateIndex
CREATE INDEX "TimesheetEntry_tenantId_workDate_idx" ON "TimesheetEntry"("tenantId", "workDate");

-- CreateIndex
CREATE INDEX "idx_timesheet_entry_member" ON "TimesheetEntry"("tenantId", "memberId");

-- CreateIndex
CREATE UNIQUE INDEX "TimesheetEntry_tenantId_entryNumber_key" ON "TimesheetEntry"("tenantId", "entryNumber");

-- CreateIndex
CREATE UNIQUE INDEX "TimesheetEntry_tenantId_id_key" ON "TimesheetEntry"("tenantId", "id");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_auditCorrelationId_idx" ON "TrainingEnrollment"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_completionDate_idx" ON "TrainingEnrollment"("tenantId", "completionDate");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_dataClassification_idx" ON "TrainingEnrollment"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_enrollmentDate_idx" ON "TrainingEnrollment"("tenantId", "enrollmentDate");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_expirationDate_idx" ON "TrainingEnrollment"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_status_idx" ON "TrainingEnrollment"("tenantId", "status");

-- CreateIndex
CREATE INDEX "TrainingEnrollment_tenantId_workerId_idx" ON "TrainingEnrollment"("tenantId", "workerId");

-- CreateIndex
CREATE UNIQUE INDEX "TrainingEnrollment_tenantId_id_key" ON "TrainingEnrollment"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "TrainingEnrollment_tenantId_workerId_trainingId_key" ON "TrainingEnrollment"("tenantId", "workerId", "trainingId");

-- CreateIndex
CREATE UNIQUE INDEX "User_email_key" ON "User"("email");

-- CreateIndex
CREATE INDEX "User_auditCorrelationId_idx" ON "User"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "User_createdAt_idx" ON "User" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "User_dataClassification_idx" ON "User"("dataClassification");

-- CreateIndex
CREATE INDEX "User_emailVerified_idx" ON "User"("emailVerified");

-- CreateIndex
CREATE INDEX "User_email_idx" ON "User"("email");

-- CreateIndex
CREATE INDEX "User_invitedByUserId_idx" ON "User"("invitedByUserId");

-- CreateIndex
CREATE INDEX "User_lastLoginAt_idx" ON "User"("lastLoginAt");

-- CreateIndex
CREATE INDEX "User_status_idx" ON "User"("status");

-- CreateIndex
CREATE UNIQUE INDEX "UserDevice_deviceFingerprint_key" ON "UserDevice"("deviceFingerprint");

-- CreateIndex
CREATE INDEX "UserDevice_createdAt_idx" ON "UserDevice" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "UserDevice_revokedByMemberId_idx" ON "UserDevice"("revokedByMemberId");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_auditCorrelationId_idx" ON "UserDevice"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_browserName_idx" ON "UserDevice"("tenantId", "browserName");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_compromisedAt_idx" ON "UserDevice"("tenantId", "compromisedAt");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_dataClassification_idx" ON "UserDevice"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_deletedAt_idx" ON "UserDevice"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_deviceType_idx" ON "UserDevice"("tenantId", "deviceType");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_ipAddress_idx" ON "UserDevice"("tenantId", "ipAddress");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_isTrusted_idx" ON "UserDevice"("tenantId", "isTrusted");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_isVerified_idx" ON "UserDevice"("tenantId", "isVerified");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_lastSeenAt_idx" ON "UserDevice"("tenantId", "lastSeenAt");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_memberId_idx" ON "UserDevice"("tenantId", "memberId");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_osName_idx" ON "UserDevice"("tenantId", "osName");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_revokedAt_idx" ON "UserDevice"("tenantId", "revokedAt");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_status_idx" ON "UserDevice"("tenantId", "status");

-- CreateIndex
CREATE INDEX "UserDevice_tenantId_userId_idx" ON "UserDevice"("tenantId", "userId");

-- CreateIndex
CREATE UNIQUE INDEX "UserDevice_tenantId_deviceFingerprint_key" ON "UserDevice"("tenantId", "deviceFingerprint");

-- CreateIndex
CREATE UNIQUE INDEX "UserDevice_tenantId_id_key" ON "UserDevice"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Vendor_vendorNumber_key" ON "Vendor"("vendorNumber");

-- CreateIndex
CREATE INDEX "Vendor_createdAt_idx" ON "Vendor" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_auditCorrelationId_idx" ON "Vendor"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_complianceStatus_idx" ON "Vendor"("tenantId", "complianceStatus");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_dataClassification_idx" ON "Vendor"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_isApproved_idx" ON "Vendor"("tenantId", "isApproved");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_isPreferred_idx" ON "Vendor"("tenantId", "isPreferred");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_riskRating_idx" ON "Vendor"("tenantId", "riskRating");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_status_idx" ON "Vendor"("tenantId", "status");

-- CreateIndex
CREATE INDEX "Vendor_tenantId_vendorType_idx" ON "Vendor"("tenantId", "vendorType");

-- CreateIndex
CREATE UNIQUE INDEX "Vendor_tenantId_id_key" ON "Vendor"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "Vendor_tenantId_primaryEmail_key" ON "Vendor"("tenantId", "primaryEmail");

-- CreateIndex
CREATE UNIQUE INDEX "Vendor_tenantId_vendorName_key" ON "Vendor"("tenantId", "vendorName");

-- CreateIndex
CREATE UNIQUE INDEX "Vendor_tenantId_vendorNumber_key" ON "Vendor"("tenantId", "vendorNumber");

-- CreateIndex
CREATE INDEX "VendorContact_createdAt_idx" ON "VendorContact" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_auditCorrelationId_idx" ON "VendorContact"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_contactType_idx" ON "VendorContact"("tenantId", "contactType");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_dataClassification_idx" ON "VendorContact"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_deletedAt_idx" ON "VendorContact"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_isActive_idx" ON "VendorContact"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_isPrimary_idx" ON "VendorContact"("tenantId", "isPrimary");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_status_idx" ON "VendorContact"("tenantId", "status");

-- CreateIndex
CREATE INDEX "VendorContact_tenantId_vendorId_idx" ON "VendorContact"("tenantId", "vendorId");

-- CreateIndex
CREATE UNIQUE INDEX "VendorContact_tenantId_id_key" ON "VendorContact"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "VendorContact_tenantId_vendorId_contactType_key" ON "VendorContact"("tenantId", "vendorId", "contactType");

-- CreateIndex
CREATE INDEX "VendorDocument_createdAt_idx" ON "VendorDocument" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_auditCorrelationId_idx" ON "VendorDocument"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_dataClassification_idx" ON "VendorDocument"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_deletedAt_idx" ON "VendorDocument"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_documentType_idx" ON "VendorDocument"("tenantId", "documentType");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_expirationDate_idx" ON "VendorDocument"("tenantId", "expirationDate");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_isRequired_idx" ON "VendorDocument"("tenantId", "isRequired");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_status_idx" ON "VendorDocument"("tenantId", "status");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_vendorId_idx" ON "VendorDocument"("tenantId", "vendorId");

-- CreateIndex
CREATE INDEX "VendorDocument_tenantId_verificationStatus_idx" ON "VendorDocument"("tenantId", "verificationStatus");

-- CreateIndex
CREATE UNIQUE INDEX "VendorDocument_tenantId_id_key" ON "VendorDocument"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "VendorDocument_tenantId_vendorId_documentType_documentNumbe_key" ON "VendorDocument"("tenantId", "vendorId", "documentType", "documentNumber");

-- CreateIndex
CREATE INDEX "WBSItem_createdAt_idx" ON "WBSItem" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_auditCorrelationId_idx" ON "WBSItem"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_dataClassification_idx" ON "WBSItem"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_deletedAt_idx" ON "WBSItem"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_level_idx" ON "WBSItem"("tenantId", "level");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_parentId_idx" ON "WBSItem"("tenantId", "parentId");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_phaseId_idx" ON "WBSItem"("tenantId", "phaseId");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_projectId_idx" ON "WBSItem"("tenantId", "projectId");

-- CreateIndex
CREATE INDEX "WBSItem_tenantId_status_idx" ON "WBSItem"("tenantId", "status");

-- CreateIndex
CREATE UNIQUE INDEX "WBSItem_tenantId_id_key" ON "WBSItem"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "WBSItem_tenantId_projectId_code_key" ON "WBSItem"("tenantId", "projectId", "code");

-- CreateIndex
CREATE UNIQUE INDEX "Worker_employeeNumber_key" ON "Worker"("employeeNumber");

-- CreateIndex
CREATE INDEX "Worker_createdAt_idx" ON "Worker" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "Worker_tenantId_auditCorrelationId_idx" ON "Worker"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "Worker_tenantId_dataClassification_idx" ON "Worker"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "Worker_tenantId_exemptStatus_idx" ON "Worker"("tenantId", "exemptStatus");

-- CreateIndex
CREATE INDEX "Worker_tenantId_hireDate_idx" ON "Worker"("tenantId", "hireDate");

-- CreateIndex
CREATE INDEX "Worker_tenantId_isActive_idx" ON "Worker"("tenantId", "isActive");

-- CreateIndex
CREATE INDEX "Worker_tenantId_personId_idx" ON "Worker"("tenantId", "personId");

-- CreateIndex
CREATE INDEX "Worker_tenantId_unionMember_idx" ON "Worker"("tenantId", "unionMember");

-- CreateIndex
CREATE INDEX "Worker_tenantId_workerType_idx" ON "Worker"("tenantId", "workerType");

-- CreateIndex
CREATE UNIQUE INDEX "Worker_tenantId_employeeNumber_key" ON "Worker"("tenantId", "employeeNumber");

-- CreateIndex
CREATE UNIQUE INDEX "Worker_tenantId_id_key" ON "Worker"("tenantId", "id");

-- CreateIndex
CREATE INDEX "external_data_policies_createdAt_idx" ON "external_data_policies" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_auditCorrelationId_idx" ON "external_data_policies"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_dataClassification_idx" ON "external_data_policies"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_deletedAt_idx" ON "external_data_policies"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_policyPriority_executionOrd_idx" ON "external_data_policies"("tenantId", "policyPriority", "executionOrder");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_policyType_restrictionLevel_idx" ON "external_data_policies"("tenantId", "policyType", "restrictionLevel");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_riskLevel_complianceFramewo_idx" ON "external_data_policies"("tenantId", "riskLevel", "complianceFramework");

-- CreateIndex
CREATE INDEX "external_data_policies_tenantId_status_isActive_idx" ON "external_data_policies"("tenantId", "status", "isActive");

-- CreateIndex
CREATE UNIQUE INDEX "external_data_policies_tenantId_id_key" ON "external_data_policies"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "external_data_policies_tenantId_policyName_key" ON "external_data_policies"("tenantId", "policyName");

-- CreateIndex
CREATE INDEX "external_share_audits_createdAt_idx" ON "external_share_audits" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_auditCorrelationId_idx" ON "external_share_audits"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_businessEntityType_businessE_idx" ON "external_share_audits"("tenantId", "businessEntityType", "businessEntityId");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_dataClassification_idx" ON "external_share_audits"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_deletedAt_idx" ON "external_share_audits"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_eventType_createdAt_idx" ON "external_share_audits"("tenantId", "eventType", "createdAt");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_externalUserEmail_accessGran_idx" ON "external_share_audits"("tenantId", "externalUserEmail", "accessGrantedAt");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_resourceType_resourceId_idx" ON "external_share_audits"("tenantId", "resourceType", "resourceId");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_riskScore_anomalyDetected_idx" ON "external_share_audits"("tenantId", "riskScore", "anomalyDetected");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_securityLevel_accessBlocked_idx" ON "external_share_audits"("tenantId", "securityLevel", "accessBlocked");

-- CreateIndex
CREATE INDEX "external_share_audits_tenantId_shareChannel_integrationId_idx" ON "external_share_audits"("tenantId", "shareChannel", "integrationId");

-- CreateIndex
CREATE UNIQUE INDEX "external_share_audits_tenantId_id_key" ON "external_share_audits"("tenantId", "id");

-- CreateIndex
CREATE INDEX "redaction_rules_createdAt_idx" ON "redaction_rules" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_auditCorrelationId_idx" ON "redaction_rules"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_complianceType_riskLevel_idx" ON "redaction_rules"("tenantId", "complianceType", "riskLevel");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_dataClassification_idx" ON "redaction_rules"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_deletedAt_idx" ON "redaction_rules"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_ruleType_executionOrder_idx" ON "redaction_rules"("tenantId", "ruleType", "executionOrder");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_status_isActive_idx" ON "redaction_rules"("tenantId", "status", "isActive");

-- CreateIndex
CREATE INDEX "redaction_rules_tenantId_useAIDetection_aiModelProvider_idx" ON "redaction_rules"("tenantId", "useAIDetection", "aiModelProvider");

-- CreateIndex
CREATE UNIQUE INDEX "redaction_rules_tenantId_id_key" ON "redaction_rules"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "redaction_rules_tenantId_ruleName_key" ON "redaction_rules"("tenantId", "ruleName");

-- CreateIndex
CREATE INDEX "watermark_policies_createdAt_idx" ON "watermark_policies" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_applyOnShare_applyOnDownload_idx" ON "watermark_policies"("tenantId", "applyOnShare", "applyOnDownload");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_auditCorrelationId_idx" ON "watermark_policies"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_dataClassification_idx" ON "watermark_policies"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_deletedAt_idx" ON "watermark_policies"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_processingPriority_maxFileSize_idx" ON "watermark_policies"("tenantId", "processingPriority", "maxFileSize");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_status_isActive_idx" ON "watermark_policies"("tenantId", "status", "isActive");

-- CreateIndex
CREATE INDEX "watermark_policies_tenantId_watermarkType_position_idx" ON "watermark_policies"("tenantId", "watermarkType", "position");

-- CreateIndex
CREATE UNIQUE INDEX "watermark_policies_tenantId_id_key" ON "watermark_policies"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "watermark_policies_tenantId_policyName_key" ON "watermark_policies"("tenantId", "policyName");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_createdAt_idx" ON "weather_alert_deliveries" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_alertId_deliverySequence_idx" ON "weather_alert_deliveries"("tenantId", "alertId", "deliverySequence");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_auditCorrelationId_idx" ON "weather_alert_deliveries"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_dataClassification_idx" ON "weather_alert_deliveries"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_deletedAt_idx" ON "weather_alert_deliveries"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_deliveredAt_readAt_idx" ON "weather_alert_deliveries"("tenantId", "deliveredAt", "readAt");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_deliveryChannel_targetTyp_idx" ON "weather_alert_deliveries"("tenantId", "deliveryChannel", "targetType");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_deliveryStatus_attemptCou_idx" ON "weather_alert_deliveries"("tenantId", "deliveryStatus", "attemptCount");

-- CreateIndex
CREATE INDEX "weather_alert_deliveries_tenantId_engagementScore_responseT_idx" ON "weather_alert_deliveries"("tenantId", "engagementScore", "responseTime");

-- CreateIndex
CREATE UNIQUE INDEX "weather_alert_deliveries_tenantId_id_key" ON "weather_alert_deliveries"("tenantId", "id");

-- CreateIndex
CREATE INDEX "weather_alerts_createdAt_idx" ON "weather_alerts" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_ackStatus_ackByMemberId_idx" ON "weather_alerts"("tenantId", "ackStatus", "ackByMemberId");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_alertType_riskLevel_idx" ON "weather_alerts"("tenantId", "alertType", "riskLevel");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_auditCorrelationId_idx" ON "weather_alerts"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_dataClassification_idx" ON "weather_alerts"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_deletedAt_idx" ON "weather_alerts"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_entityType_entityId_idx" ON "weather_alerts"("tenantId", "entityType", "entityId");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_projectId_validFrom_idx" ON "weather_alerts"("tenantId", "projectId", "validFrom");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_sourceProvider_issuedAt_idx" ON "weather_alerts"("tenantId", "sourceProvider", "issuedAt");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_status_severity_idx" ON "weather_alerts"("tenantId", "status", "severity");

-- CreateIndex
CREATE INDEX "weather_alerts_tenantId_validTo_closedAt_idx" ON "weather_alerts"("tenantId", "validTo", "closedAt");

-- CreateIndex
CREATE UNIQUE INDEX "weather_alerts_tenantId_entityType_entityId_alertType_valid_key" ON "weather_alerts"("tenantId", "entityType", "entityId", "alertType", "validFrom", "validTo");

-- CreateIndex
CREATE UNIQUE INDEX "weather_alerts_tenantId_id_key" ON "weather_alerts"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "weather_forecast_cache_key_unique" ON "weather_forecast_cache"("cacheKey");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_auditCorrelationId_idx" ON "weather_forecast_cache"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_cacheKey_lastAccessAt_idx" ON "weather_forecast_cache"("cacheKey", "lastAccessAt");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_createdAt_idx" ON "weather_forecast_cache" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_dataClassification_idx" ON "weather_forecast_cache"("dataClassification");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_deletedAt_idx" ON "weather_forecast_cache"("deletedAt");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_forecastTime_expiresAt_idx" ON "weather_forecast_cache"("forecastTime", "expiresAt");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_geohash_validFrom_validTo_idx" ON "weather_forecast_cache"("geohash", "validFrom", "validTo");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_ingestDuration_idx" ON "weather_forecast_cache" USING BRIN ("ingestDuration");

-- CreateIndex
CREATE INDEX "weather_forecast_cache_providerCode_issueTime_idx" ON "weather_forecast_cache"("providerCode", "issueTime");

-- CreateIndex
CREATE UNIQUE INDEX "weather_forecast_cache_geohash_forecastTime_validFrom_valid_key" ON "weather_forecast_cache"("geohash", "forecastTime", "validFrom", "validTo", "providerCode", "dataHash");

-- CreateIndex
CREATE INDEX "weather_incidents_createdAt_idx" ON "weather_incidents" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_auditCorrelationId_idx" ON "weather_incidents"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_dataClassification_idx" ON "weather_incidents"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_deletedAt_idx" ON "weather_incidents"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_entityType_entityId_idx" ON "weather_incidents"("tenantId", "entityType", "entityId");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_incidentType_weatherCondition_idx" ON "weather_incidents"("tenantId", "incidentType", "weatherCondition");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_occurredAt_impactCost_idx" ON "weather_incidents"("tenantId", "occurredAt", "impactCost");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_projectId_occurredAt_idx" ON "weather_incidents"("tenantId", "projectId", "occurredAt");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_relatedAlertId_alertAccuracy_idx" ON "weather_incidents"("tenantId", "relatedAlertId", "alertAccuracy");

-- CreateIndex
CREATE INDEX "weather_incidents_tenantId_status_severity_idx" ON "weather_incidents"("tenantId", "status", "severity");

-- CreateIndex
CREATE UNIQUE INDEX "weather_incidents_tenantId_id_key" ON "weather_incidents"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "weather_providers_code_key" ON "weather_providers"("providerCode");

-- CreateIndex
CREATE INDEX "weather_providers_auditCorrelationId_idx" ON "weather_providers"("auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_providers_averageLatencyMs_accuracyScore_idx" ON "weather_providers"("averageLatencyMs", "accuracyScore");

-- CreateIndex
CREATE INDEX "weather_providers_createdAt_idx" ON "weather_providers" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_providers_dataClassification_idx" ON "weather_providers"("dataClassification");

-- CreateIndex
CREATE INDEX "weather_providers_deletedAt_idx" ON "weather_providers"("deletedAt");

-- CreateIndex
CREATE INDEX "weather_providers_healthStatus_reliabilityPct_idx" ON "weather_providers"("healthStatus", "reliabilityPct");

-- CreateIndex
CREATE INDEX "weather_providers_status_isActive_idx" ON "weather_providers"("status", "isActive");

-- CreateIndex
CREATE INDEX "weather_risk_factors_createdAt_idx" ON "weather_risk_factors" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_alertType_weatherMetric_idx" ON "weather_risk_factors"("tenantId", "alertType", "weatherMetric");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_auditCorrelationId_idx" ON "weather_risk_factors"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_dataClassification_idx" ON "weather_risk_factors"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_deletedAt_idx" ON "weather_risk_factors"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_effectiveFrom_effectiveTo_idx" ON "weather_risk_factors"("tenantId", "effectiveFrom", "effectiveTo");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_isActive_industry_idx" ON "weather_risk_factors"("tenantId", "isActive", "industry");

-- CreateIndex
CREATE INDEX "weather_risk_factors_tenantId_riskLevel_severity_idx" ON "weather_risk_factors"("tenantId", "riskLevel", "severity");

-- CreateIndex
CREATE UNIQUE INDEX "weather_risk_factors_tenantId_id_key" ON "weather_risk_factors"("tenantId", "id");

-- CreateIndex
CREATE UNIQUE INDEX "weather_risk_factors_tenantId_industry_activityCode_alertTy_key" ON "weather_risk_factors"("tenantId", "industry", "activityCode", "alertType", "weatherMetric");

-- CreateIndex
CREATE INDEX "weather_watches_createdAt_idx" ON "weather_watches" USING BRIN ("createdAt");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_auditCorrelationId_idx" ON "weather_watches"("tenantId", "auditCorrelationId");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_dataClassification_idx" ON "weather_watches"("tenantId", "dataClassification");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_deletedAt_idx" ON "weather_watches"("tenantId", "deletedAt");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_isActive_entityType_idx" ON "weather_watches"("tenantId", "isActive", "entityType");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_minSeverity_alertTypes_idx" ON "weather_watches"("tenantId", "minSeverity", "alertTypes");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_projectId_isActive_idx" ON "weather_watches"("tenantId", "projectId", "isActive");

-- CreateIndex
CREATE INDEX "weather_watches_tenantId_snoozeUntil_quietHours_idx" ON "weather_watches"("tenantId", "snoozeUntil", "quietHours");

-- CreateIndex
CREATE UNIQUE INDEX "weather_watches_tenantId_entityType_entityId_key" ON "weather_watches"("tenantId", "entityType", "entityId");

-- CreateIndex
CREATE UNIQUE INDEX "weather_watches_tenantId_id_key" ON "weather_watches"("tenantId", "id");

-- AddForeignKey
ALTER TABLE "AIAction" ADD CONSTRAINT "AIAction_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIActionRun" ADD CONSTRAINT "AIActionRun_actionId_fkey" FOREIGN KEY ("actionId") REFERENCES "AIAction"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIActionRun" ADD CONSTRAINT "AIActionRun_jobId_fkey" FOREIGN KEY ("jobId") REFERENCES "AIJob"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIActionRun" ADD CONSTRAINT "AIActionRun_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIAssistantProfile" ADD CONSTRAINT "AIAssistantProfile_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIDocumentChunk" ADD CONSTRAINT "AIDocumentChunk_documentIndexId_fkey" FOREIGN KEY ("documentIndexId") REFERENCES "AIDocumentIndex"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIDocumentChunk" ADD CONSTRAINT "AIDocumentChunk_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIDocumentIndex" ADD CONSTRAINT "AIDocumentIndex_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIEmbedding" ADD CONSTRAINT "AIEmbedding_chunkId_fkey" FOREIGN KEY ("chunkId") REFERENCES "AIDocumentChunk"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIEmbedding" ADD CONSTRAINT "AIEmbedding_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIInsight" ADD CONSTRAINT "AIInsight_artifactId_fkey" FOREIGN KEY ("artifactId") REFERENCES "AIJobArtifact"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIInsight" ADD CONSTRAINT "AIInsight_jobId_fkey" FOREIGN KEY ("jobId") REFERENCES "AIJob"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIInsight" ADD CONSTRAINT "AIInsight_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIInsightFeedback" ADD CONSTRAINT "AIInsightFeedback_insightId_fkey" FOREIGN KEY ("insightId") REFERENCES "AIInsight"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIInsightFeedback" ADD CONSTRAINT "AIInsightFeedback_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJob" ADD CONSTRAINT "AIJob_parentJobId_fkey" FOREIGN KEY ("parentJobId") REFERENCES "AIJob"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJob" ADD CONSTRAINT "AIJob_promptTemplateId_fkey" FOREIGN KEY ("promptTemplateId") REFERENCES "AIPromptTemplate"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJob" ADD CONSTRAINT "AIJob_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJobArtifact" ADD CONSTRAINT "AIJobArtifact_jobId_fkey" FOREIGN KEY ("jobId") REFERENCES "AIJob"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJobArtifact" ADD CONSTRAINT "AIJobArtifact_previousVersionId_fkey" FOREIGN KEY ("previousVersionId") REFERENCES "AIJobArtifact"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIJobArtifact" ADD CONSTRAINT "AIJobArtifact_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPlaybook" ADD CONSTRAINT "AIPlaybook_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPlaybookStep" ADD CONSTRAINT "AIPlaybookStep_playbookId_fkey" FOREIGN KEY ("playbookId") REFERENCES "AIPlaybook"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPlaybookStep" ADD CONSTRAINT "AIPlaybookStep_promptTemplateId_fkey" FOREIGN KEY ("promptTemplateId") REFERENCES "AIPromptTemplate"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPlaybookStep" ADD CONSTRAINT "AIPlaybookStep_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPromptTemplate" ADD CONSTRAINT "AIPromptTemplate_baseTemplateId_fkey" FOREIGN KEY ("baseTemplateId") REFERENCES "AIPromptTemplate"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPromptTemplate" ADD CONSTRAINT "AIPromptTemplate_parentTemplateId_fkey" FOREIGN KEY ("parentTemplateId") REFERENCES "AIPromptTemplate"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPromptTemplate" ADD CONSTRAINT "AIPromptTemplate_previousVersionId_fkey" FOREIGN KEY ("previousVersionId") REFERENCES "AIPromptTemplate"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AIPromptTemplate" ADD CONSTRAINT "AIPromptTemplate_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBill" ADD CONSTRAINT "APBill_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBill" ADD CONSTRAINT "APBill_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBill" ADD CONSTRAINT "APBill_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBill" ADD CONSTRAINT "APBill_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBill" ADD CONSTRAINT "APBill_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBillLine" ADD CONSTRAINT "APBillLine_tenantId_apBillId_fkey" FOREIGN KEY ("tenantId", "apBillId") REFERENCES "APBill"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBillLine" ADD CONSTRAINT "APBillLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBillLine" ADD CONSTRAINT "APBillLine_tenantId_goodsReceiptLineId_fkey" FOREIGN KEY ("tenantId", "goodsReceiptLineId") REFERENCES "GoodsReceiptLine"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBillLine" ADD CONSTRAINT "APBillLine_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "APBillLine" ADD CONSTRAINT "APBillLine_tenantId_purchaseOrderLineId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderLineId") REFERENCES "PurchaseOrderLine"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AbsenceBalance" ADD CONSTRAINT "AbsenceBalance_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AbsenceBalance" ADD CONSTRAINT "AbsenceBalance_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Account" ADD CONSTRAINT "Account_tenantId_leadId_fkey" FOREIGN KEY ("tenantId", "leadId") REFERENCES "Lead"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AccountAddress" ADD CONSTRAINT "AccountAddress_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Activity" ADD CONSTRAINT "Activity_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Activity" ADD CONSTRAINT "Activity_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Activity" ADD CONSTRAINT "Activity_tenantId_leadId_fkey" FOREIGN KEY ("tenantId", "leadId") REFERENCES "Lead"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Activity" ADD CONSTRAINT "Activity_tenantId_opportunityId_fkey" FOREIGN KEY ("tenantId", "opportunityId") REFERENCES "Opportunity"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Activity" ADD CONSTRAINT "Activity_tenantId_quoteId_fkey" FOREIGN KEY ("tenantId", "quoteId") REFERENCES "Quote"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ActivityAttachment" ADD CONSTRAINT "ActivityAttachment_tenantId_activityId_fkey" FOREIGN KEY ("tenantId", "activityId") REFERENCES "Activity"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCase" ADD CONSTRAINT "AnomalyCase_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCase" ADD CONSTRAINT "AnomalyCase_fraudPolicyId_fkey" FOREIGN KEY ("fraudPolicyId") REFERENCES "FraudPolicy"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCase" ADD CONSTRAINT "AnomalyCase_anomalySignalId_fkey" FOREIGN KEY ("anomalySignalId") REFERENCES "AnomalySignal"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCase" ADD CONSTRAINT "AnomalyCase_parentCaseId_fkey" FOREIGN KEY ("parentCaseId") REFERENCES "AnomalyCase"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCaseAction" ADD CONSTRAINT "AnomalyCaseAction_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalyCaseAction" ADD CONSTRAINT "AnomalyCaseAction_anomalyCaseId_fkey" FOREIGN KEY ("anomalyCaseId") REFERENCES "AnomalyCase"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalySignal" ADD CONSTRAINT "AnomalySignal_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalySignal" ADD CONSTRAINT "AnomalySignal_parentSignalId_fkey" FOREIGN KEY ("parentSignalId") REFERENCES "AnomalySignal"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalySignalFeature" ADD CONSTRAINT "AnomalySignalFeature_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnomalySignalFeature" ADD CONSTRAINT "AnomalySignalFeature_anomalySignalId_fkey" FOREIGN KEY ("anomalySignalId") REFERENCES "AnomalySignal"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApiKey" ADD CONSTRAINT "ApiKey_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApiKey" ADD CONSTRAINT "ApiKey_revokedByMemberId_fkey" FOREIGN KEY ("revokedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApiKey" ADD CONSTRAINT "ApiKey_rotatedFromKeyId_fkey" FOREIGN KEY ("rotatedFromKeyId") REFERENCES "ApiKey"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApiKey" ADD CONSTRAINT "ApiKey_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApiKey" ADD CONSTRAINT "ApiKey_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalDecision" ADD CONSTRAINT "ApprovalDecision_tenantId_approvalRequestId_fkey" FOREIGN KEY ("tenantId", "approvalRequestId") REFERENCES "ApprovalRequest"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalDecision" ADD CONSTRAINT "ApprovalDecision_tenantId_approverId_fkey" FOREIGN KEY ("tenantId", "approverId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalDecision" ADD CONSTRAINT "ApprovalDecision_tenantId_delegatedFromId_fkey" FOREIGN KEY ("tenantId", "delegatedFromId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalDecision" ADD CONSTRAINT "ApprovalDecision_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalDecision" ADD CONSTRAINT "ApprovalDecision_tenantId_reasonCodeId_fkey" FOREIGN KEY ("tenantId", "reasonCodeId") REFERENCES "ReasonCode"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_tenantId_approvalRuleId_fkey" FOREIGN KEY ("tenantId", "approvalRuleId") REFERENCES "ApprovalRule"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_tenantId_currentApprover_fkey" FOREIGN KEY ("tenantId", "currentApprover") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_tenantId_finalDecisionBy_fkey" FOREIGN KEY ("tenantId", "finalDecisionBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_tenantId_submittedById_fkey" FOREIGN KEY ("tenantId", "submittedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRequest" ADD CONSTRAINT "ApprovalRequest_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRule" ADD CONSTRAINT "ApprovalRule_tenantId_customerId_fkey" FOREIGN KEY ("tenantId", "customerId") REFERENCES "Account"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRule" ADD CONSTRAINT "ApprovalRule_tenantId_departmentId_fkey" FOREIGN KEY ("tenantId", "departmentId") REFERENCES "Department"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRule" ADD CONSTRAINT "ApprovalRule_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRule" ADD CONSTRAINT "ApprovalRule_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ApprovalRule" ADD CONSTRAINT "ApprovalRule_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AssetAssignment" ADD CONSTRAINT "AssetAssignment_tenantId_assetId_fkey" FOREIGN KEY ("tenantId", "assetId") REFERENCES "Asset"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AssetDepreciation" ADD CONSTRAINT "AssetDepreciation_tenantId_assetId_fkey" FOREIGN KEY ("tenantId", "assetId") REFERENCES "Asset"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AssetDocument" ADD CONSTRAINT "AssetDocument_tenantId_assetId_fkey" FOREIGN KEY ("tenantId", "assetId") REFERENCES "Asset"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AssetMaintenance" ADD CONSTRAINT "AssetMaintenance_tenantId_assetId_fkey" FOREIGN KEY ("tenantId", "assetId") REFERENCES "Asset"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AssetMeterReading" ADD CONSTRAINT "AssetMeterReading_tenantId_assetId_fkey" FOREIGN KEY ("tenantId", "assetId") REFERENCES "Asset"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Attachment" ADD CONSTRAINT "Attachment_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Attachment" ADD CONSTRAINT "Attachment_tenantId_attachedById_fkey" FOREIGN KEY ("tenantId", "attachedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Attachment" ADD CONSTRAINT "Attachment_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Attachment" ADD CONSTRAINT "Attachment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Attachment" ADD CONSTRAINT "Attachment_tenantId_parentAttachmentId_fkey" FOREIGN KEY ("tenantId", "parentAttachmentId") REFERENCES "Attachment"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AttachmentLink" ADD CONSTRAINT "AttachmentLink_tenantId_attachmentId_fkey" FOREIGN KEY ("tenantId", "attachmentId") REFERENCES "Attachment"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AttachmentLink" ADD CONSTRAINT "AttachmentLink_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AttachmentLink" ADD CONSTRAINT "AttachmentLink_tenantId_linkedById_fkey" FOREIGN KEY ("tenantId", "linkedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AttachmentLink" ADD CONSTRAINT "AttachmentLink_tenantId_unlinkedById_fkey" FOREIGN KEY ("tenantId", "unlinkedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AuthFactor" ADD CONSTRAINT "AuthFactor_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AuthFactor" ADD CONSTRAINT "AuthFactor_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AuthFactor" ADD CONSTRAINT "AuthFactor_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BankStatementLine" ADD CONSTRAINT "BankStatementLine_tenantId_bankAccountId_fkey" FOREIGN KEY ("tenantId", "bankAccountId") REFERENCES "BankAccount"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BankStatementLine" ADD CONSTRAINT "BankStatementLine_tenantId_reconciliationId_fkey" FOREIGN KEY ("tenantId", "reconciliationId") REFERENCES "Reconciliation"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BenefitDependent" ADD CONSTRAINT "BenefitDependent_tenantId_benefitEnrollmentId_fkey" FOREIGN KEY ("tenantId", "benefitEnrollmentId") REFERENCES "BenefitEnrollment"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BenefitDependent" ADD CONSTRAINT "BenefitDependent_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BenefitEnrollment" ADD CONSTRAINT "BenefitEnrollment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BenefitEnrollment" ADD CONSTRAINT "BenefitEnrollment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Bid" ADD CONSTRAINT "Bid_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Bid" ADD CONSTRAINT "Bid_tenantId_opportunityId_fkey" FOREIGN KEY ("tenantId", "opportunityId") REFERENCES "Opportunity"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BidComparison" ADD CONSTRAINT "BidComparison_tenantId_bidId_fkey" FOREIGN KEY ("tenantId", "bidId") REFERENCES "Bid"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BidInvitation" ADD CONSTRAINT "BidInvitation_tenantId_bidId_fkey" FOREIGN KEY ("tenantId", "bidId") REFERENCES "Bid"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BidSubmission" ADD CONSTRAINT "BidSubmission_tenantId_bidId_fkey" FOREIGN KEY ("tenantId", "bidId") REFERENCES "Bid"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BidSubmission" ADD CONSTRAINT "BidSubmission_tenantId_invitationId_fkey" FOREIGN KEY ("tenantId", "invitationId") REFERENCES "BidInvitation"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillApproval" ADD CONSTRAINT "BillApproval_tenantId_apBillId_fkey" FOREIGN KEY ("tenantId", "apBillId") REFERENCES "APBill"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillApproval" ADD CONSTRAINT "BillApproval_tenantId_approverId_fkey" FOREIGN KEY ("tenantId", "approverId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillApproval" ADD CONSTRAINT "BillApproval_tenantId_delegatedFrom_fkey" FOREIGN KEY ("tenantId", "delegatedFrom") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillApproval" ADD CONSTRAINT "BillApproval_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillPayment" ADD CONSTRAINT "BillPayment_tenantId_apBillId_fkey" FOREIGN KEY ("tenantId", "apBillId") REFERENCES "APBill"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillPayment" ADD CONSTRAINT "BillPayment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillPayment" ADD CONSTRAINT "BillPayment_tenantId_originalBillPaymentId_fkey" FOREIGN KEY ("tenantId", "originalBillPaymentId") REFERENCES "BillPayment"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillPayment" ADD CONSTRAINT "BillPayment_tenantId_paymentId_fkey" FOREIGN KEY ("tenantId", "paymentId") REFERENCES "Payment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "BillPayment" ADD CONSTRAINT "BillPayment_tenantId_reversedById_fkey" FOREIGN KEY ("tenantId", "reversedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Certification" ADD CONSTRAINT "Certification_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Certification" ADD CONSTRAINT "Certification_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Certification" ADD CONSTRAINT "Certification_tenantId_hrReviewedById_fkey" FOREIGN KEY ("tenantId", "hrReviewedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Certification" ADD CONSTRAINT "Certification_tenantId_verifiedById_fkey" FOREIGN KEY ("tenantId", "verifiedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Certification" ADD CONSTRAINT "Certification_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrder" ADD CONSTRAINT "ChangeOrder_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrder" ADD CONSTRAINT "ChangeOrder_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrder" ADD CONSTRAINT "ChangeOrder_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrderApproval" ADD CONSTRAINT "ChangeOrderApproval_tenantId_changeOrderId_fkey" FOREIGN KEY ("tenantId", "changeOrderId") REFERENCES "ChangeOrder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrderDocument" ADD CONSTRAINT "ChangeOrderDocument_tenantId_changeOrderId_fkey" FOREIGN KEY ("tenantId", "changeOrderId") REFERENCES "ChangeOrder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChangeOrderLine" ADD CONSTRAINT "ChangeOrderLine_tenantId_changeOrderId_fkey" FOREIGN KEY ("tenantId", "changeOrderId") REFERENCES "ChangeOrder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_archivedById_fkey" FOREIGN KEY ("tenantId", "archivedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_creatorId_fkey" FOREIGN KEY ("tenantId", "creatorId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_departmentId_fkey" FOREIGN KEY ("tenantId", "departmentId") REFERENCES "Department"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_opportunityId_fkey" FOREIGN KEY ("tenantId", "opportunityId") REFERENCES "Opportunity"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_ownerId_fkey" FOREIGN KEY ("tenantId", "ownerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_pinnedMessageId_fkey" FOREIGN KEY ("tenantId", "pinnedMessageId") REFERENCES "Message"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Channel" ADD CONSTRAINT "Channel_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_bannedById_fkey" FOREIGN KEY ("tenantId", "bannedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_channelId_fkey" FOREIGN KEY ("tenantId", "channelId") REFERENCES "Channel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_invitedById_fkey" FOREIGN KEY ("tenantId", "invitedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_kickedById_fkey" FOREIGN KEY ("tenantId", "kickedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChannelMember" ADD CONSTRAINT "ChannelMember_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Chargeback" ADD CONSTRAINT "Chargeback_tenantId_assignedToId_fkey" FOREIGN KEY ("tenantId", "assignedToId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Chargeback" ADD CONSTRAINT "Chargeback_tenantId_paymentId_fkey" FOREIGN KEY ("tenantId", "paymentId") REFERENCES "Payment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Chargeback" ADD CONSTRAINT "Chargeback_tenantId_resolvedById_fkey" FOREIGN KEY ("tenantId", "resolvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChargebackEvidence" ADD CONSTRAINT "ChargebackEvidence_tenantId_chargebackId_fkey" FOREIGN KEY ("tenantId", "chargebackId") REFERENCES "Chargeback"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ChargebackEvidence" ADD CONSTRAINT "ChargebackEvidence_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClockInClockOut" ADD CONSTRAINT "ClockInClockOut_tenantId_employeeId_fkey" FOREIGN KEY ("tenantId", "employeeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClockInClockOut" ADD CONSTRAINT "ClockInClockOut_tenantId_timesheetId_fkey" FOREIGN KEY ("tenantId", "timesheetId") REFERENCES "Timesheet"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CompensationComponent" ADD CONSTRAINT "CompensationComponent_tenantId_compensationPlanId_fkey" FOREIGN KEY ("tenantId", "compensationPlanId") REFERENCES "CompensationPlan"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CompensationComponent" ADD CONSTRAINT "CompensationComponent_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CompensationPlan" ADD CONSTRAINT "CompensationPlan_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CompensationPlan" ADD CONSTRAINT "CompensationPlan_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Contact" ADD CONSTRAINT "Contact_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Contract" ADD CONSTRAINT "Contract_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CostCenter" ADD CONSTRAINT "CostCenter_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CostCenter" ADD CONSTRAINT "CostCenter_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CostCenter" ADD CONSTRAINT "CostCenter_tenantId_parentCostCenterId_fkey" FOREIGN KEY ("tenantId", "parentCostCenterId") REFERENCES "CostCenter"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_approvedByMemberId_fkey" FOREIGN KEY ("tenantId", "approvedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemo" ADD CONSTRAINT "CreditMemo_tenantId_sourceInvoiceId_fkey" FOREIGN KEY ("tenantId", "sourceInvoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemoLine" ADD CONSTRAINT "CreditMemoLine_tenantId_creditMemoId_fkey" FOREIGN KEY ("tenantId", "creditMemoId") REFERENCES "CreditMemo"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemoLine" ADD CONSTRAINT "CreditMemoLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CreditMemoLine" ADD CONSTRAINT "CreditMemoLine_tenantId_sourceInvoiceLineId_fkey" FOREIGN KEY ("tenantId", "sourceInvoiceLineId") REFERENCES "InvoiceLineItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DailyLog" ADD CONSTRAINT "DailyLog_tenantId_authorId_fkey" FOREIGN KEY ("tenantId", "authorId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DailyLog" ADD CONSTRAINT "DailyLog_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DelegationConstraint" ADD CONSTRAINT "DelegationConstraint_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DelegationConstraint" ADD CONSTRAINT "DelegationConstraint_delegationGrantId_fkey" FOREIGN KEY ("delegationGrantId") REFERENCES "DelegationGrant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DelegationGrant" ADD CONSTRAINT "DelegationGrant_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DelegationGrant" ADD CONSTRAINT "DelegationGrant_parentDelegationId_fkey" FOREIGN KEY ("parentDelegationId") REFERENCES "DelegationGrant"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_assistantManagerId_fkey" FOREIGN KEY ("tenantId", "assistantManagerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_budgetOwnerId_fkey" FOREIGN KEY ("tenantId", "budgetOwnerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_costCenterId_fkey" FOREIGN KEY ("tenantId", "costCenterId") REFERENCES "CostCenter"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_parentDepartmentId_fkey" FOREIGN KEY ("tenantId", "parentDepartmentId") REFERENCES "Department"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Department" ADD CONSTRAINT "Department_tenantId_primaryLocationId_fkey" FOREIGN KEY ("tenantId", "primaryLocationId") REFERENCES "Location"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectChat" ADD CONSTRAINT "DirectChat_tenantId_archivedById_fkey" FOREIGN KEY ("tenantId", "archivedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectChat" ADD CONSTRAINT "DirectChat_tenantId_escalatedFromChannelId_fkey" FOREIGN KEY ("tenantId", "escalatedFromChannelId") REFERENCES "Channel"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectChat" ADD CONSTRAINT "DirectChat_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectChat" ADD CONSTRAINT "DirectChat_tenantId_participant1Id_fkey" FOREIGN KEY ("tenantId", "participant1Id") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectChat" ADD CONSTRAINT "DirectChat_tenantId_participant2Id_fkey" FOREIGN KEY ("tenantId", "participant2Id") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_directChatId_fkey" FOREIGN KEY ("tenantId", "directChatId") REFERENCES "DirectChat"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_flaggedById_fkey" FOREIGN KEY ("tenantId", "flaggedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_forwardedFromId_fkey" FOREIGN KEY ("tenantId", "forwardedFromId") REFERENCES "DirectMessage"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_quotedMessageId_fkey" FOREIGN KEY ("tenantId", "quotedMessageId") REFERENCES "DirectMessage"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_receiverId_fkey" FOREIGN KEY ("tenantId", "receiverId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_replyToMessageId_fkey" FOREIGN KEY ("tenantId", "replyToMessageId") REFERENCES "DirectMessage"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessage" ADD CONSTRAINT "DirectMessage_tenantId_senderId_fkey" FOREIGN KEY ("tenantId", "senderId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessageRead" ADD CONSTRAINT "DirectMessageRead_tenantId_directMessageId_fkey" FOREIGN KEY ("tenantId", "directMessageId") REFERENCES "DirectMessage"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessageRead" ADD CONSTRAINT "DirectMessageRead_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DirectMessageRead" ADD CONSTRAINT "DirectMessageRead_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DunningNotice" ADD CONSTRAINT "DunningNotice_tenantId_assignedToMemberId_fkey" FOREIGN KEY ("tenantId", "assignedToMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DunningNotice" ADD CONSTRAINT "DunningNotice_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DunningNotice" ADD CONSTRAINT "DunningNotice_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "DunningNotice" ADD CONSTRAINT "DunningNotice_tenantId_sentByMemberId_fkey" FOREIGN KEY ("tenantId", "sentByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureEnvelope" ADD CONSTRAINT "ESignatureEnvelope_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureEnvelope" ADD CONSTRAINT "ESignatureEnvelope_tenantId_primaryDocumentId_fkey" FOREIGN KEY ("tenantId", "primaryDocumentId") REFERENCES "FileObject"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureEnvelope" ADD CONSTRAINT "ESignatureEnvelope_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureEnvelope" ADD CONSTRAINT "ESignatureEnvelope_tenantId_senderMemberId_fkey" FOREIGN KEY ("tenantId", "senderMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureRecipient" ADD CONSTRAINT "ESignatureRecipient_tenantId_envelopeId_fkey" FOREIGN KEY ("tenantId", "envelopeId") REFERENCES "ESignatureEnvelope"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureRecipient" ADD CONSTRAINT "ESignatureRecipient_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ESignatureRecipient" ADD CONSTRAINT "ESignatureRecipient_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Employment" ADD CONSTRAINT "Employment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Employment" ADD CONSTRAINT "Employment_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Worker"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Employment" ADD CONSTRAINT "Employment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_approvedByMemberId_fkey" FOREIGN KEY ("tenantId", "approvedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_approvedInvoiceId_fkey" FOREIGN KEY ("tenantId", "approvedInvoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_approvedProjectId_fkey" FOREIGN KEY ("tenantId", "approvedProjectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_clientAccountId_fkey" FOREIGN KEY ("tenantId", "clientAccountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_clientContactId_fkey" FOREIGN KEY ("tenantId", "clientContactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_contractTemplateId_fkey" FOREIGN KEY ("tenantId", "contractTemplateId") REFERENCES "ContractTemplate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_finalApprovedByMemberId_fkey" FOREIGN KEY ("tenantId", "finalApprovedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_tenantId_termsTemplateId_fkey" FOREIGN KEY ("tenantId", "termsTemplateId") REFERENCES "TermsTemplate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Estimate" ADD CONSTRAINT "Estimate_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateApproval" ADD CONSTRAINT "EstimateApproval_tenantId_approvalRequestId_fkey" FOREIGN KEY ("tenantId", "approvalRequestId") REFERENCES "ApprovalRequest"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateApproval" ADD CONSTRAINT "EstimateApproval_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateAttachment" ADD CONSTRAINT "EstimateAttachment_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateAttachment" ADD CONSTRAINT "EstimateAttachment_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateAttachment" ADD CONSTRAINT "EstimateAttachment_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateComment" ADD CONSTRAINT "EstimateComment_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateDiscount" ADD CONSTRAINT "EstimateDiscount_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateHistoryEvent" ADD CONSTRAINT "EstimateHistoryEvent_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateLineItem" ADD CONSTRAINT "EstimateLineItem_priceListItemId_fkey" FOREIGN KEY ("priceListItemId") REFERENCES "PriceListItem"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateLineItem" ADD CONSTRAINT "EstimateLineItem_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateLineItem" ADD CONSTRAINT "EstimateLineItem_tenantId_purchaseOrderLineId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderLineId") REFERENCES "PurchaseOrderLine"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateLineItem" ADD CONSTRAINT "EstimateLineItem_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateRevision" ADD CONSTRAINT "EstimateRevision_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateTax" ADD CONSTRAINT "EstimateTax_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EstimateTerm" ADD CONSTRAINT "EstimateTerm_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExpenseApproval" ADD CONSTRAINT "ExpenseApproval_tenantId_approverId_fkey" FOREIGN KEY ("tenantId", "approverId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExpenseApproval" ADD CONSTRAINT "ExpenseApproval_tenantId_expenseReportId_fkey" FOREIGN KEY ("tenantId", "expenseReportId") REFERENCES "ExpenseReport"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExpenseLine" ADD CONSTRAINT "ExpenseLine_tenantId_expenseReportId_fkey" FOREIGN KEY ("tenantId", "expenseReportId") REFERENCES "ExpenseReport"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExpenseReceipt" ADD CONSTRAINT "ExpenseReceipt_expenseId_fkey" FOREIGN KEY ("expenseId") REFERENCES "Expense"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExpenseReceipt" ADD CONSTRAINT "ExpenseReceipt_tenantId_expenseReportId_fkey" FOREIGN KEY ("tenantId", "expenseReportId") REFERENCES "ExpenseReport"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExportArtifact" ADD CONSTRAINT "ExportArtifact_tenantId_jobId_fkey" FOREIGN KEY ("tenantId", "jobId") REFERENCES "ExportJob"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExportJob" ADD CONSTRAINT "ExportJob_tenantId_reportDefinitionId_fkey" FOREIGN KEY ("tenantId", "reportDefinitionId") REFERENCES "ReportDefinition"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExportJob" ADD CONSTRAINT "ExportJob_tenantId_dashboardDefinitionId_fkey" FOREIGN KEY ("tenantId", "dashboardDefinitionId") REFERENCES "DashboardDefinition"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_channelId_fkey" FOREIGN KEY ("tenantId", "channelId") REFERENCES "Channel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_createdById_fkey" FOREIGN KEY ("tenantId", "createdById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_messageId_fkey" FOREIGN KEY ("tenantId", "messageId") REFERENCES "Message"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ExternalShareLink" ADD CONSTRAINT "ExternalShareLink_tenantId_revokedById_fkey" FOREIGN KEY ("tenantId", "revokedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FileObject" ADD CONSTRAINT "FileObject_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FileObject" ADD CONSTRAINT "FileObject_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FileObject" ADD CONSTRAINT "FileObject_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicy" ADD CONSTRAINT "FraudPolicy_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicyRule" ADD CONSTRAINT "FraudPolicyRule_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicyRule" ADD CONSTRAINT "FraudPolicyRule_fraudPolicyId_fkey" FOREIGN KEY ("fraudPolicyId") REFERENCES "FraudPolicy"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicyRule" ADD CONSTRAINT "FraudPolicyRule_parentRuleId_fkey" FOREIGN KEY ("parentRuleId") REFERENCES "FraudPolicyRule"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicyScope" ADD CONSTRAINT "FraudPolicyScope_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FraudPolicyScope" ADD CONSTRAINT "FraudPolicyScope_fraudPolicyId_fkey" FOREIGN KEY ("fraudPolicyId") REFERENCES "FraudPolicy"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GLAccount" ADD CONSTRAINT "GLAccount_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GLAccount" ADD CONSTRAINT "GLAccount_tenantId_parentAccountId_fkey" FOREIGN KEY ("tenantId", "parentAccountId") REFERENCES "GLAccount"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_completedBy_fkey" FOREIGN KEY ("tenantId", "completedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_inspectedBy_fkey" FOREIGN KEY ("tenantId", "inspectedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_purchaseOrderId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderId") REFERENCES "PurchaseOrder"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_receivedBy_fkey" FOREIGN KEY ("tenantId", "receivedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceipt" ADD CONSTRAINT "GoodsReceipt_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceiptLine" ADD CONSTRAINT "GoodsReceiptLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceiptLine" ADD CONSTRAINT "GoodsReceiptLine_tenantId_goodsReceiptId_fkey" FOREIGN KEY ("tenantId", "goodsReceiptId") REFERENCES "GoodsReceipt"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceiptLine" ADD CONSTRAINT "GoodsReceiptLine_tenantId_processedBy_fkey" FOREIGN KEY ("tenantId", "processedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "GoodsReceiptLine" ADD CONSTRAINT "GoodsReceiptLine_tenantId_purchaseOrderLineId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderLineId") REFERENCES "PurchaseOrderLine"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Grade" ADD CONSTRAINT "Grade_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Grade" ADD CONSTRAINT "Grade_tenantId_parentGradeId_fkey" FOREIGN KEY ("tenantId", "parentGradeId") REFERENCES "Grade"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "HolidayCalendar" ADD CONSTRAINT "HolidayCalendar_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IdentityProviderConnection" ADD CONSTRAINT "IdentityProviderConnection_identityProviderId_fkey" FOREIGN KEY ("identityProviderId") REFERENCES "IdentityProvider"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IdentityProviderConnection" ADD CONSTRAINT "IdentityProviderConnection_tenantId_configuredByMemberId_fkey" FOREIGN KEY ("tenantId", "configuredByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IdentityProviderConnection" ADD CONSTRAINT "IdentityProviderConnection_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Inspection" ADD CONSTRAINT "Inspection_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InspectionApproval" ADD CONSTRAINT "InspectionApproval_tenantId_inspectionId_fkey" FOREIGN KEY ("tenantId", "inspectionId") REFERENCES "Inspection"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InspectionItem" ADD CONSTRAINT "InspectionItem_tenantId_inspectionId_fkey" FOREIGN KEY ("tenantId", "inspectionId") REFERENCES "Inspection"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationConnection" ADD CONSTRAINT "IntegrationConnection_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationConnection" ADD CONSTRAINT "IntegrationConnection_tenantId_integrationConnectorId_fkey" FOREIGN KEY ("tenantId", "integrationConnectorId") REFERENCES "IntegrationConnector"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationConnector" ADD CONSTRAINT "IntegrationConnector_integrationProviderId_fkey" FOREIGN KEY ("integrationProviderId") REFERENCES "IntegrationProvider"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationConnector" ADD CONSTRAINT "IntegrationConnector_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationConnector" ADD CONSTRAINT "IntegrationConnector_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationMapping" ADD CONSTRAINT "IntegrationMapping_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationMapping" ADD CONSTRAINT "IntegrationMapping_tenantId_integrationConnectionId_fkey" FOREIGN KEY ("tenantId", "integrationConnectionId") REFERENCES "IntegrationConnection"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationSecret" ADD CONSTRAINT "IntegrationSecret_tenantId_backupSecretId_fkey" FOREIGN KEY ("tenantId", "backupSecretId") REFERENCES "IntegrationSecret"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationSecret" ADD CONSTRAINT "IntegrationSecret_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "IntegrationSecret" ADD CONSTRAINT "IntegrationSecret_tenantId_integrationConnectionId_fkey" FOREIGN KEY ("tenantId", "integrationConnectionId") REFERENCES "IntegrationConnection"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryAdjustment" ADD CONSTRAINT "InventoryAdjustment_tenantId_inventoryItemId_fkey" FOREIGN KEY ("tenantId", "inventoryItemId") REFERENCES "InventoryItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryAdjustment" ADD CONSTRAINT "InventoryAdjustment_tenantId_locationId_fkey" FOREIGN KEY ("tenantId", "locationId") REFERENCES "InventoryLocation"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryAttachment" ADD CONSTRAINT "InventoryAttachment_tenantId_inventoryItemId_fkey" FOREIGN KEY ("tenantId", "inventoryItemId") REFERENCES "InventoryItem"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryBin" ADD CONSTRAINT "InventoryBin_tenantId_locationId_fkey" FOREIGN KEY ("tenantId", "locationId") REFERENCES "InventoryLocation"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryCount" ADD CONSTRAINT "InventoryCount_tenantId_locationId_fkey" FOREIGN KEY ("tenantId", "locationId") REFERENCES "InventoryLocation"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryCountLine" ADD CONSTRAINT "InventoryCountLine_tenantId_inventoryCountId_fkey" FOREIGN KEY ("tenantId", "inventoryCountId") REFERENCES "InventoryCount"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryCountLine" ADD CONSTRAINT "InventoryCountLine_tenantId_inventoryItemId_fkey" FOREIGN KEY ("tenantId", "inventoryItemId") REFERENCES "InventoryItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryReservation" ADD CONSTRAINT "InventoryReservation_tenantId_inventoryItemId_fkey" FOREIGN KEY ("tenantId", "inventoryItemId") REFERENCES "InventoryItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryTransaction" ADD CONSTRAINT "InventoryTransaction_tenantId_inventoryItemId_fkey" FOREIGN KEY ("tenantId", "inventoryItemId") REFERENCES "InventoryItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryTransaction" ADD CONSTRAINT "InventoryTransaction_tenantId_locationId_fkey" FOREIGN KEY ("tenantId", "locationId") REFERENCES "InventoryLocation"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InventoryTransactionChain" ADD CONSTRAINT "InventoryTransactionChain_tenantId_transactionId_fkey" FOREIGN KEY ("tenantId", "transactionId") REFERENCES "InventoryTransaction"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_paymentTermId_fkey" FOREIGN KEY ("paymentTermId") REFERENCES "PaymentTerm"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_approvedByMemberId_fkey" FOREIGN KEY ("tenantId", "approvedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invoice" ADD CONSTRAINT "Invoice_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceAttachment" ADD CONSTRAINT "InvoiceAttachment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceAttachment" ADD CONSTRAINT "InvoiceAttachment_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceAttachment" ADD CONSTRAINT "InvoiceAttachment_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceLineItem" ADD CONSTRAINT "InvoiceLineItem_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceLineItem" ADD CONSTRAINT "InvoiceLineItem_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceLineItem" ADD CONSTRAINT "InvoiceLineItem_tenantId_sourceChangeOrderLineId_fkey" FOREIGN KEY ("tenantId", "sourceChangeOrderLineId") REFERENCES "ChangeOrderLine"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceLineItem" ADD CONSTRAINT "InvoiceLineItem_tenantId_sourceEstimateLineId_fkey" FOREIGN KEY ("tenantId", "sourceEstimateLineId") REFERENCES "EstimateLineItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceLineItem" ADD CONSTRAINT "InvoiceLineItem_tenantId_sourceProjectTaskId_fkey" FOREIGN KEY ("tenantId", "sourceProjectTaskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoicePayment" ADD CONSTRAINT "InvoicePayment_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoicePayment" ADD CONSTRAINT "InvoicePayment_tenantId_paymentId_fkey" FOREIGN KEY ("tenantId", "paymentId") REFERENCES "Payment"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceTax" ADD CONSTRAINT "InvoiceTax_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InvoiceTax" ADD CONSTRAINT "InvoiceTax_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobFamily" ADD CONSTRAINT "JobFamily_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobFamily" ADD CONSTRAINT "JobFamily_tenantId_parentFamilyId_fkey" FOREIGN KEY ("tenantId", "parentFamilyId") REFERENCES "JobFamily"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfile" ADD CONSTRAINT "JobProfile_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfile" ADD CONSTRAINT "JobProfile_tenantId_jobFamilyId_fkey" FOREIGN KEY ("tenantId", "jobFamilyId") REFERENCES "JobFamily"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfile" ADD CONSTRAINT "JobProfile_tenantId_payGradeId_fkey" FOREIGN KEY ("tenantId", "payGradeId") REFERENCES "Grade"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfileAssignment" ADD CONSTRAINT "JobProfileAssignment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfileAssignment" ADD CONSTRAINT "JobProfileAssignment_tenantId_jobProfileId_fkey" FOREIGN KEY ("tenantId", "jobProfileId") REFERENCES "JobProfile"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JobProfileAssignment" ADD CONSTRAINT "JobProfileAssignment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalEntry" ADD CONSTRAINT "JournalEntry_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalEntry" ADD CONSTRAINT "JournalEntry_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalEntry" ADD CONSTRAINT "JournalEntry_tenantId_originalEntryId_fkey" FOREIGN KEY ("tenantId", "originalEntryId") REFERENCES "JournalEntry"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalEntry" ADD CONSTRAINT "JournalEntry_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_taxJurisdictionId_fkey" FOREIGN KEY ("taxJurisdictionId") REFERENCES "TaxJurisdiction"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_taxRateId_fkey" FOREIGN KEY ("taxRateId") REFERENCES "TaxRate"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_customerId_fkey" FOREIGN KEY ("tenantId", "customerId") REFERENCES "Account"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_glAccountId_fkey" FOREIGN KEY ("tenantId", "glAccountId") REFERENCES "GLAccount"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_journalEntryId_fkey" FOREIGN KEY ("tenantId", "journalEntryId") REFERENCES "JournalEntry"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JournalLine" ADD CONSTRAINT "JournalLine_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "KPIAggregate" ADD CONSTRAINT "KPIAggregate_tenantId_cubeId_fkey" FOREIGN KEY ("tenantId", "cubeId") REFERENCES "SnapshotCube"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "KPIAggregate" ADD CONSTRAINT "KPIAggregate_tenantId_partitionId_fkey" FOREIGN KEY ("tenantId", "partitionId") REFERENCES "SnapshotCubePartition"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LeadActivity" ADD CONSTRAINT "LeadActivity_tenantId_leadId_fkey" FOREIGN KEY ("tenantId", "leadId") REFERENCES "Lead"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Leave" ADD CONSTRAINT "Leave_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Leave" ADD CONSTRAINT "Leave_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Leave" ADD CONSTRAINT "Leave_tenantId_parentLeaveId_fkey" FOREIGN KEY ("tenantId", "parentLeaveId") REFERENCES "Leave"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Leave" ADD CONSTRAINT "Leave_tenantId_requestedById_fkey" FOREIGN KEY ("tenantId", "requestedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Leave" ADD CONSTRAINT "Leave_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Location" ADD CONSTRAINT "Location_tenantId_costCenterId_fkey" FOREIGN KEY ("tenantId", "costCenterId") REFERENCES "CostCenter"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Location" ADD CONSTRAINT "Location_tenantId_facilityManagerId_fkey" FOREIGN KEY ("tenantId", "facilityManagerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Location" ADD CONSTRAINT "Location_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Location" ADD CONSTRAINT "Location_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LossInvestigationFinding" ADD CONSTRAINT "LossInvestigationFinding_tenantId_lossInvestigationId_fkey" FOREIGN KEY ("tenantId", "lossInvestigationId") REFERENCES "LossInvestigation"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Member" ADD CONSTRAINT "Member_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Member" ADD CONSTRAINT "Member_tenantId_invitedByMemberId_fkey" FOREIGN KEY ("tenantId", "invitedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Member" ADD CONSTRAINT "Member_tenantId_terminatedByMemberId_fkey" FOREIGN KEY ("tenantId", "terminatedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Member" ADD CONSTRAINT "Member_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberDocument" ADD CONSTRAINT "MemberDocument_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberDocument" ADD CONSTRAINT "MemberDocument_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberDocument" ADD CONSTRAINT "MemberDocument_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberDocument" ADD CONSTRAINT "MemberDocument_tenantId_verifiedById_fkey" FOREIGN KEY ("tenantId", "verifiedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_approvedByMemberId_fkey" FOREIGN KEY ("approvedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_assignedByMemberId_fkey" FOREIGN KEY ("assignedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_deactivatedByMemberId_fkey" FOREIGN KEY ("deactivatedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_delegatedToMemberId_fkey" FOREIGN KEY ("delegatedToMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_inheritedFromRoleId_fkey" FOREIGN KEY ("inheritedFromRoleId") REFERENCES "Role"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_roleId_fkey" FOREIGN KEY ("roleId") REFERENCES "Role"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberRole" ADD CONSTRAINT "MemberRole_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberSettings" ADD CONSTRAINT "MemberSettings_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MemberSettings" ADD CONSTRAINT "MemberSettings_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_channelId_fkey" FOREIGN KEY ("tenantId", "channelId") REFERENCES "Channel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_editedById_fkey" FOREIGN KEY ("tenantId", "editedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_flaggedById_fkey" FOREIGN KEY ("tenantId", "flaggedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_moderatedById_fkey" FOREIGN KEY ("tenantId", "moderatedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_parentMessageId_fkey" FOREIGN KEY ("tenantId", "parentMessageId") REFERENCES "Message"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Message" ADD CONSTRAINT "Message_tenantId_senderId_fkey" FOREIGN KEY ("tenantId", "senderId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageAttachment" ADD CONSTRAINT "MessageAttachment_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageAttachment" ADD CONSTRAINT "MessageAttachment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageAttachment" ADD CONSTRAINT "MessageAttachment_tenantId_messageId_fkey" FOREIGN KEY ("tenantId", "messageId") REFERENCES "Message"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageAttachment" ADD CONSTRAINT "MessageAttachment_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageRead" ADD CONSTRAINT "MessageRead_channelMemberId_fkey" FOREIGN KEY ("channelMemberId") REFERENCES "ChannelMember"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageRead" ADD CONSTRAINT "MessageRead_tenantId_channelId_fkey" FOREIGN KEY ("tenantId", "channelId") REFERENCES "Channel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageRead" ADD CONSTRAINT "MessageRead_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageRead" ADD CONSTRAINT "MessageRead_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MessageRead" ADD CONSTRAINT "MessageRead_tenantId_messageId_fkey" FOREIGN KEY ("tenantId", "messageId") REFERENCES "Message"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MetricSnapshot" ADD CONSTRAINT "MetricSnapshot_tenantId_cubeId_fkey" FOREIGN KEY ("tenantId", "cubeId") REFERENCES "SnapshotCube"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MetricSnapshot" ADD CONSTRAINT "MetricSnapshot_tenantId_partitionId_fkey" FOREIGN KEY ("tenantId", "partitionId") REFERENCES "SnapshotCubePartition"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Milestone" ADD CONSTRAINT "Milestone_tenantId_completedById_fkey" FOREIGN KEY ("tenantId", "completedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Milestone" ADD CONSTRAINT "Milestone_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Milestone" ADD CONSTRAINT "Milestone_tenantId_ownerId_fkey" FOREIGN KEY ("tenantId", "ownerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Milestone" ADD CONSTRAINT "Milestone_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Milestone" ADD CONSTRAINT "Milestone_tenantId_scheduleId_fkey" FOREIGN KEY ("tenantId", "scheduleId") REFERENCES "Schedule"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneDependency" ADD CONSTRAINT "MilestoneDependency_tenantId_dependentMilestoneId_fkey" FOREIGN KEY ("tenantId", "dependentMilestoneId") REFERENCES "Milestone"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneDependency" ADD CONSTRAINT "MilestoneDependency_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneDependency" ADD CONSTRAINT "MilestoneDependency_tenantId_prerequisiteMilestoneId_fkey" FOREIGN KEY ("tenantId", "prerequisiteMilestoneId") REFERENCES "Milestone"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneStakeholder" ADD CONSTRAINT "MilestoneStakeholder_tenantId_assignedById_fkey" FOREIGN KEY ("tenantId", "assignedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneStakeholder" ADD CONSTRAINT "MilestoneStakeholder_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneStakeholder" ADD CONSTRAINT "MilestoneStakeholder_tenantId_milestoneId_fkey" FOREIGN KEY ("tenantId", "milestoneId") REFERENCES "Milestone"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MilestoneStakeholder" ADD CONSTRAINT "MilestoneStakeholder_tenantId_stakeholderId_fkey" FOREIGN KEY ("tenantId", "stakeholderId") REFERENCES "Member"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "NumberSequence" ADD CONSTRAINT "NumberSequence_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Opportunity" ADD CONSTRAINT "Opportunity_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Opportunity" ADD CONSTRAINT "Opportunity_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Opportunity" ADD CONSTRAINT "Opportunity_tenantId_leadId_fkey" FOREIGN KEY ("tenantId", "leadId") REFERENCES "Lead"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Opportunity" ADD CONSTRAINT "Opportunity_tenantId_stageId_fkey" FOREIGN KEY ("tenantId", "stageId") REFERENCES "OpportunityStage"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OpportunityLineItem" ADD CONSTRAINT "OpportunityLineItem_priceListItemId_fkey" FOREIGN KEY ("priceListItemId") REFERENCES "PriceListItem"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OpportunityLineItem" ADD CONSTRAINT "OpportunityLineItem_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OpportunityLineItem" ADD CONSTRAINT "OpportunityLineItem_tenantId_opportunityId_fkey" FOREIGN KEY ("tenantId", "opportunityId") REFERENCES "Opportunity"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OrgUnit" ADD CONSTRAINT "OrgUnit_tenantId_costCenterId_fkey" FOREIGN KEY ("tenantId", "costCenterId") REFERENCES "CostCenter"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OrgUnit" ADD CONSTRAINT "OrgUnit_tenantId_departmentId_fkey" FOREIGN KEY ("tenantId", "departmentId") REFERENCES "Department"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OrgUnit" ADD CONSTRAINT "OrgUnit_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OrgUnit" ADD CONSTRAINT "OrgUnit_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "OrgUnit" ADD CONSTRAINT "OrgUnit_tenantId_parentUnitId_fkey" FOREIGN KEY ("tenantId", "parentUnitId") REFERENCES "OrgUnit"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PasswordResetToken" ADD CONSTRAINT "PasswordResetToken_invalidatedByMemberId_fkey" FOREIGN KEY ("invalidatedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PasswordResetToken" ADD CONSTRAINT "PasswordResetToken_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PasswordResetToken" ADD CONSTRAINT "PasswordResetToken_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PasswordResetToken" ADD CONSTRAINT "PasswordResetToken_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayCalendar" ADD CONSTRAINT "PayCalendar_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayCalendar" ADD CONSTRAINT "PayCalendar_tenantId_holidayCalendarId_fkey" FOREIGN KEY ("tenantId", "holidayCalendarId") REFERENCES "HolidayCalendar"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayGroup" ADD CONSTRAINT "PayGroup_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayGroup" ADD CONSTRAINT "PayGroup_tenantId_payCalendarId_fkey" FOREIGN KEY ("tenantId", "payCalendarId") REFERENCES "PayCalendar"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayGroupAssignment" ADD CONSTRAINT "PayGroupAssignment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayGroupAssignment" ADD CONSTRAINT "PayGroupAssignment_tenantId_payGroupId_fkey" FOREIGN KEY ("tenantId", "payGroupId") REFERENCES "PayGroup"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayGroupAssignment" ADD CONSTRAINT "PayGroupAssignment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayStatement" ADD CONSTRAINT "PayStatement_payrollRunId_fkey" FOREIGN KEY ("payrollRunId") REFERENCES "PayrollRun"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payment" ADD CONSTRAINT "Payment_paymentMethodId_fkey" FOREIGN KEY ("paymentMethodId") REFERENCES "PaymentMethod"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payment" ADD CONSTRAINT "Payment_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payment" ADD CONSTRAINT "Payment_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PaymentApplication" ADD CONSTRAINT "PaymentApplication_invoiceId_fkey" FOREIGN KEY ("invoiceId") REFERENCES "Invoice"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PaymentApplication" ADD CONSTRAINT "PaymentApplication_paymentId_fkey" FOREIGN KEY ("paymentId") REFERENCES "Payment"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PaymentMethodToken" ADD CONSTRAINT "PaymentMethodToken_paymentMethodId_fkey" FOREIGN KEY ("paymentMethodId") REFERENCES "PaymentMethod"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PaymentSchedule" ADD CONSTRAINT "PaymentSchedule_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PaymentSchedule" ADD CONSTRAINT "PaymentSchedule_tenantId_invoiceId_fkey" FOREIGN KEY ("tenantId", "invoiceId") REFERENCES "Invoice"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payout" ADD CONSTRAINT "Payout_tenantId_bankAccountId_fkey" FOREIGN KEY ("tenantId", "bankAccountId") REFERENCES "BankAccount"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payout" ADD CONSTRAINT "Payout_tenantId_paymentId_fkey" FOREIGN KEY ("tenantId", "paymentId") REFERENCES "Payment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payout" ADD CONSTRAINT "Payout_tenantId_processedById_fkey" FOREIGN KEY ("tenantId", "processedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollAdjustment" ADD CONSTRAINT "PayrollAdjustment_payrollRunId_fkey" FOREIGN KEY ("payrollRunId") REFERENCES "PayrollRun"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollAdjustment" ADD CONSTRAINT "PayrollAdjustment_tenantId_employeeId_fkey" FOREIGN KEY ("tenantId", "employeeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollItem" ADD CONSTRAINT "PayrollItem_payrollRunId_fkey" FOREIGN KEY ("payrollRunId") REFERENCES "PayrollRun"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollItem" ADD CONSTRAINT "PayrollItem_tenantId_employeeId_fkey" FOREIGN KEY ("tenantId", "employeeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollPayment" ADD CONSTRAINT "PayrollPayment_payrollRunId_fkey" FOREIGN KEY ("payrollRunId") REFERENCES "PayrollRun"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollPayment" ADD CONSTRAINT "PayrollPayment_tenantId_employeeId_fkey" FOREIGN KEY ("tenantId", "employeeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollRun" ADD CONSTRAINT "PayrollRun_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollRun" ADD CONSTRAINT "PayrollRun_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollRun" ADD CONSTRAINT "PayrollRun_tenantId_processedById_fkey" FOREIGN KEY ("tenantId", "processedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollTax" ADD CONSTRAINT "PayrollTax_payrollRunId_fkey" FOREIGN KEY ("payrollRunId") REFERENCES "PayrollRun"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PayrollTax" ADD CONSTRAINT "PayrollTax_tenantId_employeeId_fkey" FOREIGN KEY ("tenantId", "employeeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceGoal" ADD CONSTRAINT "PerformanceGoal_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceGoal" ADD CONSTRAINT "PerformanceGoal_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceGoal" ADD CONSTRAINT "PerformanceGoal_tenantId_performanceReviewId_fkey" FOREIGN KEY ("tenantId", "performanceReviewId") REFERENCES "PerformanceReview"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceGoal" ADD CONSTRAINT "PerformanceGoal_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceReview" ADD CONSTRAINT "PerformanceReview_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceReview" ADD CONSTRAINT "PerformanceReview_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceReview" ADD CONSTRAINT "PerformanceReview_tenantId_hrReviewedById_fkey" FOREIGN KEY ("tenantId", "hrReviewedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceReview" ADD CONSTRAINT "PerformanceReview_tenantId_reviewerId_fkey" FOREIGN KEY ("tenantId", "reviewerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PerformanceReview" ADD CONSTRAINT "PerformanceReview_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Permission" ADD CONSTRAINT "Permission_parentPermissionId_fkey" FOREIGN KEY ("parentPermissionId") REFERENCES "Permission"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PersonAddress" ADD CONSTRAINT "PersonAddress_personId_fkey" FOREIGN KEY ("personId") REFERENCES "Person"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PersonContactMethod" ADD CONSTRAINT "PersonContactMethod_personId_fkey" FOREIGN KEY ("personId") REFERENCES "Person"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PersonDocument" ADD CONSTRAINT "PersonDocument_personId_fkey" FOREIGN KEY ("personId") REFERENCES "Person"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PersonName" ADD CONSTRAINT "PersonName_personId_fkey" FOREIGN KEY ("personId") REFERENCES "Person"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Position" ADD CONSTRAINT "Position_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Position" ADD CONSTRAINT "Position_tenantId_gradeId_fkey" FOREIGN KEY ("tenantId", "gradeId") REFERENCES "Grade"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Position" ADD CONSTRAINT "Position_tenantId_jobProfileId_fkey" FOREIGN KEY ("tenantId", "jobProfileId") REFERENCES "JobProfile"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Position" ADD CONSTRAINT "Position_tenantId_reportsToId_fkey" FOREIGN KEY ("tenantId", "reportsToId") REFERENCES "Position"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionAssignment" ADD CONSTRAINT "PositionAssignment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionAssignment" ADD CONSTRAINT "PositionAssignment_tenantId_positionId_fkey" FOREIGN KEY ("tenantId", "positionId") REFERENCES "Position"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionAssignment" ADD CONSTRAINT "PositionAssignment_tenantId_reportsToPositionId_fkey" FOREIGN KEY ("tenantId", "reportsToPositionId") REFERENCES "Position"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionAssignment" ADD CONSTRAINT "PositionAssignment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionBudget" ADD CONSTRAINT "PositionBudget_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PositionBudget" ADD CONSTRAINT "PositionBudget_tenantId_positionId_fkey" FOREIGN KEY ("tenantId", "positionId") REFERENCES "Position"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PriceListItem" ADD CONSTRAINT "PriceListItem_priceListId_fkey" FOREIGN KEY ("priceListId") REFERENCES "PriceList"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_approvedByMemberId_fkey" FOREIGN KEY ("tenantId", "approvedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_clientAccountId_fkey" FOREIGN KEY ("tenantId", "clientAccountId") REFERENCES "Account"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_clientContactId_fkey" FOREIGN KEY ("tenantId", "clientContactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_contractTemplateId_fkey" FOREIGN KEY ("tenantId", "contractTemplateId") REFERENCES "ContractTemplate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_costCenterId_fkey" FOREIGN KEY ("tenantId", "costCenterId") REFERENCES "CostCenter"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_departmentId_fkey" FOREIGN KEY ("tenantId", "departmentId") REFERENCES "Department"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_finalApprovedByMemberId_fkey" FOREIGN KEY ("tenantId", "finalApprovedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_locationId_fkey" FOREIGN KEY ("tenantId", "locationId") REFERENCES "Location"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_orgUnitId_fkey" FOREIGN KEY ("tenantId", "orgUnitId") REFERENCES "OrgUnit"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_tenantId_termsTemplateId_fkey" FOREIGN KEY ("tenantId", "termsTemplateId") REFERENCES "TermsTemplate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Project" ADD CONSTRAINT "Project_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectBudgetLine" ADD CONSTRAINT "ProjectBudgetLine_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectDocument" ADD CONSTRAINT "ProjectDocument_tenantId_attachmentId_fkey" FOREIGN KEY ("tenantId", "attachmentId") REFERENCES "Attachment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectDocument" ADD CONSTRAINT "ProjectDocument_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectDocument" ADD CONSTRAINT "ProjectDocument_tenantId_uploaderId_fkey" FOREIGN KEY ("tenantId", "uploaderId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectExternalAccess" ADD CONSTRAINT "ProjectExternalAccess_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectFinancialSnapshot" ADD CONSTRAINT "ProjectFinancialSnapshot_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectInventoryTransaction" ADD CONSTRAINT "ProjectInventoryTransaction_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectIssue" ADD CONSTRAINT "ProjectIssue_tenantId_assigneeId_fkey" FOREIGN KEY ("tenantId", "assigneeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectIssue" ADD CONSTRAINT "ProjectIssue_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectLocation" ADD CONSTRAINT "ProjectLocation_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectMember" ADD CONSTRAINT "ProjectMember_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectMember" ADD CONSTRAINT "ProjectMember_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectNote" ADD CONSTRAINT "ProjectNote_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectPhase" ADD CONSTRAINT "ProjectPhase_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectReport" ADD CONSTRAINT "ProjectReport_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectRisk" ADD CONSTRAINT "ProjectRisk_tenantId_ownerId_fkey" FOREIGN KEY ("tenantId", "ownerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectRisk" ADD CONSTRAINT "ProjectRisk_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTask" ADD CONSTRAINT "ProjectTask_tenantId_phaseId_fkey" FOREIGN KEY ("tenantId", "phaseId") REFERENCES "ProjectPhase"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTask" ADD CONSTRAINT "ProjectTask_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTask" ADD CONSTRAINT "ProjectTask_tenantId_sourceChangeOrderLineId_fkey" FOREIGN KEY ("tenantId", "sourceChangeOrderLineId") REFERENCES "ChangeOrderLine"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTask" ADD CONSTRAINT "ProjectTask_tenantId_sourceEstimateLineItemId_fkey" FOREIGN KEY ("tenantId", "sourceEstimateLineItemId") REFERENCES "EstimateLineItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTask" ADD CONSTRAINT "ProjectTask_tenantId_wbsItemId_fkey" FOREIGN KEY ("tenantId", "wbsItemId") REFERENCES "WBSItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskAssignment" ADD CONSTRAINT "ProjectTaskAssignment_tenantId_assigneeId_fkey" FOREIGN KEY ("tenantId", "assigneeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskAssignment" ADD CONSTRAINT "ProjectTaskAssignment_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskAssignment" ADD CONSTRAINT "ProjectTaskAssignment_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskAttachment" ADD CONSTRAINT "ProjectTaskAttachment_tenantId_attachmentId_fkey" FOREIGN KEY ("tenantId", "attachmentId") REFERENCES "Attachment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskAttachment" ADD CONSTRAINT "ProjectTaskAttachment_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskChecklistItem" ADD CONSTRAINT "ProjectTaskChecklistItem_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskComment" ADD CONSTRAINT "ProjectTaskComment_tenantId_authoredById_fkey" FOREIGN KEY ("tenantId", "authoredById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskComment" ADD CONSTRAINT "ProjectTaskComment_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskDependency" ADD CONSTRAINT "ProjectTaskDependency_tenantId_predecessorTaskId_fkey" FOREIGN KEY ("tenantId", "predecessorTaskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ProjectTaskDependency" ADD CONSTRAINT "ProjectTaskDependency_tenantId_successorTaskId_fkey" FOREIGN KEY ("tenantId", "successorTaskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanSession" ADD CONSTRAINT "RoomScanSession_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanSession" ADD CONSTRAINT "RoomScanSession_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanSession" ADD CONSTRAINT "RoomScanSession_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanSession" ADD CONSTRAINT "RoomScanSession_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanSession" ADD CONSTRAINT "RoomScanSession_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanFile" ADD CONSTRAINT "RoomScanFile_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomScanFile" ADD CONSTRAINT "RoomScanFile_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "RoomScanSession"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "RoomScanSession"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_tenantId_estimateId_fkey" FOREIGN KEY ("tenantId", "estimateId") REFERENCES "Estimate"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomModel" ADD CONSTRAINT "RoomModel_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomMeasurement" ADD CONSTRAINT "RoomMeasurement_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomMeasurement" ADD CONSTRAINT "RoomMeasurement_tenantId_modelId_fkey" FOREIGN KEY ("tenantId", "modelId") REFERENCES "RoomModel"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomMeasurement" ADD CONSTRAINT "RoomMeasurement_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "RoomScanSession"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomObject" ADD CONSTRAINT "RoomObject_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomObject" ADD CONSTRAINT "RoomObject_tenantId_modelId_fkey" FOREIGN KEY ("tenantId", "modelId") REFERENCES "RoomModel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomSurface" ADD CONSTRAINT "RoomSurface_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomSurface" ADD CONSTRAINT "RoomSurface_tenantId_modelId_fkey" FOREIGN KEY ("tenantId", "modelId") REFERENCES "RoomModel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomAnnotation" ADD CONSTRAINT "RoomAnnotation_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomAnnotation" ADD CONSTRAINT "RoomAnnotation_tenantId_modelId_fkey" FOREIGN KEY ("tenantId", "modelId") REFERENCES "RoomModel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomAnnotation" ADD CONSTRAINT "RoomAnnotation_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomExport" ADD CONSTRAINT "RoomExport_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomExport" ADD CONSTRAINT "RoomExport_tenantId_modelId_fkey" FOREIGN KEY ("tenantId", "modelId") REFERENCES "RoomModel"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomExport" ADD CONSTRAINT "RoomExport_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomExport" ADD CONSTRAINT "RoomExport_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomPlanPreset" ADD CONSTRAINT "RoomPlanPreset_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomPlanPreset" ADD CONSTRAINT "RoomPlanPreset_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomPlanPreset" ADD CONSTRAINT "RoomPlanPreset_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomProcessingJob" ADD CONSTRAINT "RoomProcessingJob_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RoomProcessingJob" ADD CONSTRAINT "RoomProcessingJob_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "RoomScanSession"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PunchList" ADD CONSTRAINT "PunchList_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PunchListItem" ADD CONSTRAINT "PunchListItem_tenantId_assigneeId_fkey" FOREIGN KEY ("tenantId", "assigneeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PunchListItem" ADD CONSTRAINT "PunchListItem_tenantId_punchListId_fkey" FOREIGN KEY ("tenantId", "punchListId") REFERENCES "PunchList"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrder" ADD CONSTRAINT "PurchaseOrder_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrder" ADD CONSTRAINT "PurchaseOrder_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrder" ADD CONSTRAINT "PurchaseOrder_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrder" ADD CONSTRAINT "PurchaseOrder_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrder" ADD CONSTRAINT "PurchaseOrder_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderApproval" ADD CONSTRAINT "PurchaseOrderApproval_tenantId_approverId_fkey" FOREIGN KEY ("tenantId", "approverId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderApproval" ADD CONSTRAINT "PurchaseOrderApproval_tenantId_delegatedFrom_fkey" FOREIGN KEY ("tenantId", "delegatedFrom") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderApproval" ADD CONSTRAINT "PurchaseOrderApproval_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderApproval" ADD CONSTRAINT "PurchaseOrderApproval_tenantId_purchaseOrderId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderId") REFERENCES "PurchaseOrder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderLine" ADD CONSTRAINT "PurchaseOrderLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderLine" ADD CONSTRAINT "PurchaseOrderLine_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "PurchaseOrderLine" ADD CONSTRAINT "PurchaseOrderLine_tenantId_purchaseOrderId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderId") REFERENCES "PurchaseOrder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Quote" ADD CONSTRAINT "Quote_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Quote" ADD CONSTRAINT "Quote_tenantId_contactId_fkey" FOREIGN KEY ("tenantId", "contactId") REFERENCES "Contact"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Quote" ADD CONSTRAINT "Quote_tenantId_leadId_fkey" FOREIGN KEY ("tenantId", "leadId") REFERENCES "Lead"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteLineItem" ADD CONSTRAINT "QuoteLineItem_priceListItemId_fkey" FOREIGN KEY ("priceListItemId") REFERENCES "PriceListItem"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteLineItem" ADD CONSTRAINT "QuoteLineItem_tenantId_quoteId_fkey" FOREIGN KEY ("tenantId", "quoteId") REFERENCES "Quote"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFI" ADD CONSTRAINT "RFI_tenantId_assigneeId_fkey" FOREIGN KEY ("tenantId", "assigneeId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFI" ADD CONSTRAINT "RFI_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFI" ADD CONSTRAINT "RFI_tenantId_submitterId_fkey" FOREIGN KEY ("tenantId", "submitterId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFIReply" ADD CONSTRAINT "RFIReply_tenantId_authorId_fkey" FOREIGN KEY ("tenantId", "authorId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFIReply" ADD CONSTRAINT "RFIReply_tenantId_rfiId_fkey" FOREIGN KEY ("tenantId", "rfiId") REFERENCES "RFI"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQLine" ADD CONSTRAINT "RFQLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQLine" ADD CONSTRAINT "RFQLine_tenantId_rfqId_fkey" FOREIGN KEY ("tenantId", "rfqId") REFERENCES "RequestForQuote"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponse" ADD CONSTRAINT "RFQResponse_tenantId_awardedBy_fkey" FOREIGN KEY ("tenantId", "awardedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponse" ADD CONSTRAINT "RFQResponse_tenantId_evaluatedBy_fkey" FOREIGN KEY ("tenantId", "evaluatedBy") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponse" ADD CONSTRAINT "RFQResponse_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponse" ADD CONSTRAINT "RFQResponse_tenantId_rfqId_fkey" FOREIGN KEY ("tenantId", "rfqId") REFERENCES "RequestForQuote"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponse" ADD CONSTRAINT "RFQResponse_tenantId_vendorId_fkey" FOREIGN KEY ("tenantId", "vendorId") REFERENCES "Vendor"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponseLine" ADD CONSTRAINT "RFQResponseLine_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponseLine" ADD CONSTRAINT "RFQResponseLine_tenantId_purchaseOrderLineId_fkey" FOREIGN KEY ("tenantId", "purchaseOrderLineId") REFERENCES "PurchaseOrderLine"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponseLine" ADD CONSTRAINT "RFQResponseLine_tenantId_rfqLineId_fkey" FOREIGN KEY ("tenantId", "rfqLineId") REFERENCES "RFQLine"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RFQResponseLine" ADD CONSTRAINT "RFQResponseLine_tenantId_rfqResponseId_fkey" FOREIGN KEY ("tenantId", "rfqResponseId") REFERENCES "RFQResponse"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ReasonCode" ADD CONSTRAINT "ReasonCode_tenantId_departmentScope_fkey" FOREIGN KEY ("tenantId", "departmentScope") REFERENCES "Department"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ReasonCode" ADD CONSTRAINT "ReasonCode_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Reconciliation" ADD CONSTRAINT "Reconciliation_tenantId_bankAccountId_fkey" FOREIGN KEY ("tenantId", "bankAccountId") REFERENCES "BankAccount"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Reconciliation" ADD CONSTRAINT "Reconciliation_tenantId_reconciledById_fkey" FOREIGN KEY ("tenantId", "reconciledById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Reconciliation" ADD CONSTRAINT "Reconciliation_tenantId_reviewedById_fkey" FOREIGN KEY ("tenantId", "reviewedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Refund" ADD CONSTRAINT "Refund_tenantId_paymentId_fkey" FOREIGN KEY ("tenantId", "paymentId") REFERENCES "Payment"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Refund" ADD CONSTRAINT "Refund_tenantId_processedById_fkey" FOREIGN KEY ("tenantId", "processedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RequestForQuote" ADD CONSTRAINT "RequestForQuote_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RequestForQuote" ADD CONSTRAINT "RequestForQuote_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_assignedById_fkey" FOREIGN KEY ("tenantId", "assignedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_assignedToId_fkey" FOREIGN KEY ("tenantId", "assignedToId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_scheduleId_fkey" FOREIGN KEY ("tenantId", "scheduleId") REFERENCES "Schedule"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ResourceAllocation" ADD CONSTRAINT "ResourceAllocation_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ReturnReminderAttempt" ADD CONSTRAINT "ReturnReminderAttempt_tenantId_returnReminderId_fkey" FOREIGN KEY ("tenantId", "returnReminderId") REFERENCES "ReturnReminder"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Role" ADD CONSTRAINT "Role_parentRoleId_fkey" FOREIGN KEY ("parentRoleId") REFERENCES "Role"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Role" ADD CONSTRAINT "Role_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_approvedByMemberId_fkey" FOREIGN KEY ("approvedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_assignedByMemberId_fkey" FOREIGN KEY ("assignedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_permissionId_fkey" FOREIGN KEY ("permissionId") REFERENCES "Permission"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_revokedByMemberId_fkey" FOREIGN KEY ("revokedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_roleId_fkey" FOREIGN KEY ("roleId") REFERENCES "Role"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "RolePermission" ADD CONSTRAINT "RolePermission_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Schedule" ADD CONSTRAINT "Schedule_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ScheduleException" ADD CONSTRAINT "ScheduleException_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ScheduleException" ADD CONSTRAINT "ScheduleException_tenantId_scheduleId_fkey" FOREIGN KEY ("tenantId", "scheduleId") REFERENCES "Schedule"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccount" ADD CONSTRAINT "ServiceAccount_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccount" ADD CONSTRAINT "ServiceAccount_tenantId_ownerId_fkey" FOREIGN KEY ("tenantId", "ownerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccountKey" ADD CONSTRAINT "ServiceAccountKey_rotatedFromKeyId_fkey" FOREIGN KEY ("rotatedFromKeyId") REFERENCES "ServiceAccountKey"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccountKey" ADD CONSTRAINT "ServiceAccountKey_tenantId_createdById_fkey" FOREIGN KEY ("tenantId", "createdById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccountKey" ADD CONSTRAINT "ServiceAccountKey_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ServiceAccountKey" ADD CONSTRAINT "ServiceAccountKey_tenantId_serviceAccountId_fkey" FOREIGN KEY ("tenantId", "serviceAccountId") REFERENCES "ServiceAccount"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Session" ADD CONSTRAINT "Session_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Session" ADD CONSTRAINT "Session_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Session" ADD CONSTRAINT "Session_terminatedByMemberId_fkey" FOREIGN KEY ("terminatedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Session" ADD CONSTRAINT "Session_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureArtifact" ADD CONSTRAINT "SignatureArtifact_tenantId_envelopeId_fkey" FOREIGN KEY ("tenantId", "envelopeId") REFERENCES "ESignatureEnvelope"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureArtifact" ADD CONSTRAINT "SignatureArtifact_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureArtifact" ADD CONSTRAINT "SignatureArtifact_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureArtifact" ADD CONSTRAINT "SignatureArtifact_tenantId_parentArtifactId_fkey" FOREIGN KEY ("tenantId", "parentArtifactId") REFERENCES "SignatureArtifact"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureArtifact" ADD CONSTRAINT "SignatureArtifact_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "SignatureSession"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureEvent" ADD CONSTRAINT "SignatureEvent_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureEvent" ADD CONSTRAINT "SignatureEvent_tenantId_signedById_fkey" FOREIGN KEY ("tenantId", "signedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureIntent" ADD CONSTRAINT "SignatureIntent_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureIntent" ADD CONSTRAINT "SignatureIntent_tenantId_recipientId_fkey" FOREIGN KEY ("tenantId", "recipientId") REFERENCES "ESignatureRecipient"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureIntent" ADD CONSTRAINT "SignatureIntent_tenantId_sessionId_fkey" FOREIGN KEY ("tenantId", "sessionId") REFERENCES "SignatureSession"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureSession" ADD CONSTRAINT "SignatureSession_tenantId_envelopeId_fkey" FOREIGN KEY ("tenantId", "envelopeId") REFERENCES "ESignatureEnvelope"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureSession" ADD CONSTRAINT "SignatureSession_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SignatureSession" ADD CONSTRAINT "SignatureSession_tenantId_recipientId_fkey" FOREIGN KEY ("tenantId", "recipientId") REFERENCES "ESignatureRecipient"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SnapshotCubePartition" ADD CONSTRAINT "SnapshotCubePartition_tenantId_cubeId_fkey" FOREIGN KEY ("tenantId", "cubeId") REFERENCES "SnapshotCube"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Submittal" ADD CONSTRAINT "Submittal_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SubmittalApproval" ADD CONSTRAINT "SubmittalApproval_tenantId_submittalId_fkey" FOREIGN KEY ("tenantId", "submittalId") REFERENCES "Submittal"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SubmittalItem" ADD CONSTRAINT "SubmittalItem_tenantId_reviewerId_fkey" FOREIGN KEY ("tenantId", "reviewerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SubmittalItem" ADD CONSTRAINT "SubmittalItem_tenantId_submittalId_fkey" FOREIGN KEY ("tenantId", "submittalId") REFERENCES "Submittal"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SyncJob" ADD CONSTRAINT "SyncJob_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SyncJob" ADD CONSTRAINT "SyncJob_tenantId_integrationConnectionId_fkey" FOREIGN KEY ("tenantId", "integrationConnectionId") REFERENCES "IntegrationConnection"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SyncJob" ADD CONSTRAINT "SyncJob_tenantId_parentJobId_fkey" FOREIGN KEY ("tenantId", "parentJobId") REFERENCES "SyncJob"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SyncLog" ADD CONSTRAINT "SyncLog_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SyncLog" ADD CONSTRAINT "SyncLog_tenantId_syncJobId_fkey" FOREIGN KEY ("tenantId", "syncJobId") REFERENCES "SyncJob"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_tenantId_approvalSignatureEventId_fkey" FOREIGN KEY ("tenantId", "approvalSignatureEventId") REFERENCES "SignatureEvent"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_tenantId_scheduleId_fkey" FOREIGN KEY ("tenantId", "scheduleId") REFERENCES "Schedule"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Task" ADD CONSTRAINT "Task_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAssignment" ADD CONSTRAINT "TaskAssignment_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAssignment" ADD CONSTRAINT "TaskAssignment_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAssignment" ADD CONSTRAINT "TaskAssignment_tenantId_signatureEventId_fkey" FOREIGN KEY ("tenantId", "signatureEventId") REFERENCES "SignatureEvent"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAssignment" ADD CONSTRAINT "TaskAssignment_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAttachment" ADD CONSTRAINT "TaskAttachment_tenantId_documentGroupId_fkey" FOREIGN KEY ("tenantId", "documentGroupId") REFERENCES "DocumentGroup"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAttachment" ADD CONSTRAINT "TaskAttachment_tenantId_fileObjectId_fkey" FOREIGN KEY ("tenantId", "fileObjectId") REFERENCES "FileObject"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAttachment" ADD CONSTRAINT "TaskAttachment_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskAttachment" ADD CONSTRAINT "TaskAttachment_tenantId_uploadedById_fkey" FOREIGN KEY ("tenantId", "uploadedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskChecklistItem" ADD CONSTRAINT "TaskChecklistItem_tenantId_completedById_fkey" FOREIGN KEY ("tenantId", "completedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskChecklistItem" ADD CONSTRAINT "TaskChecklistItem_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskChecklistItem" ADD CONSTRAINT "TaskChecklistItem_tenantId_validatedById_fkey" FOREIGN KEY ("tenantId", "validatedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskChecklistItem" ADD CONSTRAINT "TaskChecklistItem_tenantId_validationSignatureEventId_fkey" FOREIGN KEY ("tenantId", "validationSignatureEventId") REFERENCES "SignatureEvent"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskDependency" ADD CONSTRAINT "TaskDependency_tenantId_predecessorId_fkey" FOREIGN KEY ("tenantId", "predecessorId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaskDependency" ADD CONSTRAINT "TaskDependency_tenantId_successorId_fkey" FOREIGN KEY ("tenantId", "successorId") REFERENCES "Task"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaxJurisdiction" ADD CONSTRAINT "TaxJurisdiction_parentJurisdictionId_fkey" FOREIGN KEY ("parentJurisdictionId") REFERENCES "TaxJurisdiction"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaxRate" ADD CONSTRAINT "TaxRate_glAccountId_fkey" FOREIGN KEY ("glAccountId") REFERENCES "GLAccount"("id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TaxRate" ADD CONSTRAINT "TaxRate_taxJurisdictionId_fkey" FOREIGN KEY ("taxJurisdictionId") REFERENCES "TaxJurisdiction"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Actor" ADD CONSTRAINT "Actor_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Actor" ADD CONSTRAINT "Actor_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Actor" ADD CONSTRAINT "Actor_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantAuditLog" ADD CONSTRAINT "TenantAuditLog_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantBillingAccount" ADD CONSTRAINT "TenantBillingAccount_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantEvent" ADD CONSTRAINT "TenantEvent_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantFeatureFlag" ADD CONSTRAINT "TenantFeatureFlag_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantMetrics" ADD CONSTRAINT "TenantMetrics_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantPriceList" ADD CONSTRAINT "TenantPriceList_priceListId_fkey" FOREIGN KEY ("priceListId") REFERENCES "PriceList"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantPriceOverride" ADD CONSTRAINT "TenantPriceOverride_priceListItemId_fkey" FOREIGN KEY ("priceListItemId") REFERENCES "PriceListItem"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AccountInsurance" ADD CONSTRAINT "AccountInsurance_tenantId_accountId_fkey" FOREIGN KEY ("tenantId", "accountId") REFERENCES "Account"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteApproval" ADD CONSTRAINT "QuoteApproval_tenantId_quoteId_fkey" FOREIGN KEY ("tenantId", "quoteId") REFERENCES "Quote"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteApproval" ADD CONSTRAINT "QuoteApproval_tenantId_requestedById_fkey" FOREIGN KEY ("tenantId", "requestedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteApproval" ADD CONSTRAINT "QuoteApproval_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuoteApproval" ADD CONSTRAINT "QuoteApproval_tenantId_escalatedToId_fkey" FOREIGN KEY ("tenantId", "escalatedToId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Territory" ADD CONSTRAINT "Territory_tenantId_managerId_fkey" FOREIGN KEY ("tenantId", "managerId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "CustomerSegment" ADD CONSTRAINT "CustomerSegment_tenantPriceListId_fkey" FOREIGN KEY ("tenantPriceListId") REFERENCES "TenantPriceList"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantSettings" ADD CONSTRAINT "TenantSettings_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantSubscription" ADD CONSTRAINT "TenantSubscription_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TenantUsageRecord" ADD CONSTRAINT "TenantUsageRecord_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Timesheet" ADD CONSTRAINT "Timesheet_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Timesheet" ADD CONSTRAINT "Timesheet_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Timesheet" ADD CONSTRAINT "Timesheet_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Timesheet" ADD CONSTRAINT "Timesheet_tenantId_submittedById_fkey" FOREIGN KEY ("tenantId", "submittedById") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Timesheet" ADD CONSTRAINT "Timesheet_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetApproval" ADD CONSTRAINT "TimesheetApproval_tenantId_approverId_fkey" FOREIGN KEY ("tenantId", "approverId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetApproval" ADD CONSTRAINT "TimesheetApproval_tenantId_timesheetId_fkey" FOREIGN KEY ("tenantId", "timesheetId") REFERENCES "Timesheet"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetEntry" ADD CONSTRAINT "TimesheetEntry_tenantId_budgetLineId_fkey" FOREIGN KEY ("tenantId", "budgetLineId") REFERENCES "ProjectBudgetLine"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetEntry" ADD CONSTRAINT "TimesheetEntry_tenantId_memberId_fkey" FOREIGN KEY ("tenantId", "memberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetEntry" ADD CONSTRAINT "TimesheetEntry_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "ProjectTask"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TimesheetEntry" ADD CONSTRAINT "TimesheetEntry_tenantId_timesheetId_fkey" FOREIGN KEY ("tenantId", "timesheetId") REFERENCES "Timesheet"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TrainingEnrollment" ADD CONSTRAINT "TrainingEnrollment_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TrainingEnrollment" ADD CONSTRAINT "TrainingEnrollment_tenantId_workerId_fkey" FOREIGN KEY ("tenantId", "workerId") REFERENCES "Worker"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "User" ADD CONSTRAINT "User_invitedByUserId_fkey" FOREIGN KEY ("invitedByUserId") REFERENCES "User"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "User" ADD CONSTRAINT "User_createdByActorId_fkey" FOREIGN KEY ("createdByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "User" ADD CONSTRAINT "User_updatedByActorId_fkey" FOREIGN KEY ("updatedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "User" ADD CONSTRAINT "User_deletedByActorId_fkey" FOREIGN KEY ("deletedByActorId") REFERENCES "Actor"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserDevice" ADD CONSTRAINT "UserDevice_memberId_fkey" FOREIGN KEY ("memberId") REFERENCES "Member"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserDevice" ADD CONSTRAINT "UserDevice_revokedByMemberId_fkey" FOREIGN KEY ("revokedByMemberId") REFERENCES "Member"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserDevice" ADD CONSTRAINT "UserDevice_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserDevice" ADD CONSTRAINT "UserDevice_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Vendor" ADD CONSTRAINT "Vendor_tenantId_approvedById_fkey" FOREIGN KEY ("tenantId", "approvedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Vendor" ADD CONSTRAINT "Vendor_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "VendorContact" ADD CONSTRAINT "VendorContact_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "VendorContact" ADD CONSTRAINT "VendorContact_vendorId_fkey" FOREIGN KEY ("vendorId") REFERENCES "Vendor"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "VendorDocument" ADD CONSTRAINT "VendorDocument_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "VendorDocument" ADD CONSTRAINT "VendorDocument_tenantId_verifiedById_fkey" FOREIGN KEY ("tenantId", "verifiedById") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "VendorDocument" ADD CONSTRAINT "VendorDocument_vendorId_fkey" FOREIGN KEY ("vendorId") REFERENCES "Vendor"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "WBSItem" ADD CONSTRAINT "WBSItem_tenantId_parentId_fkey" FOREIGN KEY ("tenantId", "parentId") REFERENCES "WBSItem"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "WBSItem" ADD CONSTRAINT "WBSItem_tenantId_phaseId_fkey" FOREIGN KEY ("tenantId", "phaseId") REFERENCES "ProjectPhase"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "WBSItem" ADD CONSTRAINT "WBSItem_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Worker" ADD CONSTRAINT "Worker_personId_fkey" FOREIGN KEY ("personId") REFERENCES "Person"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Worker" ADD CONSTRAINT "Worker_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_data_policies" ADD CONSTRAINT "external_data_policies_approvalWorkflowId_fkey" FOREIGN KEY ("approvalWorkflowId") REFERENCES "ApprovalRule"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_data_policies" ADD CONSTRAINT "external_data_policies_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_share_audits" ADD CONSTRAINT "external_share_audits_policyId_fkey" FOREIGN KEY ("policyId") REFERENCES "external_data_policies"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_share_audits" ADD CONSTRAINT "external_share_audits_redactionRuleId_fkey" FOREIGN KEY ("redactionRuleId") REFERENCES "redaction_rules"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_share_audits" ADD CONSTRAINT "external_share_audits_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "external_share_audits" ADD CONSTRAINT "external_share_audits_watermarkPolicyId_fkey" FOREIGN KEY ("watermarkPolicyId") REFERENCES "watermark_policies"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "redaction_rules" ADD CONSTRAINT "redaction_rules_policyId_fkey" FOREIGN KEY ("policyId") REFERENCES "external_data_policies"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "redaction_rules" ADD CONSTRAINT "redaction_rules_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "watermark_policies" ADD CONSTRAINT "watermark_policies_policyId_fkey" FOREIGN KEY ("policyId") REFERENCES "external_data_policies"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "watermark_policies" ADD CONSTRAINT "watermark_policies_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alert_deliveries" ADD CONSTRAINT "weather_alert_deliveries_tenantId_alertId_fkey" FOREIGN KEY ("tenantId", "alertId") REFERENCES "weather_alerts"("tenantId", "id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alert_deliveries" ADD CONSTRAINT "weather_alert_deliveries_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alert_deliveries" ADD CONSTRAINT "weather_alert_deliveries_tenantId_targetChannelId_fkey" FOREIGN KEY ("tenantId", "targetChannelId") REFERENCES "Channel"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alert_deliveries" ADD CONSTRAINT "weather_alert_deliveries_tenantId_targetMemberId_fkey" FOREIGN KEY ("tenantId", "targetMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alert_deliveries" ADD CONSTRAINT "weather_alert_deliveries_tenantId_watchId_fkey" FOREIGN KEY ("tenantId", "watchId") REFERENCES "weather_watches"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_ackByMemberId_fkey" FOREIGN KEY ("tenantId", "ackByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_approvalRequestId_fkey" FOREIGN KEY ("tenantId", "approvalRequestId") REFERENCES "ApprovalRequest"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_duplicateOfAlertId_fkey" FOREIGN KEY ("tenantId", "duplicateOfAlertId") REFERENCES "weather_alerts"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_alerts" ADD CONSTRAINT "weather_alerts_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_forecast_cache" ADD CONSTRAINT "weather_forecast_cache_providerCode_fkey" FOREIGN KEY ("providerCode") REFERENCES "weather_providers"("providerCode") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_approvedByMemberId_fkey" FOREIGN KEY ("tenantId", "approvedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_relatedAlertId_fkey" FOREIGN KEY ("tenantId", "relatedAlertId") REFERENCES "weather_alerts"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_reportedByMemberId_fkey" FOREIGN KEY ("tenantId", "reportedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_incidents" ADD CONSTRAINT "weather_incidents_tenantId_verifiedByMemberId_fkey" FOREIGN KEY ("tenantId", "verifiedByMemberId") REFERENCES "Member"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_risk_factors" ADD CONSTRAINT "weather_risk_factors_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_escalationChannelId_fkey" FOREIGN KEY ("tenantId", "escalationChannelId") REFERENCES "Channel"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_fkey" FOREIGN KEY ("tenantId") REFERENCES "Tenant"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_overrideRiskPolicyId_fkey" FOREIGN KEY ("tenantId", "overrideRiskPolicyId") REFERENCES "weather_risk_factors"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_primaryChannelId_fkey" FOREIGN KEY ("tenantId", "primaryChannelId") REFERENCES "Channel"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_projectId_fkey" FOREIGN KEY ("tenantId", "projectId") REFERENCES "Project"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "weather_watches" ADD CONSTRAINT "weather_watches_tenantId_taskId_fkey" FOREIGN KEY ("tenantId", "taskId") REFERENCES "Task"("tenantId", "id") ON DELETE NO ACTION ON UPDATE CASCADE;
