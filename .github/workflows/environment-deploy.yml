name: Environment Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      version:
        description: "Version/Ref to deploy (optional)"
        required: false
        type: string

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.setenv.outputs.env-name }}
    steps:
      - name: Resolve environment
        id: setenv
        run: |
          echo "env-name=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

  validate:
    name: Validate build
    runs-on: ubuntu-latest
    needs: prepare
    environment:
      name: ${{ needs.prepare.outputs.env-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

  deploy:
    name: Deploy placeholder
    runs-on: ubuntu-latest
    needs: [prepare, validate]
    environment:
      name: ${{ needs.prepare.outputs.env-name }}
      url: ${{ steps.meta.outputs.env-url }}
    steps:
      - name: Determine environment metadata
        id: meta
        run: |
          env_name="${{ needs.prepare.outputs.env-name }}"
          case "$env_name" in
            dev)
              echo "env-url=https://dev.example.com" >> $GITHUB_OUTPUT
              ;;
            staging)
              echo "env-url=https://staging.example.com" >> $GITHUB_OUTPUT
              ;;
            prod)
              echo "env-url=https://example.com" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Placeholder deploy step
        run: |
          echo "Deploying ${{ github.sha }} to ${{ needs.prepare.outputs.env-name }}"
          echo "This step is a placeholder. Add your real deploy steps here."
